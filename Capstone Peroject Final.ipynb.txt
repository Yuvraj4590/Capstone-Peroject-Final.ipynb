{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "48dd5c7f-90f4-4e97-bb96-6f3252cf0e1e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SI. No.</th>\n",
       "      <th>States/UTs</th>\n",
       "      <th>State/UT-Wise Total Number of Road Accidents during - 2013</th>\n",
       "      <th>State/UT-Wise Total Number of Road Accidents during - 2014</th>\n",
       "      <th>State/UT-Wise Total Number of Road Accidents during - 2015</th>\n",
       "      <th>State/UT-Wise Total Number of Road Accidents during - 2016</th>\n",
       "      <th>Share of States/UTs in Total Number of Road Accidents - 2013</th>\n",
       "      <th>Share of States/UTs in Total Number of Road Accidents - 2014</th>\n",
       "      <th>Share of States/UTs in Total Number of Road Accidents - 2015</th>\n",
       "      <th>Share of States/UTs in Total Number of Road Accidents - 2016</th>\n",
       "      <th>Total Number of Accidents Per Lakh Population - 2013</th>\n",
       "      <th>Total Number of Accidents Per Lakh Population - 2014</th>\n",
       "      <th>Total Number of Accidents Per Lakh Population - 2015</th>\n",
       "      <th>Total Number of Accidents Per Lakh Population - 2016</th>\n",
       "      <th>Total Number of Road Accidents per 10,000 Vehicles - 2013</th>\n",
       "      <th>Total Number of Road Accidents per 10,000 Vehicles - 2014</th>\n",
       "      <th>Total Number of Road Accidents per 10,000 Vehicles - 2015</th>\n",
       "      <th>Total Number of Road Accidents per 10,000 Km of Roads - 2013</th>\n",
       "      <th>Total Number of Road Accidents per 10,000 Km of Roads - 2014</th>\n",
       "      <th>Total Number of Road Accidents per 10,000 Km of Roads - 2015</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>43482.0</td>\n",
       "      <td>24440</td>\n",
       "      <td>24258</td>\n",
       "      <td>24888</td>\n",
       "      <td>8.9</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.8</td>\n",
       "      <td>5.2</td>\n",
       "      <td>50.4</td>\n",
       "      <td>28.1</td>\n",
       "      <td>27.7</td>\n",
       "      <td>28.2</td>\n",
       "      <td>34.3</td>\n",
       "      <td>34.9</td>\n",
       "      <td>30.8</td>\n",
       "      <td>1661.8</td>\n",
       "      <td>1372.3</td>\n",
       "      <td>1355.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>308.0</td>\n",
       "      <td>205</td>\n",
       "      <td>284</td>\n",
       "      <td>249</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>24.3</td>\n",
       "      <td>16.0</td>\n",
       "      <td>21.9</td>\n",
       "      <td>19.0</td>\n",
       "      <td>20.4</td>\n",
       "      <td>13.6</td>\n",
       "      <td>18.8</td>\n",
       "      <td>109.6</td>\n",
       "      <td>83.8</td>\n",
       "      <td>112.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Assam</td>\n",
       "      <td>7211.0</td>\n",
       "      <td>7144</td>\n",
       "      <td>6959</td>\n",
       "      <td>7435</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>1.5</td>\n",
       "      <td>23.0</td>\n",
       "      <td>22.5</td>\n",
       "      <td>21.7</td>\n",
       "      <td>22.9</td>\n",
       "      <td>38.4</td>\n",
       "      <td>32.2</td>\n",
       "      <td>27.7</td>\n",
       "      <td>250.3</td>\n",
       "      <td>227.8</td>\n",
       "      <td>213.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Bihar</td>\n",
       "      <td>10200.0</td>\n",
       "      <td>9556</td>\n",
       "      <td>9555</td>\n",
       "      <td>8222</td>\n",
       "      <td>2.1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.9</td>\n",
       "      <td>1.7</td>\n",
       "      <td>10.2</td>\n",
       "      <td>9.4</td>\n",
       "      <td>9.3</td>\n",
       "      <td>7.9</td>\n",
       "      <td>28.2</td>\n",
       "      <td>23.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>517.1</td>\n",
       "      <td>455.6</td>\n",
       "      <td>463.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Chhattisgarh</td>\n",
       "      <td>13657.0</td>\n",
       "      <td>13821</td>\n",
       "      <td>14446</td>\n",
       "      <td>13580</td>\n",
       "      <td>2.8</td>\n",
       "      <td>2.8</td>\n",
       "      <td>2.9</td>\n",
       "      <td>2.8</td>\n",
       "      <td>54.8</td>\n",
       "      <td>54.8</td>\n",
       "      <td>56.5</td>\n",
       "      <td>52.5</td>\n",
       "      <td>39.7</td>\n",
       "      <td>35.7</td>\n",
       "      <td>33.5</td>\n",
       "      <td>1530.4</td>\n",
       "      <td>1461.3</td>\n",
       "      <td>1481.1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  SI. No.         States/UTs  \\\n",
       "0       1     Andhra Pradesh   \n",
       "1       2  Arunachal Pradesh   \n",
       "2       3              Assam   \n",
       "3       4              Bihar   \n",
       "4       5       Chhattisgarh   \n",
       "\n",
       "   State/UT-Wise Total Number of Road Accidents during - 2013  \\\n",
       "0                                            43482.0            \n",
       "1                                              308.0            \n",
       "2                                             7211.0            \n",
       "3                                            10200.0            \n",
       "4                                            13657.0            \n",
       "\n",
       "   State/UT-Wise Total Number of Road Accidents during - 2014  \\\n",
       "0                                              24440            \n",
       "1                                                205            \n",
       "2                                               7144            \n",
       "3                                               9556            \n",
       "4                                              13821            \n",
       "\n",
       "   State/UT-Wise Total Number of Road Accidents during - 2015  \\\n",
       "0                                              24258            \n",
       "1                                                284            \n",
       "2                                               6959            \n",
       "3                                               9555            \n",
       "4                                              14446            \n",
       "\n",
       "   State/UT-Wise Total Number of Road Accidents during - 2016  \\\n",
       "0                                              24888            \n",
       "1                                                249            \n",
       "2                                               7435            \n",
       "3                                               8222            \n",
       "4                                              13580            \n",
       "\n",
       "   Share of States/UTs in Total Number of Road Accidents - 2013  \\\n",
       "0                                                8.9              \n",
       "1                                                0.1              \n",
       "2                                                1.5              \n",
       "3                                                2.1              \n",
       "4                                                2.8              \n",
       "\n",
       "   Share of States/UTs in Total Number of Road Accidents - 2014  \\\n",
       "0                                                5.0              \n",
       "1                                                0.0              \n",
       "2                                                1.5              \n",
       "3                                                2.0              \n",
       "4                                                2.8              \n",
       "\n",
       "   Share of States/UTs in Total Number of Road Accidents - 2015  \\\n",
       "0                                                4.8              \n",
       "1                                                0.1              \n",
       "2                                                1.4              \n",
       "3                                                1.9              \n",
       "4                                                2.9              \n",
       "\n",
       "   Share of States/UTs in Total Number of Road Accidents - 2016  \\\n",
       "0                                                5.2              \n",
       "1                                                0.1              \n",
       "2                                                1.5              \n",
       "3                                                1.7              \n",
       "4                                                2.8              \n",
       "\n",
       "   Total Number of Accidents Per Lakh Population - 2013  \\\n",
       "0                                               50.4      \n",
       "1                                               24.3      \n",
       "2                                               23.0      \n",
       "3                                               10.2      \n",
       "4                                               54.8      \n",
       "\n",
       "   Total Number of Accidents Per Lakh Population - 2014  \\\n",
       "0                                               28.1      \n",
       "1                                               16.0      \n",
       "2                                               22.5      \n",
       "3                                                9.4      \n",
       "4                                               54.8      \n",
       "\n",
       "   Total Number of Accidents Per Lakh Population - 2015  \\\n",
       "0                                               27.7      \n",
       "1                                               21.9      \n",
       "2                                               21.7      \n",
       "3                                                9.3      \n",
       "4                                               56.5      \n",
       "\n",
       "   Total Number of Accidents Per Lakh Population - 2016  \\\n",
       "0                                               28.2      \n",
       "1                                               19.0      \n",
       "2                                               22.9      \n",
       "3                                                7.9      \n",
       "4                                               52.5      \n",
       "\n",
       "   Total Number of Road Accidents per 10,000 Vehicles - 2013  \\\n",
       "0                                               34.3           \n",
       "1                                               20.4           \n",
       "2                                               38.4           \n",
       "3                                               28.2           \n",
       "4                                               39.7           \n",
       "\n",
       "   Total Number of Road Accidents per 10,000 Vehicles - 2014  \\\n",
       "0                                               34.9           \n",
       "1                                               13.6           \n",
       "2                                               32.2           \n",
       "3                                               23.0           \n",
       "4                                               35.7           \n",
       "\n",
       "   Total Number of Road Accidents per 10,000 Vehicles - 2015  \\\n",
       "0                                               30.8           \n",
       "1                                               18.8           \n",
       "2                                               27.7           \n",
       "3                                               20.0           \n",
       "4                                               33.5           \n",
       "\n",
       "   Total Number of Road Accidents per 10,000 Km of Roads - 2013  \\\n",
       "0                                             1661.8              \n",
       "1                                              109.6              \n",
       "2                                              250.3              \n",
       "3                                              517.1              \n",
       "4                                             1530.4              \n",
       "\n",
       "   Total Number of Road Accidents per 10,000 Km of Roads - 2014  \\\n",
       "0                                             1372.3              \n",
       "1                                               83.8              \n",
       "2                                              227.8              \n",
       "3                                              455.6              \n",
       "4                                             1461.3              \n",
       "\n",
       "   Total Number of Road Accidents per 10,000 Km of Roads - 2015  \n",
       "0                                             1355.0             \n",
       "1                                              112.0             \n",
       "2                                              213.1             \n",
       "3                                              463.8             \n",
       "4                                             1481.1             "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Load the Excel file\n",
    "file_path = 'roadAccStats13-16.xlsx'\n",
    "data = pd.read_excel(file_path)\n",
    "\n",
    "# Display the first few rows of the dataset\n",
    "(data.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "4c53df69-a283-44c2-8fcb-6d5b645f7571",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Percentage of Road Accidents (2013-2016):\n",
      "2013: 24.85%\n",
      "2014: 25.00%\n",
      "2015: 25.61%\n",
      "2016: 24.55%\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1100x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "##The percentage of road accidents during all the years\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "\n",
    "file_path = 'roadAccStats13-16.xlsx'\n",
    "data = pd.read_excel(file_path)\n",
    "\n",
    "# Extract accident data for the years 2013 to 2016\n",
    "\n",
    "accidents_2013 = data['State/UT-Wise Total Number of Road Accidents during - 2013'].sum()\n",
    "accidents_2014 = data['State/UT-Wise Total Number of Road Accidents during - 2014'].sum()\n",
    "accidents_2015 = data['State/UT-Wise Total Number of Road Accidents during - 2015'].sum()\n",
    "accidents_2016 = data['State/UT-Wise Total Number of Road Accidents during - 2016'].sum()\n",
    "\n",
    "# Create a dictionary to store total accidents\n",
    "total_accidents = {  '2013': accidents_2013,'2014': accidents_2014, '2015': accidents_2015, '2016': accidents_2016}\n",
    "\n",
    "# Calculate the overall total accidents\n",
    "overall_total = sum(total_accidents.values())\n",
    "\n",
    "# Calculate percentages for each year\n",
    "percentage_accidents = {year: (count / overall_total) * 100 for year, count in total_accidents.items()}\n",
    "\n",
    "# Display the percentage of accidents\n",
    "print(\"Percentage of Road Accidents (2013-2016):\")\n",
    "for year, percentage in percentage_accidents.items():\n",
    "    print(f\"{year}: {percentage:.2f}%\")\n",
    "\n",
    "# Optional: Plot the results\n",
    "plt.figure(figsize=(11, 7))\n",
    "plt.bar(percentage_accidents.keys(), percentage_accidents.values(), color='blue')\n",
    "plt.title('Percentage of Road Accidents (2013-2016)')\n",
    "plt.xlabel('Year')\n",
    "plt.ylabel('Percentage of Total Accidents')\n",
    "plt.ylim(0, max(percentage_accidents.values()) + 5)\n",
    "plt.grid(axis='y')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "09abd58c-5a6c-46fe-a0a0-f88eef4dd680",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1100x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "## Mean Accidents per 1L population for each year\n",
    "\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "\n",
    "# Extract the relevant columns for accidents per lakh population\n",
    "accidents_per_lakh_2013 = data['Total Number of Accidents Per Lakh Population - 2013'].mean()\n",
    "accidents_per_lakh_2014 = data['Total Number of Accidents Per Lakh Population - 2014'].mean()\n",
    "accidents_per_lakh_2015 = data['Total Number of Accidents Per Lakh Population - 2015'].mean()\n",
    "accidents_per_lakh_2016 = data['Total Number of Accidents Per Lakh Population - 2016'].mean()\n",
    "\n",
    "# Create a dictionary to store mean accidents per lakh population\n",
    "mean_accidents_per_lakh = {'2013': accidents_per_lakh_2013,'2014': accidents_per_lakh_2014,\n",
    "                           '2015': accidents_per_lakh_2015,\n",
    "                           '2016': accidents_per_lakh_2016}\n",
    "\n",
    "# Display the mean accidents per lakh population\n",
    "(\"Mean Accidents per 1 Lakh Population (2013-2016):\")\n",
    "for year, mean in mean_accidents_per_lakh.items():(f\"{year}: {mean:.2f}\")\n",
    "\n",
    "# Optional: Plot the results\n",
    "plt.figure(figsize=(11, 5))\n",
    "plt.bar(mean_accidents_per_lakh.keys(), mean_accidents_per_lakh.values(), color='orange')\n",
    "plt.title('Mean Accidents per 1 Lakh Population (2013-2016)')\n",
    "plt.xlabel('Year')\n",
    "plt.ylabel('Mean Accidents per 1 Lakh Population')\n",
    "plt.ylim(0, max(mean_accidents_per_lakh.values()) + 5)\n",
    "plt.grid(axis='y')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "f7f16846-540b-4d08-9c2c-99a5d2faf046",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (3157870853.py, line 22)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[43], line 22\u001b[0;36m\u001b[0m\n\u001b[0;31m    Display the results\u001b[0m\n\u001b[0m            ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "##The highest number of accident states and least number of accident states.\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "# Calculate the total number of accidents for each state\n",
    "total_accidents_by_state = data[['States/UTs', 'State/UT-Wise Total Number of Road Accidents during - 2013',\n",
    "                                   'State/UT-Wise Total Number of Road Accidents during - 2014',\n",
    "                                   'State/UT-Wise Total Number of Road Accidents during - 2015',\n",
    "                                   'State/UT-Wise Total Number of Road Accidents during - 2016']].copy()\n",
    "\n",
    "# Sum the accidents for all years\n",
    "total_accidents_by_state['Total Accidents'] = total_accidents_by_state[\n",
    "    ['State/UT-Wise Total Number of Road Accidents during - 2013',\n",
    "     'State/UT-Wise Total Number of Road Accidents during - 2014',\n",
    "     'State/UT-Wise Total Number of Road Accidents during - 2015',\n",
    "     'State/UT-Wise Total Number of Road Accidents during - 2016']].sum(axis=1)\n",
    "\n",
    "# The states with the highest and lowest accidents\n",
    "\n",
    "highest_accident_state = total_accidents_by_state.loc [total_accidents_by_state['Total Accidents'].idxmax()]\n",
    "lowest_accident_state = total_accidents_by_state.loc[total_accidents_by_state['Total Accidents'].idxmin()]\n",
    "\n",
    "# Display the results\n",
    "Display the results\n",
    "\n",
    "(\"State with the Highest Number of Accidents:\")\n",
    "(f\"State: {highest_accident_state['States/UTs']}, Total Accidents: {highest_accident_state['Total Accidents']}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "0b33e008-75be-4af0-9a21-6416e20a9b16",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'State: Lakshadweep, Total Accidents: 6.0'"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(\"\\nState with the Lowest Number of Accidents:\")\n",
    "(f\"State: {lowest_accident_state['States/UTs']}, Total Accidents: {lowest_accident_state['Total Accidents']}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "829ef3e7-ed3e-4679-b68b-28063d3fc6a7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Aggregated Deaths by Gender:\n",
      "           States/UTs  Year  Offenders (Driver/Pedestrian) Died_Male  \\\n",
      "0       A & N Islands  2014                                       32   \n",
      "1      Andhra Pradesh  2014                                     7931   \n",
      "2   Arunachal Pradesh  2014                                      218   \n",
      "3               Assam  2014                                     1859   \n",
      "4               Bihar  2014                                     2824   \n",
      "5          Chandigarh  2014                                       19   \n",
      "6        Chhattisgarh  2014                                     4959   \n",
      "7          D&N Haveli  2014                                      141   \n",
      "8         Daman & Diu  2014                                        0   \n",
      "9            Delhi UT  2014                                      214   \n",
      "10                Goa  2014                                      296   \n",
      "11            Gujarat  2014                                     6520   \n",
      "12            Haryana  2014                                      846   \n",
      "13   Himachal Pradesh  2014                                     1659   \n",
      "14    Jammu & Kashmir  2014                                     1142   \n",
      "15          Jharkhand  2014                                     4351   \n",
      "16          Karnataka  2014                                     7252   \n",
      "17             Kerala  2014                                     2544   \n",
      "18        Lakshadweep  2014                                        0   \n",
      "19     Madhya Pradesh  2014                                     8553   \n",
      "20        Maharashtra  2014                                    13134   \n",
      "21            Manipur  2014                                       91   \n",
      "22          Meghalaya  2014                                      305   \n",
      "23            Mizoram  2014                                      112   \n",
      "24           Nagaland  2014                                       30   \n",
      "25             Odisha  2014                                     4541   \n",
      "26         Puducherry  2014                                      366   \n",
      "27             Punjab  2014                                     5072   \n",
      "28          Rajasthan  2014                                     7879   \n",
      "29             Sikkim  2014                                      111   \n",
      "30         Tamil Nadu  2014                                    14928   \n",
      "31          Telangana  2014                                     9110   \n",
      "32  Total (All India)  2014                                   121016   \n",
      "33     Total (States)  2014                                   120244   \n",
      "34        Total (UTs)  2014                                      772   \n",
      "35            Tripura  2014                                      121   \n",
      "36      Uttar Pradesh  2014                                     7847   \n",
      "37        Uttarakhand  2014                                      497   \n",
      "38        West Bengal  2014                                     5512   \n",
      "\n",
      "    Offenders (Driver/Pedestrian) Died_Female  \\\n",
      "0                                           0   \n",
      "1                                         496   \n",
      "2                                          16   \n",
      "3                                           4   \n",
      "4                                         200   \n",
      "5                                           0   \n",
      "6                                         344   \n",
      "7                                          33   \n",
      "8                                           0   \n",
      "9                                          15   \n",
      "10                                         24   \n",
      "11                                        357   \n",
      "12                                         43   \n",
      "13                                         93   \n",
      "14                                        104   \n",
      "15                                        378   \n",
      "16                                        106   \n",
      "17                                        411   \n",
      "18                                          0   \n",
      "19                                        999   \n",
      "20                                        451   \n",
      "21                                          3   \n",
      "22                                         24   \n",
      "23                                          4   \n",
      "24                                          0   \n",
      "25                                        101   \n",
      "26                                         43   \n",
      "27                                        282   \n",
      "28                                        313   \n",
      "29                                         12   \n",
      "30                                       1905   \n",
      "31                                       1783   \n",
      "32                                      10446   \n",
      "33                                      10355   \n",
      "34                                         91   \n",
      "35                                          0   \n",
      "36                                       1331   \n",
      "37                                         80   \n",
      "38                                        491   \n",
      "\n",
      "    Offenders (Driver/Pedestrian) Died_Transgender  \\\n",
      "0                                                0   \n",
      "1                                                0   \n",
      "2                                                0   \n",
      "3                                                0   \n",
      "4                                                0   \n",
      "5                                                0   \n",
      "6                                                0   \n",
      "7                                                0   \n",
      "8                                                0   \n",
      "9                                                0   \n",
      "10                                               0   \n",
      "11                                               0   \n",
      "12                                               0   \n",
      "13                                               0   \n",
      "14                                               0   \n",
      "15                                               0   \n",
      "16                                               0   \n",
      "17                                               0   \n",
      "18                                               0   \n",
      "19                                               0   \n",
      "20                                               0   \n",
      "21                                               0   \n",
      "22                                               0   \n",
      "23                                               0   \n",
      "24                                               0   \n",
      "25                                               0   \n",
      "26                                               0   \n",
      "27                                               0   \n",
      "28                                               0   \n",
      "29                                               0   \n",
      "30                                               0   \n",
      "31                                               0   \n",
      "32                                               0   \n",
      "33                                               0   \n",
      "34                                               0   \n",
      "35                                               0   \n",
      "36                                               0   \n",
      "37                                               0   \n",
      "38                                               0   \n",
      "\n",
      "    Offenders (Driver/Pedestrian) Died_Total  Victims Died_Male  \\\n",
      "0                                         32                 42   \n",
      "1                                       8427              17217   \n",
      "2                                        234                146   \n",
      "3                                       1863               6329   \n",
      "4                                       3024              12241   \n",
      "5                                         19                375   \n",
      "6                                       5303               7835   \n",
      "7                                        174                 31   \n",
      "8                                          0                 48   \n",
      "9                                        229               5330   \n",
      "10                                       320                697   \n",
      "11                                      6877              19337   \n",
      "12                                       889              15322   \n",
      "13                                      1752               3051   \n",
      "14                                      1246               1830   \n",
      "15                                      4729               3504   \n",
      "16                                      7358              26811   \n",
      "17                                      2955               9879   \n",
      "18                                         0                  0   \n",
      "19                                      9552              21658   \n",
      "20                                     13585              31800   \n",
      "21                                        94                489   \n",
      "22                                       329                272   \n",
      "23                                       116                170   \n",
      "24                                        30                 20   \n",
      "25                                      4642               8428   \n",
      "26                                       409                271   \n",
      "27                                      5354              10005   \n",
      "28                                      8192              25958   \n",
      "29                                       123                 70   \n",
      "30                                     16833              35535   \n",
      "31                                     10893              13336   \n",
      "32                                    131462             339525   \n",
      "33                                    130599             333428   \n",
      "34                                       863               6097   \n",
      "35                                       121                490   \n",
      "36                                      9178              45159   \n",
      "37                                       577               1203   \n",
      "38                                      6003              14636   \n",
      "\n",
      "    Victims Died_Female  Victims Died_Transgender  Victims Died_Total  \n",
      "0                     8                         0                  50  \n",
      "1                  4229                         0               21446  \n",
      "2                    47                         0                 193  \n",
      "3                  1271                         0                7600  \n",
      "4                  2815                         0               15056  \n",
      "5                    64                         0                 439  \n",
      "6                  1674                         0                9509  \n",
      "7                    15                         0                  46  \n",
      "8                    10                         0                  58  \n",
      "9                   569                         0                5899  \n",
      "10                  137                         0                 834  \n",
      "11                 3828                         0               23165  \n",
      "12                 1896                         0               17218  \n",
      "13                  635                         0                3686  \n",
      "14                  576                         0                2406  \n",
      "15                 1173                         0                4677  \n",
      "16                 5438                         0               32249  \n",
      "17                 2161                         0               12040  \n",
      "18                    0                         0                   0  \n",
      "19                 3890                         0               25548  \n",
      "20                 6208                         6               38014  \n",
      "21                   62                         0                 551  \n",
      "22                   67                         0                 339  \n",
      "23                   74                         0                 244  \n",
      "24                   32                         0                  52  \n",
      "25                 1959                         0               10387  \n",
      "26                   39                         0                 310  \n",
      "27                 2286                         0               12291  \n",
      "28                 4677                         0               30635  \n",
      "29                   49                         0                 119  \n",
      "30                 6933                         0               42468  \n",
      "31                 1902                         0               15238  \n",
      "32                66665                        65              406255  \n",
      "33                65960                        65              399453  \n",
      "34                  705                         0                6802  \n",
      "35                  102                         0                 592  \n",
      "36                 8250                        59               53468  \n",
      "37                  171                         0                1374  \n",
      "38                 3418                         0               18054  \n"
     ]
    }
   ],
   "source": [
    "# Offenders and victims who died according to gender as well the as the total deaths\n",
    "import pandas as pd\n",
    "\n",
    "# Load the Excel file\n",
    "file_path = 'Details_of_road_accident_deaths_by_situation_state_2014.csv'  # Update the file path as needed\n",
    "data = pd.read_csv(file_path)\n",
    "\n",
    "\n",
    "# Group by 'States/UTs' and 'Year' and sum the relevant columns\n",
    "grouped_data = data.groupby(['States/UTs', 'Year']).agg({'Offenders (Driver/Pedestrian) Died_Male': 'sum',\n",
    "    'Offenders (Driver/Pedestrian) Died_Female': 'sum',\n",
    "    'Offenders (Driver/Pedestrian) Died_Transgender': 'sum',\n",
    "    'Offenders (Driver/Pedestrian) Died_Total': 'sum',\n",
    "    'Victims Died_Male': 'sum',\n",
    "    'Victims Died_Female': 'sum',\n",
    "    'Victims Died_Transgender': 'sum',\n",
    "    'Victims Died_Total': 'sum'}).reset_index()\n",
    "\n",
    "# Display the aggregated results\n",
    "print(\"Aggregated Deaths by Gender:\")\n",
    "print(grouped_data)\n",
    "\n",
    "# Optional: Save the aggregated data to a new Excel file\n",
    "grouped_data.to_csv('aggregated_deaths_by_gender.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "f30ce0fa-eaa8-45d5-b55c-8dd48f6fc191",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State/ UT</th>\n",
       "      <th>Percentage Non-wearing Helmet - Male</th>\n",
       "      <th>Percentage Non-wearing Helmet - Female</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>96.226415</td>\n",
       "      <td>3.773585</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>71.428571</td>\n",
       "      <td>28.571429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chhattisgarh</td>\n",
       "      <td>92.708333</td>\n",
       "      <td>7.291667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Goa</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>97.169811</td>\n",
       "      <td>2.830189</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>98.750000</td>\n",
       "      <td>1.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Himachal Pradesh</td>\n",
       "      <td>98.400000</td>\n",
       "      <td>1.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Jharkhand</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Karnataka</td>\n",
       "      <td>97.131148</td>\n",
       "      <td>2.868852</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Kerala</td>\n",
       "      <td>80.572110</td>\n",
       "      <td>19.427890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>86.086957</td>\n",
       "      <td>13.913043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>92.452830</td>\n",
       "      <td>7.547170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Manipur</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Meghalaya</td>\n",
       "      <td>66.666667</td>\n",
       "      <td>33.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Mizoram</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Nagaland</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Orissa</td>\n",
       "      <td>91.803279</td>\n",
       "      <td>8.196721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Punjab</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>93.404255</td>\n",
       "      <td>6.595745</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Sikkim</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Tamil Nadu</td>\n",
       "      <td>92.446043</td>\n",
       "      <td>7.553957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Telangana</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Tripura</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Uttarakhand</td>\n",
       "      <td>97.674419</td>\n",
       "      <td>2.325581</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>74.017810</td>\n",
       "      <td>25.982190</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>A &amp; N Islands</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Chandigarh</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>D &amp; N Haveli</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Daman &amp; Diu</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Puducherry</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>Total</td>\n",
       "      <td>85.012333</td>\n",
       "      <td>14.987667</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            State/ UT  Percentage Non-wearing Helmet - Male  \\\n",
       "0      Andhra Pradesh                             96.226415   \n",
       "1   Arunachal Pradesh                             71.428571   \n",
       "2               Assam                                   NaN   \n",
       "3               Bihar                                   NaN   \n",
       "4        Chhattisgarh                             92.708333   \n",
       "5                 Goa                            100.000000   \n",
       "6             Gujarat                             97.169811   \n",
       "7             Haryana                             98.750000   \n",
       "8    Himachal Pradesh                             98.400000   \n",
       "9     Jammu & Kashmir                                   NaN   \n",
       "10          Jharkhand                            100.000000   \n",
       "11          Karnataka                             97.131148   \n",
       "12             Kerala                             80.572110   \n",
       "13     Madhya Pradesh                             86.086957   \n",
       "14        Maharashtra                             92.452830   \n",
       "15            Manipur                                   NaN   \n",
       "16          Meghalaya                             66.666667   \n",
       "17            Mizoram                                   NaN   \n",
       "18           Nagaland                                   NaN   \n",
       "19             Orissa                             91.803279   \n",
       "20             Punjab                                   NaN   \n",
       "21          Rajasthan                             93.404255   \n",
       "22             Sikkim                                   NaN   \n",
       "23         Tamil Nadu                             92.446043   \n",
       "24          Telangana                                   NaN   \n",
       "25            Tripura                                   NaN   \n",
       "26        Uttarakhand                             97.674419   \n",
       "27      Uttar Pradesh                             74.017810   \n",
       "28        West Bengal                            100.000000   \n",
       "29      A & N Islands                                   NaN   \n",
       "30         Chandigarh                                   NaN   \n",
       "31       D & N Haveli                                   NaN   \n",
       "32        Daman & Diu                                   NaN   \n",
       "33              Delhi                            100.000000   \n",
       "34        Lakshadweep                                   NaN   \n",
       "35         Puducherry                            100.000000   \n",
       "36              Total                             85.012333   \n",
       "\n",
       "    Percentage Non-wearing Helmet - Female  \n",
       "0                                 3.773585  \n",
       "1                                28.571429  \n",
       "2                                      NaN  \n",
       "3                                      NaN  \n",
       "4                                 7.291667  \n",
       "5                                 0.000000  \n",
       "6                                 2.830189  \n",
       "7                                 1.250000  \n",
       "8                                 1.600000  \n",
       "9                                      NaN  \n",
       "10                                0.000000  \n",
       "11                                2.868852  \n",
       "12                               19.427890  \n",
       "13                               13.913043  \n",
       "14                                7.547170  \n",
       "15                                     NaN  \n",
       "16                               33.333333  \n",
       "17                                     NaN  \n",
       "18                                     NaN  \n",
       "19                                8.196721  \n",
       "20                                     NaN  \n",
       "21                                6.595745  \n",
       "22                                     NaN  \n",
       "23                                7.553957  \n",
       "24                                     NaN  \n",
       "25                                     NaN  \n",
       "26                                2.325581  \n",
       "27                               25.982190  \n",
       "28                                0.000000  \n",
       "29                                     NaN  \n",
       "30                                     NaN  \n",
       "31                                     NaN  \n",
       "32                                     NaN  \n",
       "33                                0.000000  \n",
       "34                                     NaN  \n",
       "35                                0.000000  \n",
       "36                               14.987667  "
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#The number of accidents happening per state from the year 2003 to 2016.\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "# Calculate the total non-wearing helmet deaths by gender\n",
    "data['Percentage Non-wearing Helmet - Male'] = (data['Non-wearing of Helmet - Male'] / data['Non-wearing of Helmet - Total']) * 100\n",
    "data['Percentage Non-wearing Helmet - Female'] = (data['Non-wearing of Helmet - Female'] / data['Non-wearing of Helmet - Total']) * 100\n",
    "\n",
    "# Prepare the result DataFrame\n",
    "result = data[['State/ UT', 'Percentage Non-wearing Helmet - Male', 'Percentage Non-wearing Helmet - Female']].copy()\n",
    "\n",
    "\n",
    "\n",
    "# Save the results to a CSV file\n",
    "result.to_csv('percentage_deaths_non_wearing_helmet.csv', index=False)\n",
    "\n",
    "# Display the results\n",
    "(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d2c3ae20-dc3d-4fad-a536-dcc4b6ce0208",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>States/UTs</th>\n",
       "      <th>Total</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>151931.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>1309.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>24870.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>50702.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chhattisgarh</td>\n",
       "      <td>37893.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Goa</td>\n",
       "      <td>3944.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>86816.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>54007.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Himachal Pradesh</td>\n",
       "      <td>9632.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>10420.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Jharkhand</td>\n",
       "      <td>29774.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Karnataka</td>\n",
       "      <td>110860.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Kerala</td>\n",
       "      <td>49763.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>88164.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>147697.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Manipur</td>\n",
       "      <td>1681.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Meghalaya</td>\n",
       "      <td>1805.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Mizoram</td>\n",
       "      <td>830.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Nagaland</td>\n",
       "      <td>588.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Odisha</td>\n",
       "      <td>42023.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Punjab</td>\n",
       "      <td>47830.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>106805.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Sikkim</td>\n",
       "      <td>645.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Tamil Nadu</td>\n",
       "      <td>172444.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Telangana</td>\n",
       "      <td>38744.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Tripura</td>\n",
       "      <td>2656.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Uttarakhand</td>\n",
       "      <td>9648.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>166253.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>62822.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Andaman &amp; Nicobar Islands</td>\n",
       "      <td>279.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Chandigarh</td>\n",
       "      <td>1835.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Dadra &amp; Nagar Haveli</td>\n",
       "      <td>652.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Daman &amp; Diu</td>\n",
       "      <td>353.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>26862.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Puducherry</td>\n",
       "      <td>2849.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>All India</td>\n",
       "      <td>1511029.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   States/UTs      Total\n",
       "0              Andhra Pradesh   151931.0\n",
       "1           Arunachal Pradesh     1309.0\n",
       "2                       Assam    24870.0\n",
       "3                       Bihar    50702.0\n",
       "4                Chhattisgarh    37893.0\n",
       "5                         Goa     3944.0\n",
       "6                     Gujarat    86816.0\n",
       "7                     Haryana    54007.0\n",
       "8            Himachal Pradesh     9632.0\n",
       "9             Jammu & Kashmir    10420.0\n",
       "10                  Jharkhand    29774.0\n",
       "11                  Karnataka   110860.0\n",
       "12                     Kerala    49763.0\n",
       "13             Madhya Pradesh    88164.0\n",
       "14                Maharashtra   147697.0\n",
       "15                    Manipur     1681.0\n",
       "16                  Meghalaya     1805.0\n",
       "17                    Mizoram      830.0\n",
       "18                   Nagaland      588.0\n",
       "19                     Odisha    42023.0\n",
       "20                     Punjab    47830.0\n",
       "21                  Rajasthan   106805.0\n",
       "22                     Sikkim      645.0\n",
       "23                 Tamil Nadu   172444.0\n",
       "24                  Telangana    38744.0\n",
       "25                    Tripura     2656.0\n",
       "26                Uttarakhand     9648.0\n",
       "27              Uttar Pradesh   166253.0\n",
       "28                West Bengal    62822.0\n",
       "29  Andaman & Nicobar Islands      279.0\n",
       "30                 Chandigarh     1835.0\n",
       "31       Dadra & Nagar Haveli      652.0\n",
       "32                Daman & Diu      353.0\n",
       "33                      Delhi    26862.0\n",
       "34                Lakshadweep        2.0\n",
       "35                 Puducherry     2849.0\n",
       "36                  All India  1511029.0"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##The number of accidents happening per state from the year 2003 to 2016.\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "# Data for the number of accidents per state from 2003 to 2016\n",
    "data = {\n",
    "    'States/UTs': ['Andhra Pradesh', 'Arunachal Pradesh', 'Assam', 'Bihar', 'Chhattisgarh',\n",
    "        'Goa', 'Gujarat', 'Haryana', 'Himachal Pradesh', 'Jammu & Kashmir',\n",
    "        'Jharkhand', 'Karnataka', 'Kerala', 'Madhya Pradesh', 'Maharashtra',\n",
    "        'Manipur', 'Meghalaya', 'Mizoram', 'Nagaland', 'Odisha', 'Punjab',\n",
    "        'Rajasthan', 'Sikkim', 'Tamil Nadu', 'Telangana', 'Tripura',\n",
    "        'Uttarakhand', 'Uttar Pradesh', 'West Bengal', 'Andaman & Nicobar Islands',\n",
    "        'Chandigarh', 'Dadra & Nagar Haveli', 'Daman & Diu', 'Delhi',\n",
    "        'Lakshadweep', 'Puducherry', 'All India'],\n",
    "    '2003': [8616, 65, 1120, 2138, 1788, 207, 4335, 2722, 507, 609,\n",
    "             1576, 5493, 2650, 3868, 8159, 114, 137, 71, 43, 1954, 2352,\n",
    "             5050, 22, 8393, np.nan, 147, 513, 7038, 1793, 12, 132, 34, 19,\n",
    "             1730, 0, 182, 73589],\n",
    "    '2004': [9343, 79, 1177, 1579, 1892, 281, 4671, 3032, 527, 669,\n",
    "             1685, 5786, 2824, 4171, 8555, 87, 108, 40, 42, 2227, 2317,\n",
    "             5488, 26, 8733, np.nan, 166, 617, 8739, 2246, 15, 144, 46, 23,\n",
    "             1846, 0, 176, 79357],\n",
    "    '2005': [9126, 63, 1420, 1462, 2049, 220, 4922, 3010, 549, 660,\n",
    "             1784, 6093, 2956, 4620, 8867, 115, 106, 52, 48, 2279, 2447,\n",
    "             5815, 53, 8843, np.nan, 188, 622, 8832, 4073, 17, 133, 51, 21,\n",
    "             1771, 0, 224, 83491],\n",
    "    '2006': [11378, 87, 1627, 2315, 2288, 290, 5435, 3483, 577, 646,\n",
    "             1784, 7092, 3390, 4846, 9796, 127, 125, 53, 60, 2456, 2724,\n",
    "             6252, 40, 10055, np.nan, 187, 758, 9592, 3896, 18, 134, 43, 24,\n",
    "             2129, 1, 209, 93917],\n",
    "    '2007': [11885, 81, 1483, 3074, 2496, 300, 5958, 3980, 659, 717,\n",
    "             2078, 7875, 3465, 5457, 9802, 103, 107, 44, 74, 2726, 2664,\n",
    "             7036, 31, 11034, np.nan, 195, 773, 10256, 4232, 21, 142, 61, 29,\n",
    "             2081, 0, 242, 101161],\n",
    "    '2008': [12233, 90, 1641, 3514, 2600, 294, 6132, 4071, 568, 694,\n",
    "             1829, 7848, 3632, 5861, 10789, 109, 103, 53, 57, 2838, 2840,\n",
    "             7241, 32, 11813, np.nan, 190, 717, 11652, 4671, 22, 144, 62, 29,\n",
    "             2015, 0, 207, 106591],\n",
    "    '2009': [12676, 114, 1735, 4038, 2566, 298, 6112, 4227, 760, 773,\n",
    "             2042, 7717, 3556, 6415, 10143, 99, 124, 51, 33, 3043, 3216,\n",
    "             8010, 55, 12727, np.nan, 216, 676, 12679, 4135, 31, 129, 43, 32,\n",
    "             2272, 1, 214, 110993],\n",
    "    '2010': [13932, 108, 1924, 4513, 2668, 307, 6648, 4168, 766, 814,\n",
    "             2256, 8354, 3646, 7044, 11188, 121, 131, 63, 24, 3388, 3282,\n",
    "             8143, 32, 14241, np.nan, 224, 740, 13282, 4975, 25, 130, 61, 30,\n",
    "             2104, 0, 224, 119558],\n",
    "    '2011': [13783, 96, 2015, 4676, 2659, 314, 7045, 4255, 735, 846,\n",
    "             2279, 8091, 3896, 6992, 11557, 142, 147, 59, 34, 3220, 4483,\n",
    "             8354, 48, 14359, 6316, 219, 642, 13004, 5107, 17, 129, 61, 33,\n",
    "             2007, 0, 230, 121618],\n",
    "    '2012': [13560, 94, 2011, 4706, 2783, 271, 6896, 3963, 732, 809,\n",
    "             2540, 8485, 4013, 7120, 11994, 138, 161, 69, 24, 3285, 4359,\n",
    "             8550, 66, 14504, 6316, 229, 686, 13293, 4911, 24, 130, 30, 26,\n",
    "             1822, 0, 178, 123093],\n",
    "    '2013': [13175, 120, 2162, 4612, 3059, 249, 6786, 4095, 736, 809,\n",
    "             2425, 8870, 3972, 7565, 11336, 144, 124, 77, 34, 3481, 4164,\n",
    "             8785, 66, 14504, 6316, 219, 642, 13077, 5077, 32, 130, 30, 30,\n",
    "             1778, 0, 223, 122589],\n",
    "    '2014': [7277, 92, 2169, 4505, 3570, 283, 7063, 4214, 831, 886,\n",
    "             2259, 9485, 3823, 7554, 11528, 149, 127, 88, 68, 3506, 4285,\n",
    "             9334, 53, 14165, 6569, 168, 713, 13842, 5489, 20, 130, 53, 15,\n",
    "             1629, 0, 145, 125828],\n",
    "    '2015': [7524, 117, 2122, 4771, 3710, 302, 7332, 4430, 843, 749,\n",
    "             2619, 9888, 3937, 8412, 12009, 116, 153, 50, 23, 3855, 4357,\n",
    "             9306, 61, 14524, 6617, 154, 765, 15218, 5774, 14, 116, 39, 19,\n",
    "             1795, 0, 190, 125081],\n",
    "    '2016': [7423, 103, 2264, 4799, 3765, 328, 7481, 4357, 842, 739,\n",
    "             2618, 9783, 4003, 8239, 11974, 117, 152, 60, 24, 3765, 4340,\n",
    "             9441, 60, 14549, 6610, 154, 784, 15749, 6443, 11, 112, 38, 23,\n",
    "             1883, 0, 205, 124163]}\n",
    "\n",
    "# Create DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Total accidents for each state/UT from 2003 to 2016\n",
    "# Replace NaN with 0 for summation\n",
    "df.fillna(0, inplace=True)\n",
    "\n",
    "# Convert all columns to numeric (if not already)\n",
    "df.iloc[:, 1:] = df.iloc[:, 1:].apply(pd.to_numeric)\n",
    "\n",
    "# Total of accidents\n",
    "df['Total'] = df.iloc[:, 1:].sum(axis=1)\n",
    "\n",
    "# Display the DataFrame with totals\n",
    "(df[['States/UTs', 'Total']])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "d6d1a2ac-9e5c-49a6-9875-c61ac1ef631b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>S.No</th>\n",
       "      <th>State/UT</th>\n",
       "      <th>Single Lane - Accident - 2014</th>\n",
       "      <th>Single Lane - Accident - 2014 per 1L people</th>\n",
       "      <th>Single Lane - Killed - 2014</th>\n",
       "      <th>Single Lane - Killed - 2014 per 1L people</th>\n",
       "      <th>Single Lane - Injured - 2014</th>\n",
       "      <th>Single Lane - Injured - 2014 per 1L people</th>\n",
       "      <th>Two Lanes - Accident - 2014</th>\n",
       "      <th>Two Lanes - Accident - 2014 per 1L people</th>\n",
       "      <th>...</th>\n",
       "      <th>3 Lanes or more w.o Median - Killed - 2014 per 1L people</th>\n",
       "      <th>3 Lanes or more w.o Median - Injured - 2014</th>\n",
       "      <th>3 Lanes or more w.o Median - Injured - 2014 per 1L people</th>\n",
       "      <th>4 Lanes with Median - Accident - 2014</th>\n",
       "      <th>4 Lanes with Median - Accident - 2014 per 1L people</th>\n",
       "      <th>4 Lanes with Median - Killed - 2014</th>\n",
       "      <th>4 Lanes with Median - Killed - 2014 per 1L people</th>\n",
       "      <th>4 Lanes with Median - Injured - 2014</th>\n",
       "      <th>4 Lanes with Median - Injured - 2014 per 1L people</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>8634.0</td>\n",
       "      <td>16.473750</td>\n",
       "      <td>2958.0</td>\n",
       "      <td>5.643891</td>\n",
       "      <td>13541.0</td>\n",
       "      <td>25.836350</td>\n",
       "      <td>10327.0</td>\n",
       "      <td>19.704009</td>\n",
       "      <td>...</td>\n",
       "      <td>0.755572</td>\n",
       "      <td>1199.0</td>\n",
       "      <td>2.287703</td>\n",
       "      <td>4291.0</td>\n",
       "      <td>8.187267</td>\n",
       "      <td>1560.0</td>\n",
       "      <td>2.976494</td>\n",
       "      <td>5069.0</td>\n",
       "      <td>9.671698</td>\n",
       "      <td>52410653</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>90.0</td>\n",
       "      <td>6.504173</td>\n",
       "      <td>60.0</td>\n",
       "      <td>4.336115</td>\n",
       "      <td>152.0</td>\n",
       "      <td>10.984826</td>\n",
       "      <td>115.0</td>\n",
       "      <td>8.310888</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1383727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Assam</td>\n",
       "      <td>3888.0</td>\n",
       "      <td>12.459312</td>\n",
       "      <td>1217.0</td>\n",
       "      <td>3.899944</td>\n",
       "      <td>3195.0</td>\n",
       "      <td>10.238555</td>\n",
       "      <td>2432.0</td>\n",
       "      <td>7.793479</td>\n",
       "      <td>...</td>\n",
       "      <td>0.080114</td>\n",
       "      <td>42.0</td>\n",
       "      <td>0.134591</td>\n",
       "      <td>768.0</td>\n",
       "      <td>2.461099</td>\n",
       "      <td>245.0</td>\n",
       "      <td>0.785116</td>\n",
       "      <td>752.0</td>\n",
       "      <td>2.409826</td>\n",
       "      <td>31205576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Bihar</td>\n",
       "      <td>3731.0</td>\n",
       "      <td>3.584073</td>\n",
       "      <td>1815.0</td>\n",
       "      <td>1.743525</td>\n",
       "      <td>2475.0</td>\n",
       "      <td>2.377534</td>\n",
       "      <td>4156.0</td>\n",
       "      <td>3.992336</td>\n",
       "      <td>...</td>\n",
       "      <td>0.374642</td>\n",
       "      <td>485.0</td>\n",
       "      <td>0.465901</td>\n",
       "      <td>913.0</td>\n",
       "      <td>0.877046</td>\n",
       "      <td>612.0</td>\n",
       "      <td>0.587899</td>\n",
       "      <td>588.0</td>\n",
       "      <td>0.564844</td>\n",
       "      <td>104099452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Chhattisgarh</td>\n",
       "      <td>7961.0</td>\n",
       "      <td>31.164370</td>\n",
       "      <td>2244.0</td>\n",
       "      <td>8.784430</td>\n",
       "      <td>7762.0</td>\n",
       "      <td>30.385359</td>\n",
       "      <td>4696.0</td>\n",
       "      <td>18.383103</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1164.0</td>\n",
       "      <td>4.556629</td>\n",
       "      <td>254.0</td>\n",
       "      <td>0.994316</td>\n",
       "      <td>734.0</td>\n",
       "      <td>2.873338</td>\n",
       "      <td>25545198</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  S.No           State/UT  Single Lane - Accident - 2014  \\\n",
       "0    1     Andhra Pradesh                         8634.0   \n",
       "1    2  Arunachal Pradesh                           90.0   \n",
       "2    3              Assam                         3888.0   \n",
       "3    4              Bihar                         3731.0   \n",
       "4    5       Chhattisgarh                         7961.0   \n",
       "\n",
       "   Single Lane - Accident - 2014 per 1L people  Single Lane - Killed - 2014  \\\n",
       "0                                    16.473750                       2958.0   \n",
       "1                                     6.504173                         60.0   \n",
       "2                                    12.459312                       1217.0   \n",
       "3                                     3.584073                       1815.0   \n",
       "4                                    31.164370                       2244.0   \n",
       "\n",
       "   Single Lane - Killed - 2014 per 1L people  Single Lane - Injured - 2014  \\\n",
       "0                                   5.643891                       13541.0   \n",
       "1                                   4.336115                         152.0   \n",
       "2                                   3.899944                        3195.0   \n",
       "3                                   1.743525                        2475.0   \n",
       "4                                   8.784430                        7762.0   \n",
       "\n",
       "   Single Lane - Injured - 2014 per 1L people  Two Lanes - Accident - 2014  \\\n",
       "0                                   25.836350                      10327.0   \n",
       "1                                   10.984826                        115.0   \n",
       "2                                   10.238555                       2432.0   \n",
       "3                                    2.377534                       4156.0   \n",
       "4                                   30.385359                       4696.0   \n",
       "\n",
       "   Two Lanes - Accident - 2014 per 1L people  ...  \\\n",
       "0                                  19.704009  ...   \n",
       "1                                   8.310888  ...   \n",
       "2                                   7.793479  ...   \n",
       "3                                   3.992336  ...   \n",
       "4                                  18.383103  ...   \n",
       "\n",
       "   3 Lanes or more w.o Median - Killed - 2014 per 1L people  \\\n",
       "0                                           0.755572          \n",
       "1                                           0.000000          \n",
       "2                                           0.080114          \n",
       "3                                           0.374642          \n",
       "4                                           0.000000          \n",
       "\n",
       "   3 Lanes or more w.o Median - Injured - 2014  \\\n",
       "0                                       1199.0   \n",
       "1                                          0.0   \n",
       "2                                         42.0   \n",
       "3                                        485.0   \n",
       "4                                          0.0   \n",
       "\n",
       "   3 Lanes or more w.o Median - Injured - 2014 per 1L people  \\\n",
       "0                                           2.287703           \n",
       "1                                           0.000000           \n",
       "2                                           0.134591           \n",
       "3                                           0.465901           \n",
       "4                                           0.000000           \n",
       "\n",
       "   4 Lanes with Median - Accident - 2014  \\\n",
       "0                                 4291.0   \n",
       "1                                    0.0   \n",
       "2                                  768.0   \n",
       "3                                  913.0   \n",
       "4                                 1164.0   \n",
       "\n",
       "   4 Lanes with Median - Accident - 2014 per 1L people  \\\n",
       "0                                           8.187267     \n",
       "1                                           0.000000     \n",
       "2                                           2.461099     \n",
       "3                                           0.877046     \n",
       "4                                           4.556629     \n",
       "\n",
       "   4 Lanes with Median - Killed - 2014  \\\n",
       "0                               1560.0   \n",
       "1                                  0.0   \n",
       "2                                245.0   \n",
       "3                                612.0   \n",
       "4                                254.0   \n",
       "\n",
       "   4 Lanes with Median - Killed - 2014 per 1L people  \\\n",
       "0                                           2.976494   \n",
       "1                                           0.000000   \n",
       "2                                           0.785116   \n",
       "3                                           0.587899   \n",
       "4                                           0.994316   \n",
       "\n",
       "   4 Lanes with Median - Injured - 2014  \\\n",
       "0                                5069.0   \n",
       "1                                   0.0   \n",
       "2                                 752.0   \n",
       "3                                 588.0   \n",
       "4                                 734.0   \n",
       "\n",
       "   4 Lanes with Median - Injured - 2014 per 1L people  Population  \n",
       "0                                           9.671698     52410653  \n",
       "1                                           0.000000      1383727  \n",
       "2                                           2.409826     31205576  \n",
       "3                                           0.564844    104099452  \n",
       "4                                           2.873338     25545198  \n",
       "\n",
       "[5 rows x 27 columns]"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##Number of ACCIDENTS for 1,2,3,4 LANE per 1L population of resp. state\n",
    "import pandas as pd\n",
    "\n",
    "file_path = 'laneAccidents.csv' # Update the file path as needed\n",
    "data = pd.read_csv(file_path)\n",
    "\n",
    "#Display the first few rows of the dataset\n",
    "(data.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "5a5d40ea-bf8f-4a45-9cc7-ca9c8cbb95fd",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "\"['Single Lane -  Accident - 2014 per 1L people', 'Two Lanes -  Accident - 2014 per 1L people', '3 Lanes or more w.o Median -  Accident - 2014 per 1L people', '4 Lanes with Median -  Accident - 2014 per 1L people'] not in index\"",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[21], line 24\u001b[0m\n\u001b[1;32m     21\u001b[0m df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m4 Lanes with Median - Accident - 2014 per 1L people\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m (df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m4 Lanes with Median - Accident - 2014\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m/\u001b[39m df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mPopulation\u001b[39m\u001b[38;5;124m'\u001b[39m]) \u001b[38;5;241m*\u001b[39m \u001b[38;5;241m100000\u001b[39m\n\u001b[1;32m     23\u001b[0m \u001b[38;5;66;03m# Display the results\u001b[39;00m\n\u001b[0;32m---> 24\u001b[0m (df[[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mState\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mSingle Lane -  Accident - 2014 per 1L people\u001b[39m\u001b[38;5;124m'\u001b[39m, \n\u001b[1;32m     25\u001b[0m       \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mTwo Lanes -  Accident - 2014 per 1L people\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m     26\u001b[0m        \u001b[38;5;124m'\u001b[39m\u001b[38;5;124m3 Lanes or more w.o Median -  Accident - 2014 per 1L people\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m     27\u001b[0m        \u001b[38;5;124m'\u001b[39m\u001b[38;5;124m4 Lanes with Median -  Accident - 2014 per 1L people\u001b[39m\u001b[38;5;124m'\u001b[39m]])\n",
      "File \u001b[0;32m/opt/conda/envs/anaconda-panel-2023.05-py310/lib/python3.11/site-packages/pandas/core/frame.py:3767\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3765\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m is_iterator(key):\n\u001b[1;32m   3766\u001b[0m         key \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m(key)\n\u001b[0;32m-> 3767\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39m_get_indexer_strict(key, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcolumns\u001b[39m\u001b[38;5;124m\"\u001b[39m)[\u001b[38;5;241m1\u001b[39m]\n\u001b[1;32m   3769\u001b[0m \u001b[38;5;66;03m# take() does not accept boolean indexers\u001b[39;00m\n\u001b[1;32m   3770\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mgetattr\u001b[39m(indexer, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdtype\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m) \u001b[38;5;241m==\u001b[39m \u001b[38;5;28mbool\u001b[39m:\n",
      "File \u001b[0;32m/opt/conda/envs/anaconda-panel-2023.05-py310/lib/python3.11/site-packages/pandas/core/indexes/base.py:5877\u001b[0m, in \u001b[0;36mIndex._get_indexer_strict\u001b[0;34m(self, key, axis_name)\u001b[0m\n\u001b[1;32m   5874\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m   5875\u001b[0m     keyarr, indexer, new_indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_reindex_non_unique(keyarr)\n\u001b[0;32m-> 5877\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_raise_if_missing(keyarr, indexer, axis_name)\n\u001b[1;32m   5879\u001b[0m keyarr \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mtake(indexer)\n\u001b[1;32m   5880\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(key, Index):\n\u001b[1;32m   5881\u001b[0m     \u001b[38;5;66;03m# GH 42790 - Preserve name from an Index\u001b[39;00m\n",
      "File \u001b[0;32m/opt/conda/envs/anaconda-panel-2023.05-py310/lib/python3.11/site-packages/pandas/core/indexes/base.py:5941\u001b[0m, in \u001b[0;36mIndex._raise_if_missing\u001b[0;34m(self, key, indexer, axis_name)\u001b[0m\n\u001b[1;32m   5938\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mNone of [\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mkey\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m] are in the [\u001b[39m\u001b[38;5;132;01m{\u001b[39;00maxis_name\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m]\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m   5940\u001b[0m not_found \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m(ensure_index(key)[missing_mask\u001b[38;5;241m.\u001b[39mnonzero()[\u001b[38;5;241m0\u001b[39m]]\u001b[38;5;241m.\u001b[39munique())\n\u001b[0;32m-> 5941\u001b[0m \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mnot_found\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m not in index\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "\u001b[0;31mKeyError\u001b[0m: \"['Single Lane -  Accident - 2014 per 1L people', 'Two Lanes -  Accident - 2014 per 1L people', '3 Lanes or more w.o Median -  Accident - 2014 per 1L people', '4 Lanes with Median -  Accident - 2014 per 1L people'] not in index\""
     ]
    }
   ],
   "source": [
    "#Number of ACCIDENTS for 1,2,3,4 LANE per 1L population of resp. state\n",
    "import pandas as pd\n",
    "file_path = 'laneAccidents.csv' # Update the file path as needed\n",
    "data = pd.read_csv(file_path)\n",
    "\n",
    "# Sample data setup - replace this with actual data\n",
    "data = { 'State': ['Andhra Pradesh', 'Arunachal Pradesh', 'Assam', 'Bihar'],\n",
    " 'Population': [52410653, 1383727, 31205576, 103804637],\n",
    " 'Single Lane - Accident - 2014': [16.4737501, 6.50417315,12.45931176, 3.584072662],\n",
    " 'Two Lanes - Accident - 2014': [19.70400941, 8.310887914,7.79347896,3.992336098],\n",
    " '3 Lanes or more w.o Median - Accident - 2014': [2.266714746, 0, 0.179455108, 0.726228607],\n",
    "  '4 Lanes with Median - Accident - 2014': [1188, 0, 56,756]}\n",
    "\n",
    "# Convert to DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Calculate injured per 1L population for each lane type\n",
    "df['Single Lane - Injured - 2014 per 1L people'] = (df['Single Lane - Accident - 2014'] / df['Population']) * 100000\n",
    "df['Two Lanes - Accident - 2014 per 1L people'] = (df['Two Lanes - Accident - 2014'] / df['Population']) * 100000\n",
    "df['3 Lanes or more w.o Median - Accident - 2014 per 1L people'] = (df['3 Lanes or more w.o Median - Accident - 2014'] / df['Population']) * 100000\n",
    "df['4 Lanes with Median - Accident - 2014 per 1L people'] = (df['4 Lanes with Median - Accident - 2014'] / df['Population']) * 100000\n",
    "\n",
    "# Display the results\n",
    "(df[['State', 'Single Lane -  Accident - 2014 per 1L people', \n",
    "      'Two Lanes -  Accident - 2014 per 1L people',\n",
    "       '3 Lanes or more w.o Median -  Accident - 2014 per 1L people',\n",
    "       '4 Lanes with Median -  Accident - 2014 per 1L people']])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a2a0b789-5ef6-4ab2-8dc8-1b245d7edea6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State</th>\n",
       "      <th>Single Lane - Injured - 2014 per 1L people</th>\n",
       "      <th>Two Lanes - Injured - 2014 per 1L people</th>\n",
       "      <th>3 Lanes or more w.o Median - Injured - 2014 per 1L people</th>\n",
       "      <th>4 Lanes with Median - Injured - 2014 per 1L people</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>0.049296</td>\n",
       "      <td>0.036849</td>\n",
       "      <td>0.004365</td>\n",
       "      <td>0.018454</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>0.793858</td>\n",
       "      <td>0.814749</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>0.032810</td>\n",
       "      <td>0.025776</td>\n",
       "      <td>0.000431</td>\n",
       "      <td>0.007722</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>0.002290</td>\n",
       "      <td>0.002861</td>\n",
       "      <td>0.000449</td>\n",
       "      <td>0.000544</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               State  Single Lane - Injured - 2014 per 1L people  \\\n",
       "0     Andhra Pradesh                                    0.049296   \n",
       "1  Arunachal Pradesh                                    0.793858   \n",
       "2              Assam                                    0.032810   \n",
       "3              Bihar                                    0.002290   \n",
       "\n",
       "   Two Lanes - Injured - 2014 per 1L people  \\\n",
       "0                                  0.036849   \n",
       "1                                  0.814749   \n",
       "2                                  0.025776   \n",
       "3                                  0.002861   \n",
       "\n",
       "   3 Lanes or more w.o Median - Injured - 2014 per 1L people  \\\n",
       "0                                           0.004365           \n",
       "1                                           0.000000           \n",
       "2                                           0.000431           \n",
       "3                                           0.000449           \n",
       "\n",
       "   4 Lanes with Median - Injured - 2014 per 1L people  \n",
       "0                                           0.018454   \n",
       "1                                           0.000000   \n",
       "2                                           0.007722   \n",
       "3                                           0.000544   "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Number of people INJURED for 1,2,3,4 type of lane per 1L population of resp. State\n",
    "# Sample data dictionary representing the data columns\n",
    "import pandas as pd\n",
    "\n",
    "# Sample data setup - replace this with actual data\n",
    "data = {'State': ['Andhra Pradesh', 'Arunachal Pradesh', 'Assam', 'Bihar'],\n",
    "    'Population': [52410653, 1383727, 31205576, 103804637],\n",
    "    'Single Lane - Injured - 2014': [25.83635048, 10.98482576,10.2385548, 2.37753413],\n",
    "    'Two Lanes - Injured - 2014': [19.31286756, 11.27390013, 8.043434289, 2.970236577],\n",
    "    '3 Lanes or more w.o Median - Injured - 2014': [2.287702845, 0, 0.134591331,0.465900627],\n",
    "    '4 Lanes with Median - Injured - 2014': [9.671697851, 0,2.409825731,0.564844472]}\n",
    "\n",
    "# Convert to DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Calculate injured per 1L population for each lane type\n",
    "df['Single Lane - Injured - 2014 per 1L people'] = (df['Single Lane - Injured - 2014'] / df['Population']) * 100000\n",
    "df['Two Lanes - Injured - 2014 per 1L people'] = (df['Two Lanes - Injured - 2014'] / df['Population']) * 100000\n",
    "df['3 Lanes or more w.o Median - Injured - 2014 per 1L people'] = (df['3 Lanes or more w.o Median - Injured - 2014'] / df['Population']) * 100000\n",
    "df['4 Lanes with Median - Injured - 2014 per 1L people'] = (df['4 Lanes with Median - Injured - 2014'] / df['Population']) * 100000\n",
    "\n",
    "# Display the results\n",
    "(df[['State', 'Single Lane - Injured - 2014 per 1L people', \n",
    "          'Two Lanes - Injured - 2014 per 1L people',\n",
    "          '3 Lanes or more w.o Median - Injured - 2014 per 1L people',\n",
    "          '4 Lanes with Median - Injured - 2014 per 1L people']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "id": "fea31156-2b43-4de0-8e7d-a71b5063f715",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>S.No</th>\n",
       "      <th>State/UT</th>\n",
       "      <th>Single Lane - Accident - 2014</th>\n",
       "      <th>Single Lane - Accident - 2014 per 1L people</th>\n",
       "      <th>Single Lane - Killed - 2014</th>\n",
       "      <th>Single Lane - Killed - 2014 per 1L people</th>\n",
       "      <th>Single Lane - Injured - 2014</th>\n",
       "      <th>Single Lane - Injured - 2014 per 1L people</th>\n",
       "      <th>Two Lanes - Accident - 2014</th>\n",
       "      <th>Two Lanes - Accident - 2014 per 1L people</th>\n",
       "      <th>...</th>\n",
       "      <th>3 Lanes or more w.o Median - Killed - 2014 per 1L people</th>\n",
       "      <th>3 Lanes or more w.o Median - Injured - 2014</th>\n",
       "      <th>3 Lanes or more w.o Median - Injured - 2014 per 1L people</th>\n",
       "      <th>4 Lanes with Median - Accident - 2014</th>\n",
       "      <th>4 Lanes with Median - Accident - 2014 per 1L people</th>\n",
       "      <th>4 Lanes with Median - Killed - 2014</th>\n",
       "      <th>4 Lanes with Median - Killed - 2014 per 1L people</th>\n",
       "      <th>4 Lanes with Median - Injured - 2014</th>\n",
       "      <th>4 Lanes with Median - Injured - 2014 per 1L people</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>8634.0</td>\n",
       "      <td>16.473750</td>\n",
       "      <td>2958.0</td>\n",
       "      <td>5.643891</td>\n",
       "      <td>13541.0</td>\n",
       "      <td>25.836350</td>\n",
       "      <td>10327.0</td>\n",
       "      <td>19.704009</td>\n",
       "      <td>...</td>\n",
       "      <td>0.755572</td>\n",
       "      <td>1199.0</td>\n",
       "      <td>2.287703</td>\n",
       "      <td>4291.0</td>\n",
       "      <td>8.187267</td>\n",
       "      <td>1560.0</td>\n",
       "      <td>2.976494</td>\n",
       "      <td>5069.0</td>\n",
       "      <td>9.671698</td>\n",
       "      <td>52410653</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>90.0</td>\n",
       "      <td>6.504173</td>\n",
       "      <td>60.0</td>\n",
       "      <td>4.336115</td>\n",
       "      <td>152.0</td>\n",
       "      <td>10.984826</td>\n",
       "      <td>115.0</td>\n",
       "      <td>8.310888</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1383727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Assam</td>\n",
       "      <td>3888.0</td>\n",
       "      <td>12.459312</td>\n",
       "      <td>1217.0</td>\n",
       "      <td>3.899944</td>\n",
       "      <td>3195.0</td>\n",
       "      <td>10.238555</td>\n",
       "      <td>2432.0</td>\n",
       "      <td>7.793479</td>\n",
       "      <td>...</td>\n",
       "      <td>0.080114</td>\n",
       "      <td>42.0</td>\n",
       "      <td>0.134591</td>\n",
       "      <td>768.0</td>\n",
       "      <td>2.461099</td>\n",
       "      <td>245.0</td>\n",
       "      <td>0.785116</td>\n",
       "      <td>752.0</td>\n",
       "      <td>2.409826</td>\n",
       "      <td>31205576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Bihar</td>\n",
       "      <td>3731.0</td>\n",
       "      <td>3.584073</td>\n",
       "      <td>1815.0</td>\n",
       "      <td>1.743525</td>\n",
       "      <td>2475.0</td>\n",
       "      <td>2.377534</td>\n",
       "      <td>4156.0</td>\n",
       "      <td>3.992336</td>\n",
       "      <td>...</td>\n",
       "      <td>0.374642</td>\n",
       "      <td>485.0</td>\n",
       "      <td>0.465901</td>\n",
       "      <td>913.0</td>\n",
       "      <td>0.877046</td>\n",
       "      <td>612.0</td>\n",
       "      <td>0.587899</td>\n",
       "      <td>588.0</td>\n",
       "      <td>0.564844</td>\n",
       "      <td>104099452</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  S.No           State/UT  Single Lane - Accident - 2014  \\\n",
       "0    1     Andhra Pradesh                         8634.0   \n",
       "1    2  Arunachal Pradesh                           90.0   \n",
       "2    3              Assam                         3888.0   \n",
       "3    4              Bihar                         3731.0   \n",
       "\n",
       "   Single Lane - Accident - 2014 per 1L people  Single Lane - Killed - 2014  \\\n",
       "0                                    16.473750                       2958.0   \n",
       "1                                     6.504173                         60.0   \n",
       "2                                    12.459312                       1217.0   \n",
       "3                                     3.584073                       1815.0   \n",
       "\n",
       "   Single Lane - Killed - 2014 per 1L people  Single Lane - Injured - 2014  \\\n",
       "0                                   5.643891                       13541.0   \n",
       "1                                   4.336115                         152.0   \n",
       "2                                   3.899944                        3195.0   \n",
       "3                                   1.743525                        2475.0   \n",
       "\n",
       "   Single Lane - Injured - 2014 per 1L people  Two Lanes - Accident - 2014  \\\n",
       "0                                   25.836350                      10327.0   \n",
       "1                                   10.984826                        115.0   \n",
       "2                                   10.238555                       2432.0   \n",
       "3                                    2.377534                       4156.0   \n",
       "\n",
       "   Two Lanes - Accident - 2014 per 1L people  ...  \\\n",
       "0                                  19.704009  ...   \n",
       "1                                   8.310888  ...   \n",
       "2                                   7.793479  ...   \n",
       "3                                   3.992336  ...   \n",
       "\n",
       "   3 Lanes or more w.o Median - Killed - 2014 per 1L people  \\\n",
       "0                                           0.755572          \n",
       "1                                           0.000000          \n",
       "2                                           0.080114          \n",
       "3                                           0.374642          \n",
       "\n",
       "   3 Lanes or more w.o Median - Injured - 2014  \\\n",
       "0                                       1199.0   \n",
       "1                                          0.0   \n",
       "2                                         42.0   \n",
       "3                                        485.0   \n",
       "\n",
       "   3 Lanes or more w.o Median - Injured - 2014 per 1L people  \\\n",
       "0                                           2.287703           \n",
       "1                                           0.000000           \n",
       "2                                           0.134591           \n",
       "3                                           0.465901           \n",
       "\n",
       "   4 Lanes with Median - Accident - 2014  \\\n",
       "0                                 4291.0   \n",
       "1                                    0.0   \n",
       "2                                  768.0   \n",
       "3                                  913.0   \n",
       "\n",
       "   4 Lanes with Median - Accident - 2014 per 1L people  \\\n",
       "0                                           8.187267     \n",
       "1                                           0.000000     \n",
       "2                                           2.461099     \n",
       "3                                           0.877046     \n",
       "\n",
       "   4 Lanes with Median - Killed - 2014  \\\n",
       "0                               1560.0   \n",
       "1                                  0.0   \n",
       "2                                245.0   \n",
       "3                                612.0   \n",
       "\n",
       "   4 Lanes with Median - Killed - 2014 per 1L people  \\\n",
       "0                                           2.976494   \n",
       "1                                           0.000000   \n",
       "2                                           0.785116   \n",
       "3                                           0.587899   \n",
       "\n",
       "   4 Lanes with Median - Injured - 2014  \\\n",
       "0                                5069.0   \n",
       "1                                   0.0   \n",
       "2                                 752.0   \n",
       "3                                 588.0   \n",
       "\n",
       "   4 Lanes with Median - Injured - 2014 per 1L people  Population  \n",
       "0                                           9.671698     52410653  \n",
       "1                                           0.000000      1383727  \n",
       "2                                           2.409826     31205576  \n",
       "3                                           0.564844    104099452  \n",
       "\n",
       "[4 rows x 27 columns]"
      ]
     },
     "execution_count": 191,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Load the Excel file\n",
    "file_path = 'laneAccidents.csv'\n",
    "data = pd.read_csv(file_path)\n",
    "\n",
    "# Display the first few rows of the dataset\n",
    "data.head(4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "30f9d1de-fdd4-49ff-bba3-0f9fcf2d8a91",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State</th>\n",
       "      <th>Single Lane - Killed - 2014 per 1L people</th>\n",
       "      <th>Two Lanes - Killed - 2014 per 1L people</th>\n",
       "      <th>3 Lanes or more w.o Median - Killed - 2014 per 1L people</th>\n",
       "      <th>4 Lanes with Median - Killed - 2014 per 1L people</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>0.010769</td>\n",
       "      <td>0.037595</td>\n",
       "      <td>0.001442</td>\n",
       "      <td>0.005679</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>0.313365</td>\n",
       "      <td>0.600616</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>0.012498</td>\n",
       "      <td>0.024975</td>\n",
       "      <td>0.000257</td>\n",
       "      <td>0.002516</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>0.001680</td>\n",
       "      <td>0.003846</td>\n",
       "      <td>0.000361</td>\n",
       "      <td>0.000566</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               State  Single Lane - Killed - 2014 per 1L people  \\\n",
       "0     Andhra Pradesh                                   0.010769   \n",
       "1  Arunachal Pradesh                                   0.313365   \n",
       "2              Assam                                   0.012498   \n",
       "3              Bihar                                   0.001680   \n",
       "\n",
       "   Two Lanes - Killed - 2014 per 1L people  \\\n",
       "0                                 0.037595   \n",
       "1                                 0.600616   \n",
       "2                                 0.024975   \n",
       "3                                 0.003846   \n",
       "\n",
       "   3 Lanes or more w.o Median - Killed - 2014 per 1L people  \\\n",
       "0                                           0.001442          \n",
       "1                                           0.000000          \n",
       "2                                           0.000257          \n",
       "3                                           0.000361          \n",
       "\n",
       "   4 Lanes with Median - Killed - 2014 per 1L people  \n",
       "0                                           0.005679  \n",
       "1                                           0.000000  \n",
       "2                                           0.002516  \n",
       "3                                           0.000566  "
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## Number of people KILLED for 1,2,3,4 LANES per 1L population of resp. States.\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "# Sample data setup - replace this with actual data\n",
    "data = {\n",
    "    'State': ['Andhra Pradesh', 'Arunachal Pradesh', 'Assam', 'Bihar'],\n",
    "    'Population': [52410653, 1383727, 31205576, 103804637],\n",
    "    'Single Lane - Killed - 2014': [5.643890756,4.336115433,3.899944036,1.743525028],\n",
    "    'Two Lanes - Killed - 2014': [19.70400941, 8.310887914, 7.79347896,3.992336098],\n",
    "    '3 Lanes or more w.o Median - Killed - 2014': [0.755571582, 0, 0.080113887, 0.374641742],\n",
    "    '4 Lanes with Median - Killed - 2014': [2.976494111, 0, 0.785116096, 0.587899348]}\n",
    "\n",
    "# Convert to DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Calculate killed per 1L population for each lane type\n",
    "df['Single Lane - Killed - 2014 per 1L people'] = (df['Single Lane - Killed - 2014'] / df['Population']) * 100000\n",
    "df['Two Lanes - Killed - 2014 per 1L people'] = (df['Two Lanes - Killed - 2014'] / df['Population']) * 100000\n",
    "df['3 Lanes or more w.o Median - Killed - 2014 per 1L people'] = (df['3 Lanes or more w.o Median - Killed - 2014'] / df['Population']) * 100000\n",
    "df['4 Lanes with Median - Killed - 2014 per 1L people'] = (df['4 Lanes with Median - Killed - 2014'] / df['Population']) * 100000\n",
    "\n",
    "# Display the results\n",
    "(df[['State', 'Single Lane - Killed - 2014 per 1L people', \n",
    "          'Two Lanes - Killed - 2014 per 1L people',\n",
    "          '3 Lanes or more w.o Median - Killed - 2014 per 1L people',\n",
    "          '4 Lanes with Median - Killed - 2014 per 1L people']])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "e7bfc465-2a77-4a64-883e-796d47bc7398",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Single Lane Statistics per 1 lakh population:\n",
      "State                          Killed per 1L             Injured per 1L            Accidents per 1L         \n",
      "=========================================================================================================\n",
      "Andhra Pradesh                 5.64                      25.84                     16.47                    \n",
      "Arunachal Pradesh              4.34                      10.98                     6.50                     \n",
      "Assam                          3.90                      10.24                     12.46                    \n",
      "Bihar                          1.74                      2.38                      3.58                     \n",
      "Chhattisgarh                   8.78                      30.39                     31.16                    \n",
      "Goa                            12.82                     74.80                     172.98                   \n",
      "Gujarat                        5.13                      17.66                     18.16                    \n",
      "Haryana                        6.17                      13.75                     16.13                    \n",
      "Himachal Pradesh               7.69                      33.83                     17.23                    \n",
      "Jammu & Kashmir                4.37                      32.92                     29.99                    \n",
      "Jharkhand                      3.19                      6.07                      7.42                     \n",
      "Karnataka                      9.50                      58.20                     43.32                    \n",
      "Kerala                         3.40                      23.65                     21.97                    \n",
      "Madhya Pradesh                 6.09                      40.32                     39.24                    \n",
      "Maharashtra                    4.73                      15.24                     20.68                    \n",
      "Manipur                        3.12                      26.68                     14.81                    \n",
      "Meghalaya                      2.73                      4.25                      10.38                    \n",
      "Mizoram                        4.10                      11.30                     5.20                     \n",
      "Nagaland                       4.09                      11.62                     15.42                    \n",
      "Orissa                         4.81                      14.37                     12.72                    \n",
      "Punjab                         8.11                      7.24                      10.56                    \n",
      "Rajasthan                      7.35                      20.12                     17.32                    \n",
      "Sikkim                         9.66                      57.65                     33.25                    \n",
      "Tamil Nadu                     6.50                      36.20                     28.41                    \n",
      "Telangana                      6.44                      21.25                     19.70                    \n",
      "Tripura                        3.76                      20.74                     12.58                    \n",
      "Uttarakhand                    4.50                      8.18                      7.36                     \n",
      "Uttar Pradesh                  3.89                      5.29                      7.48                     \n",
      "West Bengal                    3.81                      8.11                      8.39                     \n",
      "Andaman & Nicobar Islands      2.10                      38.89                     26.01                    \n",
      "Chandigarh                     4.36                      13.26                     12.41                    \n",
      "Dadra & Nagar Haveli           4.36                      8.15                      6.11                     \n",
      "Daman & Diu                    2.06                      4.52                      5.34                     \n",
      "Delhi                          N/A                       N/A                       N/A                      \n",
      "Lakshadweep                    0.00                      1.55                      1.55                     \n",
      "Puducherry                     3.45                      31.49                     42.07                    \n"
     ]
    }
   ],
   "source": [
    " #Number of Accidents, people KILLED, INJURED on SINGLE LANE per 1L\n",
    "population\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "# Data for states\n",
    "data = {\"Andhra Pradesh\": {\"Killed\": 5.64, \"Injured\": 25.84, \"Accidents\": 16.47, \"Population\": 52410653},\n",
    "    \"Arunachal Pradesh\": {\"Killed\": 4.34, \"Injured\": 10.98, \"Accidents\": 6.50, \"Population\": 1383727},\n",
    "    \"Assam\": {\"Killed\": 3.90, \"Injured\": 10.24, \"Accidents\": 12.46, \"Population\": 31205576},\n",
    "    \"Bihar\": {\"Killed\": 1.74, \"Injured\": 2.38, \"Accidents\": 3.58, \"Population\": 104099452},\n",
    "    \"Chhattisgarh\": {\"Killed\": 8.78, \"Injured\": 30.39, \"Accidents\": 31.16, \"Population\": 25545198},\n",
    "    \"Goa\": {\"Killed\": 12.82, \"Injured\": 74.80, \"Accidents\": 172.98, \"Population\": 1458545},\n",
    "    \"Gujarat\": {\"Killed\": 5.13, \"Injured\": 17.66, \"Accidents\": 18.16, \"Population\": 60439692},\n",
    "    \"Haryana\": {\"Killed\": 6.17, \"Injured\": 13.75, \"Accidents\": 16.13, \"Population\": 25351462},\n",
    "    \"Himachal Pradesh\": {\"Killed\": 7.69, \"Injured\": 33.83, \"Accidents\": 17.23, \"Population\": 6864602},\n",
    "    \"Jammu & Kashmir\": {\"Killed\": 4.37, \"Injured\": 32.92, \"Accidents\": 29.99, \"Population\": 12541302},\n",
    "    \"Jharkhand\": {\"Killed\": 3.19, \"Injured\": 6.07, \"Accidents\": 7.42, \"Population\": 32988134},\n",
    "    \"Karnataka\": {\"Killed\": 9.50, \"Injured\": 58.20, \"Accidents\": 43.32, \"Population\": 61095297},\n",
    "    \"Kerala\": {\"Killed\": 3.40, \"Injured\": 23.65, \"Accidents\": 21.97, \"Population\": 33406061},\n",
    "    \"Madhya Pradesh\": {\"Killed\": 6.09, \"Injured\": 40.32, \"Accidents\": 39.24, \"Population\": 72626809},\n",
    "    \"Maharashtra\": {\"Killed\": 4.73, \"Injured\": 15.24, \"Accidents\": 20.68, \"Population\": 112374333},\n",
    "    \"Manipur\": {\"Killed\": 3.12, \"Injured\": 26.68, \"Accidents\": 14.81, \"Population\": 2855794},\n",
    "    \"Meghalaya\": {\"Killed\": 2.73, \"Injured\": 4.25, \"Accidents\": 10.38, \"Population\": 2966889},\n",
    "    \"Mizoram\": {\"Killed\": 4.10, \"Injured\": 11.30, \"Accidents\": 5.20, \"Population\": 1097206},\n",
    "    \"Nagaland\": {\"Killed\": 4.09, \"Injured\": 11.62, \"Accidents\": 15.42, \"Population\": 1978502},\n",
    "    \"Orissa\": {\"Killed\": 4.81, \"Injured\": 14.37, \"Accidents\": 12.72, \"Population\": 41974218},\n",
    "    \"Punjab\": {\"Killed\": 8.11, \"Injured\": 7.24, \"Accidents\": 10.56, \"Population\": 27743338},\n",
    "    \"Rajasthan\": {\"Killed\": 7.35, \"Injured\": 20.12, \"Accidents\": 17.32, \"Population\": 68548437},\n",
    "    \"Sikkim\": {\"Killed\": 9.66, \"Injured\": 57.65, \"Accidents\": 33.25, \"Population\": 610577},\n",
    "    \"Tamil Nadu\": {\"Killed\": 6.50, \"Injured\": 36.20, \"Accidents\": 28.41, \"Population\": 72147030},\n",
    "    \"Telangana\": {\"Killed\": 6.44, \"Injured\": 21.25, \"Accidents\": 19.70, \"Population\": 32254880},\n",
    "    \"Tripura\": {\"Killed\": 3.76, \"Injured\": 20.74, \"Accidents\": 12.58, \"Population\": 3673917},\n",
    "    \"Uttarakhand\": {\"Killed\": 4.50, \"Injured\": 8.18, \"Accidents\": 7.36, \"Population\": 10086292},\n",
    "    \"Uttar Pradesh\": {\"Killed\": 3.89, \"Injured\": 5.29, \"Accidents\": 7.48, \"Population\": 199812341},\n",
    "    \"West Bengal\": {\"Killed\": 3.81, \"Injured\": 8.11, \"Accidents\": 8.39, \"Population\": 91276115},\n",
    "    \"Andaman & Nicobar Islands\": {\"Killed\": 2.10, \"Injured\": 38.89, \"Accidents\": 26.01, \"Population\": 380581},\n",
    "    \"Chandigarh\": {\"Killed\": 4.36, \"Injured\": 13.26, \"Accidents\": 12.41, \"Population\": 1055450},\n",
    "    \"Dadra & Nagar Haveli\": {\"Killed\": 4.36, \"Injured\": 8.15, \"Accidents\": 6.11, \"Population\": 343709},\n",
    "    \"Daman & Diu\": {\"Killed\": 2.06, \"Injured\": 4.52, \"Accidents\": 5.34, \"Population\": 243247},\n",
    "    \"Delhi\": {\"Killed\": None, \"Injured\": None, \"Accidents\": None, \"Population\": 16787941},\n",
    "    \"Lakshadweep\": {\"Killed\": 0.00, \"Injured\": 1.55, \"Accidents\": 1.55, \"Population\": 64473},\n",
    "    \"Puducherry\": {\"Killed\": 3.45, \"Injured\": 31.49, \"Accidents\": 42.07, \"Population\": 1247953}}\n",
    "\n",
    "# Print the results\n",
    "print(\"Single Lane Statistics per 1 lakh population:\")\n",
    "print(\"{:<30} {:<25} {:<25} {:<25}\".format(\"State\", \"Killed per 1L\", \"Injured per 1L\", \"Accidents per 1L\"))\n",
    "print(\"=\" * 105)\n",
    "\n",
    "for state, metrics in data.items():\n",
    "    killed = metrics[\"Killed\"]\n",
    "    injured = metrics[\"Injured\"]\n",
    "    accidents = metrics[\"Accidents\"]\n",
    "    \n",
    "    # Format None values\n",
    "    killed_str = f\"{killed:.2f}\" if killed is not None else \"N/A\"\n",
    "    injured_str = f\"{injured:.2f}\" if injured is not None else \"N/A\"\n",
    "    accidents_str = f\"{accidents:.2f}\" if accidents is not None else \"N/A\"\n",
    "\n",
    "    print(f\"{state:<30} {killed_str:<25} {injured_str:<25} {accidents_str:<25}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "6e1fa8e2-e691-4c86-8986-763209bc3e33",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total Accidents per 1L population: 661.25\n",
      "Total Killed per 1L population: 164.12000000000003\n",
      "Total Injured per 1L population: 701.13\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Sample data\n",
    "data = {'State/UT': [\n",
    "        'Andhra Pradesh', 'Arunachal Pradesh', 'Assam', 'Bihar', 'Chhattisgarh',\n",
    "        'Goa', 'Gujarat', 'Haryana', 'Himachal Pradesh', 'Jammu & Kashmir',\n",
    "        'Jharkhand', 'Karnataka', 'Kerala', 'Madhya Pradesh', 'Maharashtra',\n",
    "        'Manipur', 'Meghalaya', 'Mizoram', 'Nagaland', 'Orissa', 'Punjab',\n",
    "        'Rajasthan', 'Sikkim', 'Tamil Nadu', 'Telangana', 'Tripura',\n",
    "        'Uttarakhand', 'Uttar Pradesh', 'West Bengal', 'Andaman & Nicobar Islands',\n",
    "        'Chandigarh', 'Dadra & Nagar Haveli', 'Daman & Diu', 'Delhi', \n",
    "        'Lakshadweep', 'Puducherry'],\n",
    "    'Accidents_per_1L': [19.70, 8.31, 7.79, 3.99, 18.38, \n",
    "        116.97, 12.37, 13.49, 27.31, 15.43, \n",
    "        6.84, 22.68, 82.05, 30.06, 20.32, \n",
    "        10.93, 7.89, 6.84, 0, 7.42, \n",
    "        7.67, 11.83, 0, 39.20, 29.78, \n",
    "        5.50, 6.62, 4.49, 4.74, 30.22, \n",
    "        7.11, 19.20, 10.69, None, \n",
    "        0, 45.43],\n",
    "    'Killed_per_1L': [5.71, 4.26, 3.32, 2.01, 5.97, \n",
    "        7.06, 4.42, 5.72, 9.77, 3.34, \n",
    "        3.58, 6.52, 8.20, 4.96, 4.20, \n",
    "        2.66, 2.02, 5.29, 0, 3.17, \n",
    "        5.74, 4.76, 0, 9.33, 10.08, \n",
    "        1.20, 4.20, 2.37, 2.20, 3.94, \n",
    "        2.56, 12.80, 4.11, None, \n",
    "        0, 8.65\n",
    "    ],\n",
    "    'Injured_per_1L': [19.31, 11.27, 8.04, 2.97, 18.25, \n",
    "        54.03, 11.75, 11.34, 47.40, 29.14, \n",
    "        5.74, 30.40, 94.29, 30.98, 13.10, \n",
    "        18.21, 6.24, 10.03, 0, 8.81, \n",
    "        4.55, 12.84, 0, 45.68, 32.77, \n",
    "        8.55, 6.99, 3.28, 4.34, 33.90, \n",
    "        7.01, 19.78, 15.62, None, \n",
    "        0, 74.52]}\n",
    "\n",
    "# Create DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Calculate totals\n",
    "total_accidents = df['Accidents_per_1L'].sum()\n",
    "total_killed = df['Killed_per_1L'].sum()\n",
    "total_injured = df['Injured_per_1L'].sum()\n",
    "\n",
    "# Output results\n",
    "print(f\"Total Accidents per 1L population: {total_accidents}\")\n",
    "print(f\"Total Killed per 1L population: {total_killed}\")\n",
    "print(f\"Total Injured per 1L population: {total_injured}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "d099e9e4-8c57-4dd5-9732-4744a65e22c5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State/UT</th>\n",
       "      <th>Single Lane - Accident - 2014 per 1L people</th>\n",
       "      <th>Single Lane - Killed - 2014 per 1L people</th>\n",
       "      <th>Single Lane - Injured - 2014 per 1L people</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>16.473750</td>\n",
       "      <td>5.643891</td>\n",
       "      <td>25.836350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>6.504173</td>\n",
       "      <td>4.336115</td>\n",
       "      <td>10.984826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>12.459312</td>\n",
       "      <td>3.899944</td>\n",
       "      <td>10.238555</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>3.584073</td>\n",
       "      <td>1.743525</td>\n",
       "      <td>2.377534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chhattisgarh</td>\n",
       "      <td>31.164370</td>\n",
       "      <td>8.784430</td>\n",
       "      <td>30.385359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Goa</td>\n",
       "      <td>172.980607</td>\n",
       "      <td>12.820996</td>\n",
       "      <td>74.800572</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>18.163560</td>\n",
       "      <td>5.130734</td>\n",
       "      <td>17.658925</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>16.133192</td>\n",
       "      <td>6.173214</td>\n",
       "      <td>13.746742</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Himachal Pradesh</td>\n",
       "      <td>17.233337</td>\n",
       "      <td>7.691633</td>\n",
       "      <td>33.825705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>29.988912</td>\n",
       "      <td>4.369562</td>\n",
       "      <td>32.923216</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Jharkhand</td>\n",
       "      <td>7.423882</td>\n",
       "      <td>3.185994</td>\n",
       "      <td>6.074912</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Karnataka</td>\n",
       "      <td>43.320847</td>\n",
       "      <td>9.499913</td>\n",
       "      <td>58.200879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Kerala</td>\n",
       "      <td>21.972061</td>\n",
       "      <td>3.403574</td>\n",
       "      <td>23.648403</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>39.243084</td>\n",
       "      <td>6.090038</td>\n",
       "      <td>40.317068</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>20.676430</td>\n",
       "      <td>4.727058</td>\n",
       "      <td>15.237465</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Manipur</td>\n",
       "      <td>14.811993</td>\n",
       "      <td>3.116471</td>\n",
       "      <td>26.682597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Meghalaya</td>\n",
       "      <td>10.381244</td>\n",
       "      <td>2.730132</td>\n",
       "      <td>4.246873</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Mizoram</td>\n",
       "      <td>5.195014</td>\n",
       "      <td>4.101326</td>\n",
       "      <td>11.301433</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Nagaland</td>\n",
       "      <td>15.415703</td>\n",
       "      <td>4.094006</td>\n",
       "      <td>11.624957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Orissa</td>\n",
       "      <td>12.719713</td>\n",
       "      <td>4.810096</td>\n",
       "      <td>14.370726</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Punjab</td>\n",
       "      <td>10.561094</td>\n",
       "      <td>8.110055</td>\n",
       "      <td>7.237774</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>17.322058</td>\n",
       "      <td>7.345171</td>\n",
       "      <td>20.115703</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Sikkim</td>\n",
       "      <td>33.247240</td>\n",
       "      <td>9.662991</td>\n",
       "      <td>57.650386</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Tamil Nadu</td>\n",
       "      <td>28.412812</td>\n",
       "      <td>6.504772</td>\n",
       "      <td>36.202460</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Telangana</td>\n",
       "      <td>19.696244</td>\n",
       "      <td>6.439336</td>\n",
       "      <td>21.252598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Tripura</td>\n",
       "      <td>12.575134</td>\n",
       "      <td>3.756209</td>\n",
       "      <td>20.740806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Uttarakhand</td>\n",
       "      <td>7.356519</td>\n",
       "      <td>4.501159</td>\n",
       "      <td>8.179418</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>7.484523</td>\n",
       "      <td>3.888649</td>\n",
       "      <td>5.285459</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>8.385545</td>\n",
       "      <td>3.810416</td>\n",
       "      <td>8.106173</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Andaman &amp; Nicobar Islands</td>\n",
       "      <td>26.012859</td>\n",
       "      <td>2.102049</td>\n",
       "      <td>38.887911</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Chandigarh</td>\n",
       "      <td>12.411767</td>\n",
       "      <td>4.358331</td>\n",
       "      <td>13.264484</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Dadra &amp; Nagar Haveli</td>\n",
       "      <td>6.109820</td>\n",
       "      <td>4.364157</td>\n",
       "      <td>8.146426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Daman &amp; Diu</td>\n",
       "      <td>5.344362</td>\n",
       "      <td>2.055524</td>\n",
       "      <td>4.522152</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>1.551037</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.551037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Puducherry</td>\n",
       "      <td>42.068892</td>\n",
       "      <td>3.445643</td>\n",
       "      <td>31.491571</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     State/UT  Single Lane - Accident - 2014 per 1L people  \\\n",
       "0              Andhra Pradesh                                    16.473750   \n",
       "1           Arunachal Pradesh                                     6.504173   \n",
       "2                       Assam                                    12.459312   \n",
       "3                       Bihar                                     3.584073   \n",
       "4                Chhattisgarh                                    31.164370   \n",
       "5                         Goa                                   172.980607   \n",
       "6                     Gujarat                                    18.163560   \n",
       "7                     Haryana                                    16.133192   \n",
       "8            Himachal Pradesh                                    17.233337   \n",
       "9             Jammu & Kashmir                                    29.988912   \n",
       "10                  Jharkhand                                     7.423882   \n",
       "11                  Karnataka                                    43.320847   \n",
       "12                     Kerala                                    21.972061   \n",
       "13             Madhya Pradesh                                    39.243084   \n",
       "14                Maharashtra                                    20.676430   \n",
       "15                    Manipur                                    14.811993   \n",
       "16                  Meghalaya                                    10.381244   \n",
       "17                    Mizoram                                     5.195014   \n",
       "18                   Nagaland                                    15.415703   \n",
       "19                     Orissa                                    12.719713   \n",
       "20                     Punjab                                    10.561094   \n",
       "21                  Rajasthan                                    17.322058   \n",
       "22                     Sikkim                                    33.247240   \n",
       "23                 Tamil Nadu                                    28.412812   \n",
       "24                  Telangana                                    19.696244   \n",
       "25                    Tripura                                    12.575134   \n",
       "26                Uttarakhand                                     7.356519   \n",
       "27              Uttar Pradesh                                     7.484523   \n",
       "28                West Bengal                                     8.385545   \n",
       "29  Andaman & Nicobar Islands                                    26.012859   \n",
       "30                 Chandigarh                                    12.411767   \n",
       "31       Dadra & Nagar Haveli                                     6.109820   \n",
       "32                Daman & Diu                                     5.344362   \n",
       "33                      Delhi                                     0.000000   \n",
       "34                Lakshadweep                                     1.551037   \n",
       "35                 Puducherry                                    42.068892   \n",
       "\n",
       "    Single Lane - Killed - 2014 per 1L people  \\\n",
       "0                                    5.643891   \n",
       "1                                    4.336115   \n",
       "2                                    3.899944   \n",
       "3                                    1.743525   \n",
       "4                                    8.784430   \n",
       "5                                   12.820996   \n",
       "6                                    5.130734   \n",
       "7                                    6.173214   \n",
       "8                                    7.691633   \n",
       "9                                    4.369562   \n",
       "10                                   3.185994   \n",
       "11                                   9.499913   \n",
       "12                                   3.403574   \n",
       "13                                   6.090038   \n",
       "14                                   4.727058   \n",
       "15                                   3.116471   \n",
       "16                                   2.730132   \n",
       "17                                   4.101326   \n",
       "18                                   4.094006   \n",
       "19                                   4.810096   \n",
       "20                                   8.110055   \n",
       "21                                   7.345171   \n",
       "22                                   9.662991   \n",
       "23                                   6.504772   \n",
       "24                                   6.439336   \n",
       "25                                   3.756209   \n",
       "26                                   4.501159   \n",
       "27                                   3.888649   \n",
       "28                                   3.810416   \n",
       "29                                   2.102049   \n",
       "30                                   4.358331   \n",
       "31                                   4.364157   \n",
       "32                                   2.055524   \n",
       "33                                   0.000000   \n",
       "34                                   0.000000   \n",
       "35                                   3.445643   \n",
       "\n",
       "    Single Lane - Injured - 2014 per 1L people  \n",
       "0                                    25.836350  \n",
       "1                                    10.984826  \n",
       "2                                    10.238555  \n",
       "3                                     2.377534  \n",
       "4                                    30.385359  \n",
       "5                                    74.800572  \n",
       "6                                    17.658925  \n",
       "7                                    13.746742  \n",
       "8                                    33.825705  \n",
       "9                                    32.923216  \n",
       "10                                    6.074912  \n",
       "11                                   58.200879  \n",
       "12                                   23.648403  \n",
       "13                                   40.317068  \n",
       "14                                   15.237465  \n",
       "15                                   26.682597  \n",
       "16                                    4.246873  \n",
       "17                                   11.301433  \n",
       "18                                   11.624957  \n",
       "19                                   14.370726  \n",
       "20                                    7.237774  \n",
       "21                                   20.115703  \n",
       "22                                   57.650386  \n",
       "23                                   36.202460  \n",
       "24                                   21.252598  \n",
       "25                                   20.740806  \n",
       "26                                    8.179418  \n",
       "27                                    5.285459  \n",
       "28                                    8.106173  \n",
       "29                                   38.887911  \n",
       "30                                   13.264484  \n",
       "31                                    8.146426  \n",
       "32                                    4.522152  \n",
       "33                                    0.000000  \n",
       "34                                    1.551037  \n",
       "35                                   31.491571  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Data for accidents, deaths, and injuries per 1 lakh people in 2014\n",
    "data = {'State/UT': ['Andhra Pradesh', 'Arunachal Pradesh', 'Assam', 'Bihar', 'Chhattisgarh',\n",
    "        'Goa', 'Gujarat', 'Haryana', 'Himachal Pradesh', 'Jammu & Kashmir',\n",
    "        'Jharkhand', 'Karnataka', 'Kerala', 'Madhya Pradesh', 'Maharashtra',\n",
    "        'Manipur', 'Meghalaya', 'Mizoram', 'Nagaland', 'Orissa',\n",
    "        'Punjab', 'Rajasthan', 'Sikkim', 'Tamil Nadu', 'Telangana',\n",
    "        'Tripura', 'Uttarakhand', 'Uttar Pradesh', 'West Bengal',\n",
    "        'Andaman & Nicobar Islands', 'Chandigarh', 'Dadra & Nagar Haveli',\n",
    "        'Daman & Diu', 'Delhi', 'Lakshadweep', 'Puducherry'],\n",
    "    'Single Lane - Accident - 2014 per 1L people': [\n",
    "        16.4737501, 6.50417315, 12.45931176, 3.584072662, 31.16436991,\n",
    "        172.9806074, 18.16356046, 16.13319185, 17.23333705, 29.98891184,\n",
    "        7.423881569, 43.32084677, 21.9720607, 39.24308446, 20.67642973,\n",
    "        14.81199274, 10.38124446, 5.195013516, 15.4157034, 12.71971285,\n",
    "        10.56109398, 17.32205798, 33.24723991, 28.412812, 19.69624441,\n",
    "        12.57513439, 7.356519125, 7.48452269, 8.385545331,\n",
    "        26.01285929, 12.41176749, 6.109819644, 5.344361904,\n",
    "        None, 1.551036868, 42.06889202],\n",
    "    'Single Lane - Killed - 2014 per 1L people': [\n",
    "        5.643890756, 4.336115433, 3.899944036, 1.743525028, 8.784429856,\n",
    "        12.82099627, 5.130734286, 6.173213995, 7.691633106, 4.369562267,\n",
    "        3.185994091, 9.499912898, 3.40357398, 6.090037633, 4.727058091,\n",
    "        3.116471286, 2.730132472, 4.10132646, 4.094006476, 4.810095569,\n",
    "        8.110055106, 7.345171123, 9.662990909, 6.504772269, 6.439335691,\n",
    "        3.756208973, 4.501158602, 3.8886487, 3.810416339,\n",
    "        2.102049235, 4.35833057, 4.364156889, 2.055523809,\n",
    "        None, 0, 3.445642584],\n",
    "    'Single Lane - Injured - 2014 per 1L people': [\n",
    "        25.83635048, 10.98482576, 10.2385548, 2.37753413, 30.38535853,\n",
    "        74.8005718, 17.6589252, 13.74674171, 33.82570468, 32.92321643,\n",
    "        6.074911664, 58.20087919, 23.6484032, 40.31706804, 15.2374653,\n",
    "        26.68259685, 4.246872734, 11.30143291, 11.62495666, 14.37072633,\n",
    "        7.237773623, 20.115703, 57.65038644, 36.20246045, 21.25259806,\n",
    "        20.74080607, 8.179418165, 5.28545932, 8.106173231,\n",
    "        38.88791085, 13.26448434, 8.146426192, 4.52215238,\n",
    "        None, 1.551036868, 31.4915706]}\n",
    "\n",
    "# Create a DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Replace None values with 0 for calculations\n",
    "df.fillna(0, inplace=True)\n",
    "\n",
    "# Convert relevant columns to numeric (if not already)\n",
    "df.iloc[:, 1:] = df.iloc[:, 1:].apply(pd.to_numeric)\n",
    "\n",
    "# Calculate total accidents, killed, and injured across all states/UTs\n",
    "total_accidents = df['Single Lane - Accident - 2014 per 1L people'].sum()\n",
    "total_killed = df['Single Lane - Killed - 2014 per 1L people'].sum()\n",
    "total_injured = df['Single Lane - Injured - 2014 per 1L people'].sum()\n",
    "\n",
    "# Display the results\n",
    "(\"Total Accidents per 1 lakh people in 2014:\", total_accidents)\n",
    "(\"Total Killed per 1 lakh people in 2014:\", total_killed)\n",
    "(\"Total Injured per 1 lakh people in 2014:\", total_injured)\n",
    "\n",
    "# Optionally, display the DataFrame\n",
    "(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "b04b1339-71ca-49e8-93f3-a645d9ebeeb7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State/UT</th>\n",
       "      <th>Two Lanes - Accident - 2014 per 1L people</th>\n",
       "      <th>Two Lanes - Killed - 2014 per 1L people</th>\n",
       "      <th>Two Lanes - Injured - 2014 per 1L people</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>19.704009</td>\n",
       "      <td>5.712579</td>\n",
       "      <td>19.312868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>8.310888</td>\n",
       "      <td>4.263847</td>\n",
       "      <td>11.273900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>7.793479</td>\n",
       "      <td>3.316715</td>\n",
       "      <td>8.043434</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>3.992336</td>\n",
       "      <td>2.013459</td>\n",
       "      <td>2.970237</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chhattisgarh</td>\n",
       "      <td>18.383103</td>\n",
       "      <td>5.965896</td>\n",
       "      <td>18.246091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Goa</td>\n",
       "      <td>116.965880</td>\n",
       "      <td>7.061832</td>\n",
       "      <td>54.026444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>12.367700</td>\n",
       "      <td>4.415972</td>\n",
       "      <td>11.748902</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>13.490346</td>\n",
       "      <td>5.723536</td>\n",
       "      <td>11.340569</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Himachal Pradesh</td>\n",
       "      <td>27.314038</td>\n",
       "      <td>9.774784</td>\n",
       "      <td>47.402603</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>15.429020</td>\n",
       "      <td>3.340961</td>\n",
       "      <td>29.135731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Jharkhand</td>\n",
       "      <td>6.841854</td>\n",
       "      <td>3.577044</td>\n",
       "      <td>5.741458</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Karnataka</td>\n",
       "      <td>22.676050</td>\n",
       "      <td>6.517687</td>\n",
       "      <td>30.400049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Kerala</td>\n",
       "      <td>82.053972</td>\n",
       "      <td>8.196117</td>\n",
       "      <td>94.285286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>30.055017</td>\n",
       "      <td>4.956847</td>\n",
       "      <td>30.981672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>20.323146</td>\n",
       "      <td>4.204697</td>\n",
       "      <td>13.104416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Manipur</td>\n",
       "      <td>10.925158</td>\n",
       "      <td>2.661256</td>\n",
       "      <td>18.208596</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Meghalaya</td>\n",
       "      <td>7.887049</td>\n",
       "      <td>2.022320</td>\n",
       "      <td>6.235488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Mizoram</td>\n",
       "      <td>6.835544</td>\n",
       "      <td>5.286154</td>\n",
       "      <td>10.025465</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Nagaland</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Orissa</td>\n",
       "      <td>7.416457</td>\n",
       "      <td>3.170994</td>\n",
       "      <td>8.810170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Punjab</td>\n",
       "      <td>7.666705</td>\n",
       "      <td>5.738315</td>\n",
       "      <td>4.548840</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>11.826674</td>\n",
       "      <td>4.764514</td>\n",
       "      <td>12.839097</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Sikkim</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Tamil Nadu</td>\n",
       "      <td>39.203277</td>\n",
       "      <td>9.329559</td>\n",
       "      <td>45.683100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Telangana</td>\n",
       "      <td>29.775339</td>\n",
       "      <td>10.075995</td>\n",
       "      <td>32.773335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Tripura</td>\n",
       "      <td>5.498219</td>\n",
       "      <td>1.197632</td>\n",
       "      <td>8.546736</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Uttarakhand</td>\n",
       "      <td>6.622850</td>\n",
       "      <td>4.203725</td>\n",
       "      <td>6.999599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>4.486710</td>\n",
       "      <td>2.372226</td>\n",
       "      <td>3.276074</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>4.736179</td>\n",
       "      <td>2.203205</td>\n",
       "      <td>4.336293</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Andaman &amp; Nicobar Islands</td>\n",
       "      <td>30.216958</td>\n",
       "      <td>3.941342</td>\n",
       "      <td>33.895544</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Chandigarh</td>\n",
       "      <td>7.105974</td>\n",
       "      <td>2.558151</td>\n",
       "      <td>7.011227</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Dadra &amp; Nagar Haveli</td>\n",
       "      <td>19.202290</td>\n",
       "      <td>12.801527</td>\n",
       "      <td>19.784178</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Daman &amp; Diu</td>\n",
       "      <td>10.688724</td>\n",
       "      <td>4.111048</td>\n",
       "      <td>15.621981</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Puducherry</td>\n",
       "      <td>45.434403</td>\n",
       "      <td>8.654172</td>\n",
       "      <td>74.522037</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     State/UT  Two Lanes - Accident - 2014 per 1L people  \\\n",
       "0              Andhra Pradesh                                  19.704009   \n",
       "1           Arunachal Pradesh                                   8.310888   \n",
       "2                       Assam                                   7.793479   \n",
       "3                       Bihar                                   3.992336   \n",
       "4                Chhattisgarh                                  18.383103   \n",
       "5                         Goa                                 116.965880   \n",
       "6                     Gujarat                                  12.367700   \n",
       "7                     Haryana                                  13.490346   \n",
       "8            Himachal Pradesh                                  27.314038   \n",
       "9             Jammu & Kashmir                                  15.429020   \n",
       "10                  Jharkhand                                   6.841854   \n",
       "11                  Karnataka                                  22.676050   \n",
       "12                     Kerala                                  82.053972   \n",
       "13             Madhya Pradesh                                  30.055017   \n",
       "14                Maharashtra                                  20.323146   \n",
       "15                    Manipur                                  10.925158   \n",
       "16                  Meghalaya                                   7.887049   \n",
       "17                    Mizoram                                   6.835544   \n",
       "18                   Nagaland                                   0.000000   \n",
       "19                     Orissa                                   7.416457   \n",
       "20                     Punjab                                   7.666705   \n",
       "21                  Rajasthan                                  11.826674   \n",
       "22                     Sikkim                                   0.000000   \n",
       "23                 Tamil Nadu                                  39.203277   \n",
       "24                  Telangana                                  29.775339   \n",
       "25                    Tripura                                   5.498219   \n",
       "26                Uttarakhand                                   6.622850   \n",
       "27              Uttar Pradesh                                   4.486710   \n",
       "28                West Bengal                                   4.736179   \n",
       "29  Andaman & Nicobar Islands                                  30.216958   \n",
       "30                 Chandigarh                                   7.105974   \n",
       "31       Dadra & Nagar Haveli                                  19.202290   \n",
       "32                Daman & Diu                                  10.688724   \n",
       "33                      Delhi                                   0.000000   \n",
       "34                Lakshadweep                                   0.000000   \n",
       "35                 Puducherry                                  45.434403   \n",
       "\n",
       "    Two Lanes - Killed - 2014 per 1L people  \\\n",
       "0                                  5.712579   \n",
       "1                                  4.263847   \n",
       "2                                  3.316715   \n",
       "3                                  2.013459   \n",
       "4                                  5.965896   \n",
       "5                                  7.061832   \n",
       "6                                  4.415972   \n",
       "7                                  5.723536   \n",
       "8                                  9.774784   \n",
       "9                                  3.340961   \n",
       "10                                 3.577044   \n",
       "11                                 6.517687   \n",
       "12                                 8.196117   \n",
       "13                                 4.956847   \n",
       "14                                 4.204697   \n",
       "15                                 2.661256   \n",
       "16                                 2.022320   \n",
       "17                                 5.286154   \n",
       "18                                 0.000000   \n",
       "19                                 3.170994   \n",
       "20                                 5.738315   \n",
       "21                                 4.764514   \n",
       "22                                 0.000000   \n",
       "23                                 9.329559   \n",
       "24                                10.075995   \n",
       "25                                 1.197632   \n",
       "26                                 4.203725   \n",
       "27                                 2.372226   \n",
       "28                                 2.203205   \n",
       "29                                 3.941342   \n",
       "30                                 2.558151   \n",
       "31                                12.801527   \n",
       "32                                 4.111048   \n",
       "33                                 0.000000   \n",
       "34                                 0.000000   \n",
       "35                                 8.654172   \n",
       "\n",
       "    Two Lanes - Injured - 2014 per 1L people  \n",
       "0                                  19.312868  \n",
       "1                                  11.273900  \n",
       "2                                   8.043434  \n",
       "3                                   2.970237  \n",
       "4                                  18.246091  \n",
       "5                                  54.026444  \n",
       "6                                  11.748902  \n",
       "7                                  11.340569  \n",
       "8                                  47.402603  \n",
       "9                                  29.135731  \n",
       "10                                  5.741458  \n",
       "11                                 30.400049  \n",
       "12                                 94.285286  \n",
       "13                                 30.981672  \n",
       "14                                 13.104416  \n",
       "15                                 18.208596  \n",
       "16                                  6.235488  \n",
       "17                                 10.025465  \n",
       "18                                  0.000000  \n",
       "19                                  8.810170  \n",
       "20                                  4.548840  \n",
       "21                                 12.839097  \n",
       "22                                  0.000000  \n",
       "23                                 45.683100  \n",
       "24                                 32.773335  \n",
       "25                                  8.546736  \n",
       "26                                  6.999599  \n",
       "27                                  3.276074  \n",
       "28                                  4.336293  \n",
       "29                                 33.895544  \n",
       "30                                  7.011227  \n",
       "31                                 19.784178  \n",
       "32                                 15.621981  \n",
       "33                                  0.000000  \n",
       "34                                  0.000000  \n",
       "35                                 74.522037  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Data for double lane accidents, deaths, and injuries per 1 lakh people in 2014\n",
    "data_double_lane = {'State/UT': ['Andhra Pradesh', 'Arunachal Pradesh', 'Assam', 'Bihar', 'Chhattisgarh',\n",
    "'Goa', 'Gujarat', 'Haryana', 'Himachal Pradesh', 'Jammu & Kashmir',\n",
    "'Jharkhand', 'Karnataka', 'Kerala', 'Madhya Pradesh', 'Maharashtra',\n",
    "'Manipur', 'Meghalaya', 'Mizoram', 'Nagaland', 'Orissa',\n",
    "'Punjab', 'Rajasthan', 'Sikkim', 'Tamil Nadu', 'Telangana',\n",
    "'Tripura', 'Uttarakhand', 'Uttar Pradesh', 'West Bengal',\n",
    "'Andaman & Nicobar Islands', 'Chandigarh', 'Dadra & Nagar Haveli',\n",
    "'Daman & Diu', 'Delhi', 'Lakshadweep', 'Puducherry'],\n",
    "'Two Lanes - Accident - 2014 per 1L people': [19.70400941, 8.310887914, 7.79347896, 3.992336098, 18.38310277,\n",
    "116.9658804, 12.36770035, 13.49034624, 27.31403802, 15.42902005,\n",
    "6.841854104, 22.67604984, 82.05397218, 30.05501729, 20.32314621,\n",
    "10.92515777, 7.887049364, 6.8355441, 0, 7.416457407,\n",
    "7.666705427, 11.82667374, 0, 39.20327697, 29.77533942,\n",
    "5.498218931, 6.622850102, 4.486709857, 4.736178791,\n",
    "30.21695776, 7.105973755, 19.20229031, 10.68872381,\n",
    "None, 0, 45.43440338],\n",
    "'Two Lanes - Killed - 2014 per 1L people': [\n",
    "5.712579082, 4.263846843, 3.316714936, 2.013459206, 5.965896213,\n",
    "7.061832168, 4.415972206, 5.723535787, 9.774783738, 3.340960931,\n",
    "3.577043794, 6.517686623, 8.196117465, 4.956847271, 4.204696815,\n",
    "2.661256379, 2.02232035, 5.286154104, 0, 3.170994156,\n",
    " 5.738314546, 4.764514178, 0, 9.329559373, 10.0759947,\n",
    "1.197631846, 4.203725214, 2.372225848, 2.203205077,\n",
    "3.941342316, 2.558150552, 12.80152687, 4.111047618,None, 0, 8.654172072],\n",
    "'Two Lanes - Injured - 2014 per 1L people': [19.31286756, 11.27390013, 8.043434289, 2.970236577, 18.24609071,\n",
    "54.02644416, 11.7489017, 11.34056884, 47.40260251, 29.13573088,\n",
    "5.741458429, 30.40004863, 94.28528554, 30.98167235, 13.10441593,\n",
    "18.20859628, 6.235487745, 10.02546468, 0, 8.810170091,\n",
    "4.548839797, 12.83909654, 0, 45.68310019, 32.77333538,\n",
    "8.546736358, 6.99959906, 3.276073924, 4.336293235,\n",
    "33.89554392, 7.011227439, 19.78417789, 15.62198095,\n",
    "None, 0, 74.52203729]}\n",
    "\n",
    "# Create DataFrame\n",
    "df_double_lane = pd.DataFrame(data_double_lane)\n",
    "\n",
    "# Replace None values with 0 for calculations\n",
    "df_double_lane.fillna(0, inplace=True)\n",
    "\n",
    "# Convert relevant columns to numeric (if not already)\n",
    "df_double_lane.iloc[:, 1:] = df_double_lane.iloc[:, 1:].apply(pd.to_numeric)\n",
    "\n",
    "# Calculation of total accidents, killed, and injured across all states/UTs\n",
    "total_accidents_double = df_double_lane['Two Lanes - Accident - 2014 per 1L people'].sum()\n",
    "total_killed_double = df_double_lane['Two Lanes - Killed - 2014 per 1L people'].sum()\n",
    "total_injured_double = df_double_lane['Two Lanes - Injured - 2014 per 1L people'].sum()\n",
    "\n",
    "# Display the results\n",
    "(\"Total Accidents per 1 lakh people in 2014 (Two Lanes):\", total_accidents_double)\n",
    "(\"Total Killed per 1 lakh people in 2014 (Two Lanes):\", total_killed_double)\n",
    "(\"Total Injured per 1 lakh people in 2014 (Two Lanes):\", total_injured_double)\n",
    "\n",
    "# Optionally, display the DataFrame\n",
    "(df_double_lane)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "cd0f6756-f9df-436b-a9d8-8b0418ebea9a",
   "metadata": {},
   "outputs": [
    {
     "ename": "IndentationError",
     "evalue": "unexpected indent (2700811605.py, line 40)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[85], line 40\u001b[0;36m\u001b[0m\n\u001b[0;31m    df = pd.DataFrame(data)\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Define the data\n",
    "data = {\n",
    "    'State/UT': [\n",
    "        'Andhra Pradesh', 'Arunachal Pradesh', 'Assam', 'Bihar', 'Chhattisgarh',\n",
    "        'Goa', 'Gujarat', 'Haryana', 'Himachal Pradesh', 'Jammu & Kashmir',\n",
    "        'Jharkhand', 'Karnataka', 'Kerala', 'Madhya Pradesh', 'Maharashtra',\n",
    "        'Manipur', 'Meghalaya', 'Mizoram', 'Nagaland', 'Orissa',\n",
    "        'Punjab', 'Rajasthan', 'Sikkim', 'Tamil Nadu', 'Telangana',\n",
    "        'Tripura', 'Uttarakhand', 'Uttar Pradesh', 'West Bengal',\n",
    "        'Andaman & Nicobar Islands', 'Chandigarh', 'Dadra & Nagar Haveli',\n",
    "        'Daman & Diu', 'Delhi', 'Lakshadweep', 'Puducherry'],\n",
    "    'Accidents per 1L people': [\n",
    "        2.266714746, 0, 0.179455108, 0.726228607, 0,\n",
    "        0, 1.06221587, 2.847961983, 0, 0.893049222,\n",
    "        0.097004577, 2.298049226, 2.640239446, 0.319441269, 5.968444769,\n",
    "        0.210099188, 0, 0, 0.295419441, 1.841883626,\n",
    "        0.370540907, 0, 7.469468944, 1.348633137, 1.415383091,\n",
    "        0, 0, 1.322741121, 0.176387875, 0.262756154,\n",
    "        5.590032687, 0, 0, 0, None, 0, 0],\n",
    "    'Killed per 1L people': [\n",
    "        0.755571582, 0, 0.080113887, 0.374641742, 0,\n",
    "        0, 0.41032638, 1.341145532, 0, 0.167446729,\n",
    "        0.060627861, 0.626889497, 0.245464438, 0.049568473, 0.690549149,\n",
    "        0.035016531, 0, 0, 0.102443838, 0.962393206,\n",
    "        0.204235145, 0, 0.806686013, 0.536352949, 0.163313434,\n",
    "        0, 0, 0.718674329, 0.043823075, 0,\n",
    "        1.894926335, 0, 0, 0, None, 0, 0],\n",
    "    'Injured per 1L people': [\n",
    "        2.287702845, 0, 0.134591331, 0.465900627, 0,\n",
    "        0, 0.870289015, 1.538372817, 0, 1.610678062,\n",
    "        0.072753433, 1.468198117, 3.01741651, 0.289149424, 2.621595093,\n",
    "        0.385181844, 0, 0, 0.514601606, 1.257959659,\n",
    "        0.370540907, 0, 4.009867073, 1.159514467, 4.055616934,\n",
    "        0, 0, 1.019957021, 0.151189607, 0.262756154,\n",
    "        3.316121086, 0, 0, 0, None, 0, 0 ]}\n",
    "\n",
    "# Convert to DataFrame\n",
    "       df = pd.DataFrame(data)\n",
    "# Assuming a population of 1,000,000 for calculations (1L = 100,000)\n",
    "population = 1000000\n",
    "\n",
    "# Calculate total accidents, killed, and injured per state/UT\n",
    "       df['Total Accidents'] = df['Accidents per 1L people'] * (population / 100000)\n",
    "       df['Total Killed'] = df['Killed per 1L people'] * (population / 100000)\n",
    "       df['Total Injured'] = df['Injured per 1L people'] * (population / 100000)\n",
    "\n",
    "# Display the DataFrame with the new calculations\n",
    "       (df[['State/UT', 'Total Accidents', 'Total Killed', 'Total Injured']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "id": "b340995d-df8d-4382-bc34-60c03790cd07",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (3406504984.py, line 22)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[196], line 22\u001b[0;36m\u001b[0m\n\u001b[0;31m    'Killed per 1L people':\u001b[0m\n\u001b[0m                          ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "# Define the data\n",
    "data = {\n",
    "    'State/UT': ['Andhra Pradesh', 'Arunachal Pradesh', 'Assam', 'Bihar', 'Chhattisgarh',\n",
    "        'Goa', 'Gujarat', 'Haryana', 'Himachal Pradesh', 'Jammu & Kashmir',\n",
    "        'Jharkhand', 'Karnataka', 'Kerala', 'Madhya Pradesh', 'Maharashtra',\n",
    "        'Manipur', 'Meghalaya', 'Mizoram', 'Nagaland', 'Orissa',\n",
    "        'Punjab', 'Rajasthan', 'Sikkim', 'Tamil Nadu', 'Telangana',\n",
    "        'Tripura', 'Uttarakhand', 'Uttar Pradesh', 'West Bengal',\n",
    "        'Andaman & Nicobar Islands', 'Chandigarh', 'Dadra & Nagar Haveli',\n",
    "        'Daman & Diu', 'Delhi', 'Lakshadweep', 'Puducherry'],\n",
    "    'Accidents per 1L people': [\n",
    "        2.266714746, 0, 0.179455108, 0.726228607, 0,\n",
    "        0, 1.06221587, 2.847961983, 0, 0.893049222,\n",
    "        0.097004577, 2.298049226, 2.640239446, 0.319441269, 5.968444769,\n",
    "        0.210099188, 0, 0, 0.295419441, 1.841883626,\n",
    "        0.370540907, 0, 7.469468944, 1.348633137, 1.415383091,\n",
    "        0, 0, 1.322741121, 0.176387875, 0.262756154,\n",
    "        5.590032687, 0, 0, 0, 0, 0, 0,  # Replacing None with 0 for Delhi],\n",
    "    'Killed per 1L people': \n",
    "    [2.976494111, 0, 0.785116096, 0.587899348, 0.994316035,\n",
    "        0, 3.204847569, 4.445502985, 0, 0.031894615,\n",
    "        1.142835178, 0.463210777, 0.275399126, 0.70222003, 1.770867018,\n",
    "        0.070033063, 0, 0, 1.281739186, 1.845488095,\n",
    "        2.69590392, 0, 4.413210079, 4.359030323, 0,\n",
    "        0, 0, 1.171599306, 0.379069596, 0,\n",
    "        3.600360036, 0, 0, 0, 0, 0, 0  # Replacing None with 0 for Delhi],\n",
    "    'Injured per 1L people': [\n",
    "        9.671697851, 0, 2.409825731, 0.564844472, 2.873338465,\n",
    "        0, 6.93749399, 8.654333229, 0, 0.462471919,\n",
    "        1.315624582, 2.951127318, 2.068486913, 4.602983452, 5.036737348,\n",
    "        0.070033063, 0, 0, 2.718335336, 1.831070219,\n",
    "        6.723712752, 0, 21.8359647, 11.89277405, 0,\n",
    "        0, 0, 1.597498925, 0.572986701, 1.313780772,\n",
    "        8.148183239, 0, 0, 0, 0, 0, 0  # Replacing None with 0 for Delhi]}\n",
    "\n",
    "# Convert to DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Assuming a population of 1,000,000 for calculations (1L = 100,000)\n",
    "population = 100000\n",
    "\n",
    "# Calculate total accidents, killed, and injured per state/UT\n",
    "df['Total Accidents'] = df['Accidents per 1L people'] * (population / 100000)\n",
    "df['Total Killed'] = df['Killed per 1L people'] * (population / 100000)\n",
    "df['Total Injured'] = df['Injured per 1L people'] * (population / 100000)\n",
    "\n",
    "# Display the DataFrame with the new calculations\n",
    "print(df[['State/UT', 'Total Accidents', 'Total Killed', 'Total Injured']])\n",
    "df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "1206e3c4-952c-4009-806c-2249cf6e9809",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total Number of Accidents: 406553.0\n",
      "Total Number of Killed: 231279018.0\n",
      "Total Number of Injured: 980255257.0\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from io import StringIO\n",
    "\n",
    "# Data input as a string (for the purpose of this example)\n",
    "data = \"\"\"\n",
    "S.No,State/UT,Single Lane - Accident - 2014,Single Lane - Killed - 2014,Single Lane - Injured - 2014,Two Lanes - Accident - 2014,Two Lanes - Killed - 2014,Two Lanes - Injured - 2014,3 Lanes or more w.o Median - Accident - 2014,3 Lanes or more w.o Median - Killed - 2014,3 Lanes or more w.o Median - Injured - 2014,4 Lanes with Median - Accident - 2014,4 Lanes with Median - Killed - 2014,4 Lanes with Median - Injured - 2014\n",
    "1,Andhra Pradesh,8634,2958,13541,10327,2994,10122,1188,396,1199,1560,52410653\n",
    "2,Arunachal Pradesh,90,60,152,59,156,0,0,0,0,0,1383727\n",
    "3,Assam,3888,1217,3195,2432,1035,2510,56,25,42,245,31205576\n",
    "4,Bihar,3731,1815,2475,2096,3092,756,390,485,913,612,104099452\n",
    "5,Chhattisgarh,7961,2244,7762,4696,1524,4661,0,0,0,1164,254,25545198\n",
    "6,Goa,2523,187,1091,1706,103,788,0,0,0,0,0,1458545\n",
    "7,Gujarat,10978,3101,10673,7475,2669,7101,642,248,526,4617,1937,60439692\n",
    "8,Haryana,4090,1565,3485,3420,1451,2875,722,340,390,2444,1127,25351462\n",
    "9,Himachal Pradesh,1183,528,2322,1875,671,3254,0,0,0,0,0,6864602\n",
    "10,Jammu & Kashmir,3761,548,4129,1935,419,3654,112,21,202,53,4,12541302\n",
    "11,Jharkhand,2449,1051,2004,2257,1180,1894,32,20,24,447,377,32988134\n",
    "12,Karnataka,26467,5804,35558,13854,3982,18573,1404,383,897,1988,283,61095297\n",
    "13,Kerala,7340,1137,7900,27411,2738,31497,882,82,1008,649,92,33406061\n",
    "14,Madhya Pradesh,28501,4423,29281,21828,3600,22501,232,36,210,2911,510,72626809\n",
    "15,Maharashtra,23235,5312,17123,22838,4725,14726,6707,776,2946,8847,1990,112374333\n",
    "16,Manipur,423,89,762,76,6,520,6,1,11,2,2,2855794\n",
    "17,Meghalaya,308,81,126,60,185,0,0,0,0,0,0,2966889\n",
    "18,Mizoram,57,45,124,58,110,0,0,0,0,0,0,1097206\n",
    "19,Nagaland,305,81,230,0,0,0,0,0,0,0,0,1978502\n",
    "20,Orissa,5339,2019,6032,1331,3698,124,43,216,1072,538,41974218\n",
    "21,Punjab,2930,2250,2008,1592,1262,511,267,349,823,512,508,27743338\n",
    "22,Rajasthan,11874,5035,13789,3266,8801,254,140,254,4393,1848,4609,68548437\n",
    "23,Sikkim,203,59,352,0,0,0,0,0,0,0,0,610577\n",
    "24,Tamil Nadu,20499,4693,26119,6731,32959,5389,582,2893,13078,3184,15754,72147030\n",
    "25,Telangana,6353,2077,6855,3250,10571,435,173,374,3686,1406,3836,32254880\n",
    "26,Tripura,462,138,762,44,314,52,6,149,0,0,0,3673917\n",
    "27,Uttarakhand,742,454,825,424,706,0,0,0,0,0,0,10086292\n",
    "28,Uttar Pradesh,14955,7770,10561,4740,6546,2643,1436,2038,4471,2341,3192,199812341\n",
    "29,West Bengal,7654,3478,7399,2011,3958,161,40,138,737,346,523,91276115\n",
    "30,Andaman & Nicobar Islands,99,8,148,15,129,1,0,0,1,0,0,380581\n",
    "31,Chandigarh,131,46,140,27,74,59,20,35,104,38,86,1055450\n",
    "32,Dadra & Nagar Haveli,21,15,28,44,68,0,0,0,0,0,0,343709\n",
    "33,Daman & Diu,13,5,11,10,38,0,0,0,0,0,0,243247\n",
    "34,Delhi,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,16787941\n",
    "35,Lakshadweep,1,0,1,0,0,0,0,0,0,0,0,64473\n",
    "36,Puducherry,525,43,393,108,930,0,0,0,0,0,19,1247953\n",
    "\"\"\"\n",
    "\n",
    "# Read the data into a DataFrame\n",
    "df = pd.read_csv(StringIO(data))\n",
    "\n",
    "# Convert columns to numeric, handling missing values\n",
    "cols_to_convert = [\n",
    "    'Single Lane - Accident - 2014', \n",
    "    'Single Lane - Killed - 2014', \n",
    "    'Single Lane - Injured - 2014', \n",
    "    'Two Lanes - Accident - 2014', \n",
    "    'Two Lanes - Killed - 2014', \n",
    "    'Two Lanes - Injured - 2014', \n",
    "    '3 Lanes or more w.o Median - Accident - 2014', \n",
    "    '3 Lanes or more w.o Median - Killed - 2014', \n",
    "    '3 Lanes or more w.o Median - Injured - 2014', \n",
    "    '4 Lanes with Median - Accident - 2014', \n",
    "    '4 Lanes with Median - Killed - 2014', \n",
    "    '4 Lanes with Median - Injured - 2014'\n",
    "]\n",
    "\n",
    "# Convert columns to numeric, setting errors='coerce' to handle any non-numeric values\n",
    "df[cols_to_convert] = df[cols_to_convert].apply(pd.to_numeric, errors='coerce')\n",
    "\n",
    "# Calculate totals\n",
    "total_accidents = df[cols_to_convert[0::3]].sum().sum()  # Summing all accident columns\n",
    "total_killed = df[cols_to_convert[1::3]].sum().sum()  # Summing all killed columns\n",
    "total_injured = df[cols_to_convert[2::3]].sum().sum()  # Summing all injured columns\n",
    "\n",
    "# Output the results\n",
    "print(f'Total Number of Accidents: {total_accidents}')\n",
    "print(f'Total Number of Killed: {total_killed}')\n",
    "print (f'Total Number of Injured: {total_injured}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "92550038-bd2c-4482-a26e-53231f68f178",
   "metadata": {},
   "outputs": [
    {
     "ename": "IndentationError",
     "evalue": "unindent does not match any outer indentation level (<tokenize>, line 106)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m<tokenize>:106\u001b[0;36m\u001b[0m\n\u001b[0;31m    print(\"TotalNumberofPersonsKilledper1LakhPopulationbyReason:\")\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unindent does not match any outer indentation level\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Data input as a dictionary\n",
    "data = {\n",
    "    \"States/UTs\": [\n",
    "        \"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\",\n",
    "        \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu & Kashmir\",\n",
    "        \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\",\n",
    "        \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\",\n",
    "        \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\",\n",
    "        \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\",\n",
    "        \"Andaman & Nicobar Is.\", \"Chandigarh\", \"Dadra & Nagar Haveli\",\n",
    "        \"Daman & Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\"\n",
    "    ],\n",
    "    \"Fault of Driver of other vehicles\": [\n",
    "        0.143100678, 1.011760268, 0.003204555, 0.243997442, 0.990401405,\n",
    "        0, 0.281272115, 0.828354594, 0.043702461, 0.494366534,\n",
    "        0.633561147, 1.060638104, 0, 0.476408099, 0.472527832,\n",
    "        0, 0.505580087, 0.820265292, 0.657062768, 0.038118637,\n",
    "        0.702871443, 0, 1.801574576, 0.047125987, 0.018601836,\n",
    "        0.190532339, 0.803070147, 0.752706261, 0.673779773,\n",
    "        0, 0, 0, 0, 0.077436536, 0\n",
    "    ],\n",
    "    \"Fault of Pedestrian\": [\n",
    "        0.198432941, 0, 0.169841441, 0.138329258, 0.160499832,\n",
    "        1.988282844, 0.67008945, 0.552236396, 0, 0.279077882,\n",
    "        0.585058858, 0.126032614, 0, 0.01376902, 0.098777005,\n",
    "        0, 0.370758731, 0, 0, 0.109591083,\n",
    "        0.40730499, 0, 0, 0.381166072, 0.155015303,\n",
    "        0.326626867, 0, 0.250735264, 0.224593258,\n",
    "        0, 0, 0, 0, 0, 0\n",
    "    ],\n",
    "    \"Defect in Condition of Motor Vehicle\": [\n",
    "        0.049608235, 0.578148724, 0, 0.290107195, 0.896450284,\n",
    "        0, 0.099272511, 0.422066388, 0.538997017, 0.302998843,\n",
    "        0.472897315, 0.184956953, 0, 0.509453747, 0.087208527,\n",
    "        0.945446345, 0.741517462, 0, 0.303259739, 0.021441734,\n",
    "        0.385678176, 0.052517609, 0, 0.271667455, 0.430942543,\n",
    "        0.108875622, 0.15863114, 0.543009503, 0.383451903,\n",
    "        0, 0, 0, 0, 0.041696596, 0\n",
    "    ],\n",
    "    \"Defect in Road Condition\": [\n",
    "        0.366337737, 0.650417315, 0, 0.242076202, 0.555877469,\n",
    "        0, 0.052945339, 0.291896381, 0.160242356, 0.087710191,\n",
    "        0.415300847, 0.07038185, 0, 0.309802954, 0.070300751,\n",
    "        0.350165313, 0.40446407, 0, 0, 0.021441734,\n",
    "        0.464976493, 0.103576395, 0, 0.037423578, 0.601459376,\n",
    "        0, 0.009914446, 0.734689355, 0.36701825,\n",
    "        0, 0, 0, 0, 0.041696596, 0\n",
    "    ],\n",
    "    \"Weather Condition\": [\n",
    "        0.036252172, 0.939491677, 0, 0.201730169, 0.234877804,\n",
    "        0, 0.0711453, 0.295840926, 0, 0.015947308,\n",
    "        0.284950946, 0.330631014, 0, 0.114282868, 0.0364852,\n",
    "        0.52524797, 0.303348052, 0, 0, 0.026206563,\n",
    "        0.836236793, 0.016047047, 0.327559014, 0.01801876, 0.567356009,\n",
    "        0, 0, 0.419393515, 0.436039593,\n",
    "        0, 0, 0, 0, 0.041696596, 0\n",
    "    ],\n",
    "    \"Fault of Passenger\": [\n",
    "        0.034344163, 0.289074362, 0, 0.146974837, 0.254450954,\n",
    "        0, 0.0711453, 0.382620931, 0, 0,\n",
    "        0.081847612, 0.032735744, 0, 0.111529064, 0.025806605,\n",
    "        0.210099188, 0.40446407, 0, 0, 0.009529659,\n",
    "        0.014417876, 0.001458822, 0, 0.363147312, 0.074407345,\n",
    "        0, 0.277604495, 0.842290317, 0.128182493,\n",
    "        0, 0, 0, 0, 0, 0\n",
    "    ],\n",
    "    \"Poor light\": [\n",
    "        0.145008687, 1.517640402, 0, 0.161384135, 0.352316705,\n",
    "        0, 0.072799842, 0.311619109, 0, 0,\n",
    "        0.148538259, 0.085112934, 0, 0.075729611, 0.04271438,\n",
    "        0.070033063, 0.303348052, 0, 0, 0.007147245,\n",
    "        0.299170922, 0.045223496, 0.491338521, 0.008316351, 0.226322343,\n",
    "        0.027218906, 0, 0.403878958, 0.101888649,\n",
    "        0, 0, 0, 0, 0, 0\n",
    "    ],\n",
    "    \"Falling of boulders\": [\n",
    "        0.001908009, 0, 0, 0.042267273, 0.02740241,\n",
    "        0, 0.003309084, 0.315563655, 0, 0,\n",
    "        0.045470896, 0.021278234, 0, 0.002753804, 0,\n",
    "        0, 0.202232035, 0, 0, 0.009529659,\n",
    "        0.075693848, 0.002917645, 0, 0, 0.607659988,\n",
    "        0, 0, 0.14613712, 0.064639035,\n",
    "        0, 0, 0, 0, 0, 0\n",
    "    ],\n",
    "    \"Other causes/causes not known\": [\n",
    "        1.03986493, 1.589908992, 0.032045555, 0.507207281, 2.172619684,\n",
    "        0.411368864, 0.620453195, 1.128140065, 0, 1.562836139,\n",
    "        1.045830601, 1.054090956, 0, 0.82476431, 0.612239452,\n",
    "        3.781785381, 1.044865514, 0, 0, 0.042883467,\n",
    "        2.818694708, 0.345740925, 1.801574576, 0.005544234, 1.900487616,\n",
    "        0.43550249, 1.14016132, 1.279200267, 0.903850914,\n",
    "        0, 0, 0, 0, 4.681932108, 0.900272965]}\n",
    "\n",
    "# Create DataFrame\n",
    "       df = pd.DataFrame(data)\n",
    "\n",
    "# Set the index to the States/UTs\n",
    "       df.set_index(\"States/UTs\", inplace=True)\n",
    "\n",
    "# Calculate the total number of persons killed per 1 lakh for each reason\n",
    "       total_killed_per_reason = df.sum().sort_values(ascending=False)\n",
    "\n",
    "# Display the results\n",
    "      print(\"TotalNumberofPersonsKilledper1LakhPopulationbyReason:\")\n",
    "      df (total_killed_per_reason)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "e778025c-445f-49d9-9e30-4f28f9d1b150",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sl. No</th>\n",
       "      <th>States/UTs</th>\n",
       "      <th>Fault of Driver-Total No. of Road Accidents - 2014</th>\n",
       "      <th>Fault of Driver-Total No. of Road Accidents - 2014 per 1L people</th>\n",
       "      <th>Fault of Driver-Number of Persons-Killed - 2014</th>\n",
       "      <th>Fault of Driver-Number of Persons-Killed - 2014 per 1L people</th>\n",
       "      <th>Fault of Driver-Number of Persons-Injured - 2014</th>\n",
       "      <th>Fault of Driver-Number of Persons-Injured - 2014 per 1L people</th>\n",
       "      <th>Fault of Driver of other vehicles-Total No. of Road Accidents - 2014</th>\n",
       "      <th>Fault of Driver of other vehicles-Total No. of Road Accidents - 2014 per 1L people</th>\n",
       "      <th>...</th>\n",
       "      <th>Falling of boulders-Number of Persons-Killed - 2014 per 1L people</th>\n",
       "      <th>Falling of boulders-Number of Persons-Injured - 2014</th>\n",
       "      <th>Falling of boulders-Number of Persons-Injured - 2014 per 1L people</th>\n",
       "      <th>Other causes/causes not known-Total No. of Road Accidents - 2014</th>\n",
       "      <th>Other causes/causes not known-Total No. of Road Accidents - 2014 per 1L people</th>\n",
       "      <th>Other causes/causes not known-Number of Persons-Killed - 2014</th>\n",
       "      <th>Other causes/causes not known-Number of Persons-Killed - 2014 per 1L people</th>\n",
       "      <th>Other causes/causes not known-Number of Persons-Injured - 2014</th>\n",
       "      <th>Other causes/causes not known-Number of Persons-Injured - 2014 per 1L people</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>21359.0</td>\n",
       "      <td>40.753165</td>\n",
       "      <td>6743</td>\n",
       "      <td>12.865705</td>\n",
       "      <td>26287.0</td>\n",
       "      <td>50.155834</td>\n",
       "      <td>288.0</td>\n",
       "      <td>0.549507</td>\n",
       "      <td>...</td>\n",
       "      <td>0.001908</td>\n",
       "      <td>12.0</td>\n",
       "      <td>0.022896</td>\n",
       "      <td>1530.0</td>\n",
       "      <td>2.919254</td>\n",
       "      <td>545</td>\n",
       "      <td>1.039865</td>\n",
       "      <td>1617.0</td>\n",
       "      <td>3.085251</td>\n",
       "      <td>52410653</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2.168058</td>\n",
       "      <td>19</td>\n",
       "      <td>1.373103</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2.168058</td>\n",
       "      <td>20.0</td>\n",
       "      <td>1.445372</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>34.0</td>\n",
       "      <td>2.457132</td>\n",
       "      <td>22</td>\n",
       "      <td>1.589909</td>\n",
       "      <td>54.0</td>\n",
       "      <td>3.902504</td>\n",
       "      <td>1383727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Assam</td>\n",
       "      <td>6895.0</td>\n",
       "      <td>22.095410</td>\n",
       "      <td>2429</td>\n",
       "      <td>7.783865</td>\n",
       "      <td>6281.0</td>\n",
       "      <td>20.127813</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.006409</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>43.0</td>\n",
       "      <td>0.137796</td>\n",
       "      <td>10</td>\n",
       "      <td>0.032046</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.112159</td>\n",
       "      <td>31205576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Bihar</td>\n",
       "      <td>5008.0</td>\n",
       "      <td>4.810784</td>\n",
       "      <td>2646</td>\n",
       "      <td>2.541800</td>\n",
       "      <td>3374.0</td>\n",
       "      <td>3.241131</td>\n",
       "      <td>608.0</td>\n",
       "      <td>0.584057</td>\n",
       "      <td>...</td>\n",
       "      <td>0.042267</td>\n",
       "      <td>58.0</td>\n",
       "      <td>0.055716</td>\n",
       "      <td>960.0</td>\n",
       "      <td>0.922195</td>\n",
       "      <td>528</td>\n",
       "      <td>0.507207</td>\n",
       "      <td>745.0</td>\n",
       "      <td>0.715662</td>\n",
       "      <td>104099452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Chhattisgarh</td>\n",
       "      <td>9108.0</td>\n",
       "      <td>35.654451</td>\n",
       "      <td>2458</td>\n",
       "      <td>9.622161</td>\n",
       "      <td>8710.0</td>\n",
       "      <td>34.096428</td>\n",
       "      <td>726.0</td>\n",
       "      <td>2.842021</td>\n",
       "      <td>...</td>\n",
       "      <td>0.027402</td>\n",
       "      <td>38.0</td>\n",
       "      <td>0.148756</td>\n",
       "      <td>1552.0</td>\n",
       "      <td>6.075506</td>\n",
       "      <td>555</td>\n",
       "      <td>2.172620</td>\n",
       "      <td>1421.0</td>\n",
       "      <td>5.562689</td>\n",
       "      <td>25545198</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 63 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  Sl. No         States/UTs  \\\n",
       "0      1     Andhra Pradesh   \n",
       "1      2  Arunachal Pradesh   \n",
       "2      3              Assam   \n",
       "3      4              Bihar   \n",
       "4      5       Chhattisgarh   \n",
       "\n",
       "   Fault of Driver-Total No. of Road Accidents - 2014  \\\n",
       "0                                            21359.0    \n",
       "1                                               30.0    \n",
       "2                                             6895.0    \n",
       "3                                             5008.0    \n",
       "4                                             9108.0    \n",
       "\n",
       "   Fault of Driver-Total No. of Road Accidents - 2014 per 1L people  \\\n",
       "0                                          40.753165                  \n",
       "1                                           2.168058                  \n",
       "2                                          22.095410                  \n",
       "3                                           4.810784                  \n",
       "4                                          35.654451                  \n",
       "\n",
       "   Fault of Driver-Number of Persons-Killed - 2014  \\\n",
       "0                                             6743   \n",
       "1                                               19   \n",
       "2                                             2429   \n",
       "3                                             2646   \n",
       "4                                             2458   \n",
       "\n",
       "   Fault of Driver-Number of Persons-Killed - 2014 per 1L people  \\\n",
       "0                                          12.865705               \n",
       "1                                           1.373103               \n",
       "2                                           7.783865               \n",
       "3                                           2.541800               \n",
       "4                                           9.622161               \n",
       "\n",
       "   Fault of Driver-Number of Persons-Injured - 2014  \\\n",
       "0                                           26287.0   \n",
       "1                                              30.0   \n",
       "2                                            6281.0   \n",
       "3                                            3374.0   \n",
       "4                                            8710.0   \n",
       "\n",
       "   Fault of Driver-Number of Persons-Injured - 2014 per 1L people  \\\n",
       "0                                          50.155834                \n",
       "1                                           2.168058                \n",
       "2                                          20.127813                \n",
       "3                                           3.241131                \n",
       "4                                          34.096428                \n",
       "\n",
       "   Fault of Driver of other vehicles-Total No. of Road Accidents - 2014  \\\n",
       "0                                              288.0                      \n",
       "1                                               20.0                      \n",
       "2                                                2.0                      \n",
       "3                                              608.0                      \n",
       "4                                              726.0                      \n",
       "\n",
       "   Fault of Driver of other vehicles-Total No. of Road Accidents - 2014 per 1L people  \\\n",
       "0                                           0.549507                                    \n",
       "1                                           1.445372                                    \n",
       "2                                           0.006409                                    \n",
       "3                                           0.584057                                    \n",
       "4                                           2.842021                                    \n",
       "\n",
       "   ...  Falling of boulders-Number of Persons-Killed - 2014 per 1L people  \\\n",
       "0  ...                                           0.001908                   \n",
       "1  ...                                           0.000000                   \n",
       "2  ...                                           0.000000                   \n",
       "3  ...                                           0.042267                   \n",
       "4  ...                                           0.027402                   \n",
       "\n",
       "   Falling of boulders-Number of Persons-Injured - 2014  \\\n",
       "0                                               12.0      \n",
       "1                                                0.0      \n",
       "2                                                0.0      \n",
       "3                                               58.0      \n",
       "4                                               38.0      \n",
       "\n",
       "   Falling of boulders-Number of Persons-Injured - 2014 per 1L people  \\\n",
       "0                                           0.022896                    \n",
       "1                                           0.000000                    \n",
       "2                                           0.000000                    \n",
       "3                                           0.055716                    \n",
       "4                                           0.148756                    \n",
       "\n",
       "   Other causes/causes not known-Total No. of Road Accidents - 2014  \\\n",
       "0                                             1530.0                  \n",
       "1                                               34.0                  \n",
       "2                                               43.0                  \n",
       "3                                              960.0                  \n",
       "4                                             1552.0                  \n",
       "\n",
       "   Other causes/causes not known-Total No. of Road Accidents - 2014 per 1L people  \\\n",
       "0                                           2.919254                                \n",
       "1                                           2.457132                                \n",
       "2                                           0.137796                                \n",
       "3                                           0.922195                                \n",
       "4                                           6.075506                                \n",
       "\n",
       "   Other causes/causes not known-Number of Persons-Killed - 2014  \\\n",
       "0                                                545               \n",
       "1                                                 22               \n",
       "2                                                 10               \n",
       "3                                                528               \n",
       "4                                                555               \n",
       "\n",
       "   Other causes/causes not known-Number of Persons-Killed - 2014 per 1L people  \\\n",
       "0                                           1.039865                             \n",
       "1                                           1.589909                             \n",
       "2                                           0.032046                             \n",
       "3                                           0.507207                             \n",
       "4                                           2.172620                             \n",
       "\n",
       "   Other causes/causes not known-Number of Persons-Injured - 2014  \\\n",
       "0                                             1617.0                \n",
       "1                                               54.0                \n",
       "2                                               35.0                \n",
       "3                                              745.0                \n",
       "4                                             1421.0                \n",
       "\n",
       "   Other causes/causes not known-Number of Persons-Injured - 2014 per 1L people  \\\n",
       "0                                           3.085251                              \n",
       "1                                           3.902504                              \n",
       "2                                           0.112159                              \n",
       "3                                           0.715662                              \n",
       "4                                           5.562689                              \n",
       "\n",
       "   Population  \n",
       "0    52410653  \n",
       "1     1383727  \n",
       "2    31205576  \n",
       "3   104099452  \n",
       "4    25545198  \n",
       "\n",
       "[5 rows x 63 columns]"
      ]
     },
     "execution_count": 165,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load the Excel file\n",
    "file_path = 'reasonOfAccident.csv'\n",
    "data = pd.read_csv(file_path)\n",
    "\n",
    "# Display the first few rows of the dataset\n",
    "(data.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 248,
   "id": "d9b727cc-11d1-4420-ae99-6c964288d7ce",
   "metadata": {},
   "outputs": [
    {
     "ename": "IndentationError",
     "evalue": "unexpected indent (553331114.py, line 83)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[248], line 83\u001b[0;36m\u001b[0m\n\u001b[0;31m    df = pd.DataFrame(data)\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load the Excel file\n",
    "file_path = 'reasonOfAccident.csv'\n",
    "data = pd.read_csv(file_path)\n",
    "\n",
    "# Display the first few rows of the dataset\n",
    "data.head()\n",
    "\n",
    "# Data for states/UTs\n",
    "data = {\"State/UT\": [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \n",
    "                 \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu & Kashmir\", \n",
    "                 \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \n",
    "                 \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \"Punjab\", \n",
    "                 \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \"Tripura\", \n",
    "                 \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\", \n",
    "                 \"Andaman & Nicobar Is.\", \"Chandigarh\", \"Dadra & Nagar Haveli\", \n",
    "                 \"Daman & Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\", \"Total\"],\n",
    "    \n",
    "    \"Fault of Driver\": [50.15583378, 2.168057717, 20.12781305, 3.241131375, 34.09642783, \n",
    "                        113.1264376, 30.20531607, 30.1087172, 77.58643546, 32.59629662, \n",
    "                        7.175307339, 74.69478379, 123.0195922, 60.70761005, 30.51764499, \n",
    "                        0, 0.269642713, 20.23321054, 7.935296502, 25.56092885, \n",
    "                        9.288716448, 38.08401933, 29.64409075, 103.5066863, \n",
    "                        44.27857118, 26.42955734, 9.329493931, 2.796624058, \n",
    "                        6.241501405, 74.3599917, 31.74001611, 27.93060409, \n",
    "                        20.14413333, None, 1.551036868, 106.0136079, 32.48448472],\n",
    "    \n",
    "    \"Fault of Other Vehicles\": [0.810903844, 3.252086575, 0.003204555, 0.379444841, \n",
    "                                2.60322899, 0, 0.853743596, 0.796798228, 0.437024608, \n",
    "                                7.471313585, 0.682063435, 7.347537733, 0, \n",
    "                                3.084260524, 1.945284071, 0, 0.572990766, \n",
    "                                1.093687056, 2.577707781, 0.14770972, 0.717289318, \n",
    "                                0, 3.766928659, 0.119201026, 0.124012242, \n",
    "                                1.388164186, 1.328535799, 0.942884704, 1.350846276, \n",
    "                                0, 0, 0, 0, 0, None, 0],\n",
    "    \n",
    "    \"Fault of Pedestrian\": [0.305281447, 0, 0.413387659, 0.223824425, \n",
    "                            0.544133578, 5.896287053, 2.169104369, 0.761297317, \n",
    "                            0, 1.060495952, 0.733597117, 1.419094501, 0, \n",
    "                            0.1363133, 0.238488624, 0, 0.606696105, \n",
    "                            0, 0, 0.079298317, 0, 0, 0, 1.137953981, \n",
    "                            1.382736504, 0.68047264, 0, 0.369346556, \n",
    "                            0.353871328, 0, 0, 0, 0, None, 0],\n",
    "    \n",
    "    \"Defect in Motor Vehicle\": [0.162180769, 1.589908992, 0, 0.341020047, \n",
    "                                1.9142541, 0.891299206, 0.271344864, 0.378676386, \n",
    "                                2.272527963, 1.538915178, 0.66690647, 1.325797631, \n",
    "                                0, 2.326964413, 0.40489673, 7.738653418, \n",
    "                                1.381918906, 0, 1.111952376, 0.08338452, \n",
    "                                0.30637986, 0.110870508, 0, 0.712434039, \n",
    "                                1.987296186, 0.871004979, 0.178460033, 0.739193582, \n",
    "                                0.591611508, 0, 0, 0, 0, None, 0],\n",
    "    \n",
    "    \"Defect in Road Condition\": [0.843339998, 2.095789126, 0, 0.270894798, \n",
    "                                 1.491474053, 0, 0.177035978, 0.220894558, \n",
    "                                 0.917751677, 1.020627683, 0.700251794, 0.299532057, \n",
    "                                 0, 1.840918, 0.288322067, 4.482116007, \n",
    "                                 0.438169409, 0, 0, 0.623573126, \n",
    "                                 0.297599783, 0, 0.228699643, 3.797874926, \n",
    "                                 0, 0, 0, 0.793244297, 0.456855553, 0, \n",
    "                                 0, 0, 0, None, 0],\n",
    "    \n",
    "    \"Weather Condition\": [0.133560633, 1.806714764, 0, 0.293949674, \n",
    "                         0.806413793, 0, 0.398744587, 0.268229106, 0, \n",
    "                         0.287051536, 0.697220401, 0.50249367, 0, \n",
    "                         0.616852105, 0.081869229, 4.447099476, \n",
    "                         0.471874748, 0, 0, 0.598341843, \n",
    "                         0.037929384, 2.620472111, 0.077619273, \n",
    "                         2.852281577, 0, 0, 0, 0.593056462, \n",
    "                         1.017790908, 0, 0, 0, None, 0],\n",
    "    \n",
    "    \"Falling of Boulders\": [0.022896109, 0, 0, 0.055715951, \n",
    "                            0.148755942, 0, 0, 0.220894558, 0, \n",
    "                            0, 0.072753433, 0.065471488, 0, \n",
    "                            0.023407334, 0.056952507, 0.035016531, \n",
    "                            0.134821357, 0, 0, 0.162201102, \n",
    "                            0.001458822, 0, 0, 0, \n",
    "                            0, 0, 0.019828893, 0.231717419, \n",
    "                            0.109557687, 0, 0, 0, None, 0]}\n",
    "\n",
    "# Create a DataFrame\n",
    "                             df = pd.DataFrame(data)\n",
    "print (df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 246,
   "id": "21dd9895-6d33-4a76-9e02-bc27f12bdae0",
   "metadata": {},
   "outputs": [
    {
     "ename": "IndentationError",
     "evalue": "unindent does not match any outer indentation level (<tokenize>, line 102)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m<tokenize>:102\u001b[0;36m\u001b[0m\n\u001b[0;31m    df()\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unindent does not match any outer indentation level\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "file_path = 'reasonOfAccident.csv'\n",
    "data = pd.read_csv(file_path)\n",
    "\n",
    "# Display the first few rows of the dataset\n",
    "data.head()\n",
    "# Data for states/UTs\n",
    "data = {\"State/UT\": [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \n",
    "                 \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu & Kashmir\", \n",
    "                 \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \n",
    "                 \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \n",
    "                 \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \n",
    "                 \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\", \n",
    "                 \"Andaman & Nicobar Is.\", \"Chandigarh\", \"Dadra & Nagar Haveli\", \n",
    "                 \"Daman & Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\", \"Total\"],\n",
    "    \n",
    "\"Fault of Driver\": [40.7531652, 2.168057717, 22.09541013, 4.81078421, 35.65445059, \n",
    "                        260.1908066, 31.34529541, 32.37683097, 42.77014166, 28.81678473, \n",
    "                        8.975954808, 57.9569979, 108.6090336, 56.83163087, 42.92528259, \n",
    "                        0, 0.842633479, 10.39002703, 10.66463415, 22.03971972, \n",
    "                        13.87360093, 34.48218666, 20.14487935, 89.17484199, \n",
    "                        50.67140228, 15.29702495, 10.30110966, 3.834097515, \n",
    "                        6.520873506, 57.28084166, 34.96139088, 25.31210995, \n",
    "                        16.03308571, None, 1.551036868, 89.02578863, 31.29953687],\n",
    "    \n",
    "\"Fault of Other Vehicles\": [0.549506605, 1.445371811, 0.006409111, 0.584056869, \n",
    "                                2.842021424, 0, 0.744543834, 1.798712832, 0.320484713, \n",
    "                                3.029988433, 1.08523871, 4.998748103, 0, \n",
    "                                3.049837974, 6.469448855, 0, 1.348213566, \n",
    "                                1.640530584, 3.689660157, 0.131032816, 1.056109398, \n",
    "                                0, 0, 2.456692604, 0.158010662, \n",
    "                                0.055805509, 0.626034829, 1.447509154, 1.369785263, \n",
    "                                1.637887414, 0, 0, 0, 0, None, 0],\n",
    "    \n",
    "\"Fault of Pedestrian\": [0.446474117, 0, 0.461455991, 0.274737277, \n",
    "                            0.571535989, 11.99825854, 2.501667282, 1.372701898, \n",
    "                            0, 1.778124791, 0.924574879, 0.548323711, 0, \n",
    "                            0.209289107, 0.297220897, 0, 1.011160175, \n",
    "                            0, 0, 0.443349679, 0, 0, 0, 1.307053111, \n",
    "                            1.454043543, 0.68047264, 0, 0.48645644, \n",
    "                            0.377974019, 0, 0, 0, 0, None, 0],\n",
    "    \n",
    "\"Defect in Motor Vehicle\": [0.127836606, 1.228566039, 0, 0.519695339, \n",
    "                                2.630631401, 1.165545115, 0.266381238, 0.650850038, \n",
    "                                1.077994034, 2.719015936, 0.863947018, 1.024628786, \n",
    "                                0, 2.291164961, 0.442271813, 4.622182132, \n",
    "                                2.527900437, 0, 1.061409086, 0.066707616, \n",
    "                                0.60915525, 0.107952863, 0, 0.719364331, \n",
    "                                1.07890651, 0.544378112, 0.347005619, 1.030466882, \n",
    "                                0.645294774, 0, 0, 0, 0, None, 0],\n",
    "    \n",
    "\"Defect in Road Condition\": [0.543782578, 1.084028858, 0, 0.428436453, \n",
    "                                 1.722437227, 0.068561477, 0.335871996, 0.556180941, \n",
    "                                 0.364187174, 0.901022876, 0.676000649, 0.291348121, \n",
    "                                 0, 1.991000321, 0.339045394, 2.836339036, \n",
    "                                 1.011160175, 0, 0, 0.684849098, \n",
    "                                 0.247999819, 0, 0, 0.163554896, \n",
    "                                 1.531551195, 0, 0.009914446, 1.36077681, \n",
    "                                 0.690213425, 0, 0, 0, 0, None, 0],\n",
    "    \n",
    "\"Weather Condition\": [0.114480543, 1.662177583, 0, 0.392893519, \n",
    "                         0.829901573, 0.068561477, 0.320981119, 0.500957302, \n",
    "                         0, 0.159473075, 0.615372788, 1.111378508, 0, \n",
    "                         0.742150189, 0.090768058, 3.851818443, \n",
    "                         0.943749497, 0, 0, 1.120989839, \n",
    "                         0.033552917, 1.637795069, 0.049898104, \n",
    "                         1.047903449, 0, 0, 0, 0.791742888, \n",
    "                         1.033128985, 0, 0, 0, 0, None, 0],\n",
    "    \n",
    "\"Fault of Passenger\": [0.129744615, 0.794954496, 0, 0.377523601, \n",
    "                          1.119584197, 0, 0.221708608, 0.607460035, 0, \n",
    "                          0, 0.163695224, 0.225876633, 0, \n",
    "                          0.72287356, 0.084538878, 1.645776971, \n",
    "                          1.112276192, 0, 0, 0.10092513, \n",
    "                          0.00583529, 0, 0.655118028, 1.44981713, \n",
    "                          0.192218976, 0, 0.505636759, 1.687082982, \n",
    "                          0.223497681, 0, 0, 0, 0, None, 0],\n",
    "    \n",
    "\"Falling of Boulders\": [0.011448054, 0, 0, 0.078770828, \n",
    "                            0.101780382, 0, 0.004963626, 0.512790939, 0, \n",
    "                            0, 0.072753433, 0.068745062, 0, \n",
    "                            0.097760043, 0.063181688, 0.035016531, \n",
    "                            0.40446407, 0, 0, 0.183827916, \n",
    "                            0.004376467, 0, 0, 0, \n",
    "                            1.751672925, 0, 0.009914446, 0.232718358, \n",
    "                            0.112844417, 0, 0, 0, 0, None, 0],\n",
    "    \n",
    "\"Other Causes\": [2.919253839, 2.457132079, 0.137795886, 0.922195056, \n",
    "                     6.075505854, 9.804291263, 2.197231581, 2.070886484, \n",
    "                     0, 7.016815319, 1.912809012, 3.903737468, 0, \n",
    "                     5.966116452, 3.834505518, 11.55545533, \n",
    "                     7.482585294, 0, 0, 3.712603004, \n",
    "                     0.90446993, 6.551180277, 0.038809636, \n",
    "                     3.469242484, 2.123074637, 1.358279138, 2.552895369, \n",
    "                     2.264557382, 0, 0, 0, 0, None, 0]}\n",
    "\n",
    "# Create a DataFrame\n",
    "                    df = pd.DataFrame(data)\n",
    "\n",
    "# Display the DataFrame\n",
    "                  df()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 240,
   "id": "775ac5b0-fc25-46b4-8571-de5626fac49b",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "unmatched '}' (1858867874.py, line 90)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[240], line 90\u001b[0;36m\u001b[0m\n\u001b[0;31m    2.264557382, 0, 0, 0, 0, None, 0]}\u001b[0m\n\u001b[0m                                     ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m unmatched '}'\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "\n",
    "# Data for states/UTs\n",
    "data = \"State/UT\": [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\",  \n",
    "        \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu & Kashmir\", \n",
    "        \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \n",
    "        \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \n",
    "        \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \n",
    "        \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\", \n",
    "        \"Andaman & Nicobar Is.\", \"Chandigarh\", \"Dadra & Nagar Haveli\", \n",
    "        \"Daman & Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\", \"Total\"],\n",
    "    \"Fault of Driver\": [\n",
    "        40.7531652, 2.168057717, 22.09541013, 4.81078421, 35.65445059, \n",
    "        260.1908066, 31.34529541, 32.37683097, 42.77014166, 28.81678473, \n",
    "        8.975954808, 57.9569979, 108.6090336, 56.83163087, 42.92528259, \n",
    "        0, 0.842633479, 10.39002703, 10.66463415, 22.03971972, \n",
    "        13.87360093, 34.48218666, 20.14487935, 89.17484199, \n",
    "        50.67140228, 15.29702495, 10.30110966, 3.834097515, \n",
    "        6.520873506, 57.28084166, 34.96139088, 25.31210995, \n",
    "        16.03308571, None, 1.551036868, 89.02578863],\n",
    "    \"Fault of Other Vehicles\": [\n",
    "        0.549506605, 1.445371811, 0.006409111, 0.584056869, 2.842021424, \n",
    "        0, 0.744543834, 1.798712832, 0.320484713, 3.029988433, \n",
    "        1.08523871, 4.998748103, 0, 3.049837974, 6.469448855, \n",
    "        0, 1.348213566, 1.640530584, 3.689660157, 0.131032816, \n",
    "        1.056109398, 0, 2.456692604, 0.158010662, \n",
    "        0.055805509, 0.626034829, 1.447509154, 1.369785263, \n",
    "        1.637887414, 0, 0, 0, 0, None, 0],\n",
    "    \"Fault of Pedestrian\": [\n",
    "        0.446474117, 0, 0.461455991, 0.274737277, 0.571535989, \n",
    "        11.99825854, 2.501667282, 1.372701898, 0, 1.778124791, \n",
    "        0.924574879, 0.548323711, 0, 0.209289107, 0.297220897, \n",
    "        0, 1.011160175, 0, 0, 0.443349679, \n",
    "        0, 0, 0, 1.307053111, \n",
    "        1.454043543, 0.68047264, 0, 0.48645644, \n",
    "        0.377974019, 0, 0, 0, 0, None, 0],\n",
    "    \"Defect in Motor Vehicle\": [\n",
    "        0.127836606, 1.228566039, 0, 0.519695339, 2.630631401, \n",
    "        1.165545115, 0.266381238, 0.650850038, 1.077994034, \n",
    "        2.719015936, 0.863947018, 1.024628786, 0, \n",
    "        2.291164961, 0.442271813, 4.622182132, \n",
    "        2.527900437, 0, 1.061409086, 0.066707616, \n",
    "        0.60915525, 0.107952863, 0, 0.719364331, \n",
    "        1.07890651, 0.544378112, 0.347005619, 1.030466882, \n",
    "        0.645294774, 0, 0, 0, 0, None, 0],\n",
    "    \"Defect in Road Condition\": [\n",
    "        0.543782578, 1.084028858, 0, 0.428436453, 1.722437227, \n",
    "        0.068561477, 0.335871996, 0.556180941, 0.364187174, \n",
    "        0.901022876, 0.676000649, 0.291348121, 0, \n",
    "        1.991000321, 0.339045394, 2.836339036, \n",
    "        1.011160175, 0, 0, 0.684849098, \n",
    "        0.247999819, 0, 0, 0.163554896, \n",
    "        1.531551195, 0, 0.009914446, 1.36077681, \n",
    "        0.690213425, 0, 0, 0, 0, None, 0],\n",
    "    \"Weather Condition\": [\n",
    "        0.114480543, 1.662177583, 0, 0.392893519, 0.829901573, \n",
    "        0.068561477, 0.320981119, 0.500957302, 0, \n",
    "        0.159473075, 0.615372788, 1.111378508, 0, \n",
    "        0.742150189, 0.090768058, 3.851818443, \n",
    "        0.943749497, 0, 0, 1.120989839, \n",
    "        0.033552917, 1.637795069, 0.049898104, \n",
    "        1.047903449, 0, 0, 0.505636759, 1.687082982, \n",
    "        0.223497681, 0, 0, 0, 0, None, 0],\n",
    "    \"Fault of Passenger\": [\n",
    "        0.129744615, 0.794954496, 0, 0.377523601, 1.119584197, \n",
    "        0, 0.221708608, 0.607460035, 0, \n",
    "        0, 0.163695224, 0.225876633, 0, \n",
    "        0.72287356, 0.084538878, 1.645776971, \n",
    "        1.112276192, 0, 0, 0.10092513, \n",
    "        0.00583529, 0, 0.655118028, 1.44981713, \n",
    "        0.192218976, 0, 0.505636759, 1.687082982, \n",
    "        0.223497681, 0, 0, 0, 0, None, 0],\n",
    "    \"Falling of Boulders\": [\n",
    "        0.011448054, 0, 0, 0.078770828, 0.101780382, \n",
    "        0, 0.004963626, 0.512790939, 0, \n",
    "        0, 0.072753433, 0.068745062, 0, \n",
    "        0.097760043, 0.063181688, 0.035016531, \n",
    "        0.40446407, 0, 0, 0.183827916, \n",
    "        0.004376467, 0, 0, 0, \n",
    "        1.751672925, 0, 0.009914446, 0.232718358, \n",
    "        0.112844417, 0, 0, 0, 0, None, 0],\n",
    "    \"Other Causes\": [\n",
    "        2.919253839, 2.457132079, 0.137795886, 0.922195056, 6.075505854, \n",
    "        9.804291263, 2.197231581, 2.070886484, 0, \n",
    "        7.016815319, 1.912809012, 3.903737468, 0, \n",
    "        5.966116452, 3.834505518, 11.55545533, \n",
    "        7.482585294, 0, 0, 0.90446993, 0, 0, 6.551180277, 0, \n",
    "        3.469242484, 2.123074637, 1.358279138, 2.552895369,\n",
    "        2.264557382, 0, 0, 0, 0, None, 0]}\n",
    "\n",
    "# Create a DataFrame\n",
    "      df = pd.DataFrame(data)\n",
    "\n",
    "# Calculate total number of accidents for each reason per 1 lakh people\n",
    "      reason_columns = df.columns[2:]  # All columns except 'Sl. No' and 'State/UTs'\n",
    "      df[\"Total Accidents\"] = df[reason_columns].sum(axis=1)\n",
    "\n",
    "# Display the DataFrame\n",
    "(df[[\"State/UTs\", \"Total Accidents\"]])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 236,
   "id": "7e03d08c-8535-4153-979e-38d893360ef5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['Sl. No', 'States/UTs', 'Fault of Driver - Killed (per 1L)',\n",
      "       'Fault of Driver - Injured (per 1L)'],\n",
      "      dtype='object')\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>States/UTs</th>\n",
       "      <th>Total Accidents</th>\n",
       "      <th>Total Deaths</th>\n",
       "      <th>Total Injuries</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>63.021539</td>\n",
       "      <td>12.865705</td>\n",
       "      <td>50.155834</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>3.541161</td>\n",
       "      <td>1.373103</td>\n",
       "      <td>2.168058</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>27.911678</td>\n",
       "      <td>7.783865</td>\n",
       "      <td>20.127813</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>5.782931</td>\n",
       "      <td>2.541800</td>\n",
       "      <td>3.241131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chhattisgarh</td>\n",
       "      <td>43.718589</td>\n",
       "      <td>9.622161</td>\n",
       "      <td>34.096428</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Goa</td>\n",
       "      <td>130.061123</td>\n",
       "      <td>16.934685</td>\n",
       "      <td>113.126438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>41.183201</td>\n",
       "      <td>10.977885</td>\n",
       "      <td>30.205316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>42.676040</td>\n",
       "      <td>12.567323</td>\n",
       "      <td>30.108717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Himachal Pradesh</td>\n",
       "      <td>94.309910</td>\n",
       "      <td>16.723475</td>\n",
       "      <td>77.586435</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>37.069516</td>\n",
       "      <td>4.473220</td>\n",
       "      <td>32.596297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Jharkhand</td>\n",
       "      <td>11.279814</td>\n",
       "      <td>4.104506</td>\n",
       "      <td>7.175307</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Karnataka</td>\n",
       "      <td>88.620569</td>\n",
       "      <td>13.925785</td>\n",
       "      <td>74.694784</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Kerala</td>\n",
       "      <td>135.140147</td>\n",
       "      <td>12.120555</td>\n",
       "      <td>123.019592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>69.987930</td>\n",
       "      <td>9.280320</td>\n",
       "      <td>60.707610</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>40.406914</td>\n",
       "      <td>9.889269</td>\n",
       "      <td>30.517645</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Manipur</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Meghalaya</td>\n",
       "      <td>0.674107</td>\n",
       "      <td>0.404464</td>\n",
       "      <td>0.269643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Mizoram</td>\n",
       "      <td>28.800426</td>\n",
       "      <td>8.567215</td>\n",
       "      <td>20.233211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Nagaland</td>\n",
       "      <td>11.068980</td>\n",
       "      <td>3.133684</td>\n",
       "      <td>7.935297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Odisha</td>\n",
       "      <td>34.554545</td>\n",
       "      <td>8.993616</td>\n",
       "      <td>25.560929</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Punjab</td>\n",
       "      <td>19.240655</td>\n",
       "      <td>9.951939</td>\n",
       "      <td>9.288716</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>52.494268</td>\n",
       "      <td>14.410248</td>\n",
       "      <td>38.084019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Sikkim</td>\n",
       "      <td>34.885035</td>\n",
       "      <td>5.240944</td>\n",
       "      <td>29.644091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Tamil Nadu</td>\n",
       "      <td>123.361973</td>\n",
       "      <td>19.855287</td>\n",
       "      <td>103.506686</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Telangana</td>\n",
       "      <td>60.886911</td>\n",
       "      <td>16.608340</td>\n",
       "      <td>44.278571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Tripura</td>\n",
       "      <td>30.430736</td>\n",
       "      <td>4.001179</td>\n",
       "      <td>26.429557</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Uttarakhand</td>\n",
       "      <td>15.644996</td>\n",
       "      <td>6.315502</td>\n",
       "      <td>9.329494</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>4.822024</td>\n",
       "      <td>2.025400</td>\n",
       "      <td>2.796624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>9.177647</td>\n",
       "      <td>2.936146</td>\n",
       "      <td>6.241501</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Andaman &amp; Nicobar Is.</td>\n",
       "      <td>80.403383</td>\n",
       "      <td>6.043392</td>\n",
       "      <td>74.359992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Chandigarh</td>\n",
       "      <td>44.151784</td>\n",
       "      <td>12.411767</td>\n",
       "      <td>31.740016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Dadra &amp; Nagar Haveli</td>\n",
       "      <td>45.096288</td>\n",
       "      <td>17.165684</td>\n",
       "      <td>27.930604</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Daman &amp; Diu</td>\n",
       "      <td>26.310705</td>\n",
       "      <td>6.166571</td>\n",
       "      <td>20.144133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>5.098898</td>\n",
       "      <td>5.098898</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>1.551037</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.551037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Puducherry</td>\n",
       "      <td>118.113423</td>\n",
       "      <td>12.099815</td>\n",
       "      <td>106.013608</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               States/UTs  Total Accidents  Total Deaths  Total Injuries\n",
       "0          Andhra Pradesh        63.021539     12.865705       50.155834\n",
       "1       Arunachal Pradesh         3.541161      1.373103        2.168058\n",
       "2                   Assam        27.911678      7.783865       20.127813\n",
       "3                   Bihar         5.782931      2.541800        3.241131\n",
       "4            Chhattisgarh        43.718589      9.622161       34.096428\n",
       "5                     Goa       130.061123     16.934685      113.126438\n",
       "6                 Gujarat        41.183201     10.977885       30.205316\n",
       "7                 Haryana        42.676040     12.567323       30.108717\n",
       "8        Himachal Pradesh        94.309910     16.723475       77.586435\n",
       "9         Jammu & Kashmir        37.069516      4.473220       32.596297\n",
       "10              Jharkhand        11.279814      4.104506        7.175307\n",
       "11              Karnataka        88.620569     13.925785       74.694784\n",
       "12                 Kerala       135.140147     12.120555      123.019592\n",
       "13         Madhya Pradesh        69.987930      9.280320       60.707610\n",
       "14            Maharashtra        40.406914      9.889269       30.517645\n",
       "15                Manipur         0.000000      0.000000        0.000000\n",
       "16              Meghalaya         0.674107      0.404464        0.269643\n",
       "17                Mizoram        28.800426      8.567215       20.233211\n",
       "18               Nagaland        11.068980      3.133684        7.935297\n",
       "19                 Odisha        34.554545      8.993616       25.560929\n",
       "20                 Punjab        19.240655      9.951939        9.288716\n",
       "21              Rajasthan        52.494268     14.410248       38.084019\n",
       "22                 Sikkim        34.885035      5.240944       29.644091\n",
       "23             Tamil Nadu       123.361973     19.855287      103.506686\n",
       "24              Telangana        60.886911     16.608340       44.278571\n",
       "25                Tripura        30.430736      4.001179       26.429557\n",
       "26            Uttarakhand        15.644996      6.315502        9.329494\n",
       "27          Uttar Pradesh         4.822024      2.025400        2.796624\n",
       "28            West Bengal         9.177647      2.936146        6.241501\n",
       "29  Andaman & Nicobar Is.        80.403383      6.043392       74.359992\n",
       "30             Chandigarh        44.151784     12.411767       31.740016\n",
       "31   Dadra & Nagar Haveli        45.096288     17.165684       27.930604\n",
       "32            Daman & Diu        26.310705      6.166571       20.144133\n",
       "33                  Delhi         5.098898      5.098898        0.000000\n",
       "34            Lakshadweep         1.551037      0.000000        1.551037\n",
       "35             Puducherry       118.113423     12.099815      106.013608"
      ]
     },
     "execution_count": 236,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Data for states/UTs\n",
    "data = {\n",
    "    \"Sl. No\": list(range(1, 37)),\n",
    "    \"States/UTs\": [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \n",
    "        \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu & Kashmir\", \n",
    "        \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \n",
    "        \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \n",
    "        \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \n",
    "        \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\", \n",
    "        \"Andaman & Nicobar Is.\", \"Chandigarh\", \"Dadra & Nagar Haveli\", \n",
    "        \"Daman & Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\"],\n",
    "    \"Fault of Driver - Killed (per 1L)\": [\n",
    "        12.86570499, 1.373103221, 7.783865294, 2.541800124, 9.622160689, \n",
    "        16.93468491, 10.9778852, 12.56732255, 16.72347501, 4.473219766, \n",
    "        4.104506184, 13.92578548, 12.12055501, 9.280319613, 9.889268931, \n",
    "        0, 0.40446407, 8.567215272, 3.133683969, 8.993616034, \n",
    "        9.951938732, 14.41024833, 5.240944222, 19.85528718, \n",
    "        16.60833958, 4.001179123, 6.315502268, 2.025400423, \n",
    "        2.936146001, 6.043391551, 12.41176749, 17.16568376, \n",
    "        6.166571427, 5.098898072, None, 12.09981466],\n",
    "    \"Fault of Driver - Injured (per 1L)\": [\n",
    "        50.15583378, 2.168057717, 20.12781305, 3.241131375, 34.09642783, \n",
    "        113.1264376, 30.20531607, 30.1087172, 77.58643546, 32.59629662, \n",
    "        7.175307339, 74.69478379, 123.0195922, 60.70761005, 30.51764499, \n",
    "        0, 0.269642713, 20.23321054, 7.935296502, 25.56092885, \n",
    "        9.288716448, 38.08401933, 29.64409075, 103.5066863, \n",
    "        44.27857118, 26.42955734, 9.329493931, 2.796624058, \n",
    "        6.241501405, 74.3599917, 31.74001611, 27.93060409, \n",
    "        20.14413333, None, 1.551036868, 106.0136079]}\n",
    "\n",
    "# Create a DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Check the actual column names\n",
    "print(df.columns)\n",
    "\n",
    "# Handle potential 'NA' values by filling them with 0\n",
    "df.fillna(0, inplace=True)\n",
    "\n",
    "# Calculate total number of road accidents, injuries, and deaths due to fault of the driver\n",
    "df[\"Total Accidents\"] = df[\"Fault of Driver - Killed (per 1L)\"] + df[\"Fault of Driver - Injured (per 1L)\"]\n",
    "df[\"Total Deaths\"] = df[\"Fault of Driver - Killed (per 1L)\"]\n",
    "df[\"Total Injuries\"] = df[\"Fault of Driver - Injured (per 1L)\"]\n",
    "\n",
    "# Display the relevant columns\n",
    "result_df = df[[\"States/UTs\", \"Total Accidents\", \"Total Deaths\", \"Total Injuries\"]]\n",
    "\n",
    "# Display the result\n",
    "(result_df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 250,
   "id": "e26897ac-1734-417e-a340-2dad2257b209",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>States/UTs</th>\n",
       "      <th>Total Accidents</th>\n",
       "      <th>Total Deaths</th>\n",
       "      <th>Total Injuries</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>0.549507</td>\n",
       "      <td>0.143101</td>\n",
       "      <td>0.810904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>1.445372</td>\n",
       "      <td>1.011760</td>\n",
       "      <td>3.252087</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>0.006409</td>\n",
       "      <td>0.003205</td>\n",
       "      <td>0.003205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>0.584057</td>\n",
       "      <td>0.243997</td>\n",
       "      <td>0.379445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chhattisgarh</td>\n",
       "      <td>2.842021</td>\n",
       "      <td>0.990401</td>\n",
       "      <td>2.603229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Goa</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>0.744544</td>\n",
       "      <td>0.281272</td>\n",
       "      <td>0.853744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>1.798713</td>\n",
       "      <td>0.828355</td>\n",
       "      <td>0.796798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Himachal Pradesh</td>\n",
       "      <td>0.320485</td>\n",
       "      <td>0.043702</td>\n",
       "      <td>0.437025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>3.029988</td>\n",
       "      <td>0.494367</td>\n",
       "      <td>7.471314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Jharkhand</td>\n",
       "      <td>1.085239</td>\n",
       "      <td>0.633561</td>\n",
       "      <td>0.682063</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Karnataka</td>\n",
       "      <td>4.998748</td>\n",
       "      <td>1.060638</td>\n",
       "      <td>7.347538</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Kerala</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>3.049838</td>\n",
       "      <td>0.476408</td>\n",
       "      <td>3.084261</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>6.469449</td>\n",
       "      <td>0.472528</td>\n",
       "      <td>1.945284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Manipur</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Meghalaya</td>\n",
       "      <td>1.348214</td>\n",
       "      <td>0.505580</td>\n",
       "      <td>0.572991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Mizoram</td>\n",
       "      <td>1.640531</td>\n",
       "      <td>0.820265</td>\n",
       "      <td>1.093687</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Nagaland</td>\n",
       "      <td>3.689660</td>\n",
       "      <td>0.657063</td>\n",
       "      <td>2.577708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Odisha</td>\n",
       "      <td>0.131033</td>\n",
       "      <td>0.038119</td>\n",
       "      <td>0.147710</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Punjab</td>\n",
       "      <td>1.056109</td>\n",
       "      <td>0.702871</td>\n",
       "      <td>0.717289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Sikkim</td>\n",
       "      <td>2.456693</td>\n",
       "      <td>1.801575</td>\n",
       "      <td>3.766929</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Tamil Nadu</td>\n",
       "      <td>0.158011</td>\n",
       "      <td>0.047126</td>\n",
       "      <td>0.119201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Telangana</td>\n",
       "      <td>0.055806</td>\n",
       "      <td>0.018602</td>\n",
       "      <td>0.124012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Tripura</td>\n",
       "      <td>0.626035</td>\n",
       "      <td>0.190532</td>\n",
       "      <td>1.388164</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Uttarakhand</td>\n",
       "      <td>1.447509</td>\n",
       "      <td>0.803070</td>\n",
       "      <td>1.328536</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>1.369785</td>\n",
       "      <td>0.752706</td>\n",
       "      <td>0.942885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>1.637887</td>\n",
       "      <td>0.673780</td>\n",
       "      <td>1.350846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Andaman &amp; Nicobar Is.</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Chandigarh</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Dadra &amp; Nagar Haveli</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Daman &amp; Diu</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.077437</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Puducherry</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               States/UTs  Total Accidents  Total Deaths  Total Injuries\n",
       "0          Andhra Pradesh         0.549507      0.143101        0.810904\n",
       "1       Arunachal Pradesh         1.445372      1.011760        3.252087\n",
       "2                   Assam         0.006409      0.003205        0.003205\n",
       "3                   Bihar         0.584057      0.243997        0.379445\n",
       "4            Chhattisgarh         2.842021      0.990401        2.603229\n",
       "5                     Goa         0.000000      0.000000        0.000000\n",
       "6                 Gujarat         0.744544      0.281272        0.853744\n",
       "7                 Haryana         1.798713      0.828355        0.796798\n",
       "8        Himachal Pradesh         0.320485      0.043702        0.437025\n",
       "9         Jammu & Kashmir         3.029988      0.494367        7.471314\n",
       "10              Jharkhand         1.085239      0.633561        0.682063\n",
       "11              Karnataka         4.998748      1.060638        7.347538\n",
       "12                 Kerala         0.000000      0.000000        0.000000\n",
       "13         Madhya Pradesh         3.049838      0.476408        3.084261\n",
       "14            Maharashtra         6.469449      0.472528        1.945284\n",
       "15                Manipur         0.000000      0.000000        0.000000\n",
       "16              Meghalaya         1.348214      0.505580        0.572991\n",
       "17                Mizoram         1.640531      0.820265        1.093687\n",
       "18               Nagaland         3.689660      0.657063        2.577708\n",
       "19                 Odisha         0.131033      0.038119        0.147710\n",
       "20                 Punjab         1.056109      0.702871        0.717289\n",
       "21              Rajasthan         0.000000      0.000000        0.000000\n",
       "22                 Sikkim         2.456693      1.801575        3.766929\n",
       "23             Tamil Nadu         0.158011      0.047126        0.119201\n",
       "24              Telangana         0.055806      0.018602        0.124012\n",
       "25                Tripura         0.626035      0.190532        1.388164\n",
       "26            Uttarakhand         1.447509      0.803070        1.328536\n",
       "27          Uttar Pradesh         1.369785      0.752706        0.942885\n",
       "28            West Bengal         1.637887      0.673780        1.350846\n",
       "29  Andaman & Nicobar Is.         0.000000      0.000000        0.000000\n",
       "30             Chandigarh         0.000000      0.000000        0.000000\n",
       "31   Dadra & Nagar Haveli         0.000000      0.000000        0.000000\n",
       "32            Daman & Diu         0.000000      0.000000        0.000000\n",
       "33                  Delhi         0.000000      0.077437        0.000000\n",
       "34            Lakshadweep         0.000000      0.000000        0.000000\n",
       "35             Puducherry         0.000000      0.000000        0.000000"
      ]
     },
     "execution_count": 250,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Data for states/UTs\n",
    "data = {\"Sl. No\": list(range(1, 37)),\n",
    "    \"States/UTs\": [\n",
    "        \"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \n",
    "        \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu & Kashmir\", \n",
    "        \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \n",
    "        \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \n",
    "        \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \n",
    "        \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\", \n",
    "        \"Andaman & Nicobar Is.\", \"Chandigarh\", \"Dadra & Nagar Haveli\", \n",
    "        \"Daman & Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\"],\n",
    "    \"Fault of Driver of other vehicles - Total Accidents (per 1L)\": [\n",
    "        0.549506605, 1.445371811, 0.006409111, 0.584056869, 2.842021424,\n",
    "        0, 0.744543834, 1.798712832, 0.320484713, 3.029988433,\n",
    "        1.08523871, 4.998748103, 0, 3.049837974, 6.469448855,\n",
    "        0, 1.348213566, 1.640530584, 3.689660157, 0.131032816,\n",
    "        1.056109398, 0, 2.456692604, 0.158010662, 0.055805509,\n",
    "        0.626034829, 1.447509154, 1.369785263, 1.637887414,\n",
    "        0, 0, 0, 0, None,\n",
    "        0, 0],\n",
    "    \"Fault of Driver of other vehicles - Number of Persons Killed (per 1L)\": [\n",
    "        0.143100678, 1.011760268, 0.003204555, 0.243997442, 0.990401405,\n",
    "        0, 0.281272115, 0.828354594, 0.043702461, 0.494366534,\n",
    "        0.633561147, 1.060638104, 0, 0.476408099, 0.472527832,\n",
    "        0, 0.505580087, 0.820265292, 0.657062768, 0.038118637,\n",
    "        0.702871443, 0, 1.801574576, 0.047125987, 0.018601836,\n",
    "        0.190532339, 0.803070147, 0.752706261, 0.673779773,\n",
    "        0, 0, 0, 0, 0.077436536,\n",
    "        0, 0],\n",
    "    \"Fault of Driver of other vehicles - Number of Persons Injured (per 1L)\": [\n",
    "        0.810903844, 3.252086575, 0.003204555, 0.379444841, 2.60322899,\n",
    "        0, 0.853743596, 0.796798228, 0.437024608, 7.471313585,\n",
    "        0.682063435, 7.347537733, 0, 3.084260524, 1.945284071,\n",
    "        0, 0.572990766, 1.093687056, 2.577707781, 0.14770972,\n",
    "        0.717289318, 0, 3.766928659, 0.119201026, 0.124012242,\n",
    "        1.388164186, 1.328535799, 0.942884704, 1.350846276,\n",
    "        0, 0, 0, 0, None,\n",
    "        0, 0]}\n",
    "\n",
    "# Create a DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Handle potential 'NA' values by filling them with 0\n",
    "df.fillna(0, inplace=True)\n",
    "\n",
    "# Calculate total number of road accidents, injuries, and deaths due to the fault of drivers from other vehicles\n",
    "df[\"Total Accidents\"] = df[\"Fault of Driver of other vehicles - Total Accidents (per 1L)\"]\n",
    "df[\"Total Deaths\"] = df[\"Fault of Driver of other vehicles - Number of Persons Killed (per 1L)\"]\n",
    "df[\"Total Injuries\"] = df[\"Fault of Driver of other vehicles - Number of Persons Injured (per 1L)\"]\n",
    "\n",
    "# Display the relevant columns\n",
    "result_df = df[[\"States/UTs\", \"Total Accidents\", \"Total Deaths\", \"Total Injuries\"]]\n",
    "\n",
    "# Display the result\n",
    "(result_df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 252,
   "id": "7fbffe3c-f286-4178-b8d3-13f878df033b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>States/UTs</th>\n",
       "      <th>Total Accidents</th>\n",
       "      <th>Total Deaths</th>\n",
       "      <th>Total Injuries</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>0.446474</td>\n",
       "      <td>0.198433</td>\n",
       "      <td>0.305281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>0.461456</td>\n",
       "      <td>0.169841</td>\n",
       "      <td>0.413388</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>0.274737</td>\n",
       "      <td>0.138329</td>\n",
       "      <td>0.223824</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chhattisgarh</td>\n",
       "      <td>0.571536</td>\n",
       "      <td>0.160500</td>\n",
       "      <td>0.544134</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Goa</td>\n",
       "      <td>11.998259</td>\n",
       "      <td>1.988283</td>\n",
       "      <td>5.896287</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>2.501667</td>\n",
       "      <td>0.670089</td>\n",
       "      <td>2.169104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>1.372702</td>\n",
       "      <td>0.552236</td>\n",
       "      <td>0.761297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Himachal Pradesh</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>1.778125</td>\n",
       "      <td>0.279078</td>\n",
       "      <td>1.060496</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Jharkhand</td>\n",
       "      <td>0.924575</td>\n",
       "      <td>0.585059</td>\n",
       "      <td>0.733597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Karnataka</td>\n",
       "      <td>0.548324</td>\n",
       "      <td>0.126033</td>\n",
       "      <td>1.419095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Kerala</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>0.209289</td>\n",
       "      <td>0.013769</td>\n",
       "      <td>0.136313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>0.297221</td>\n",
       "      <td>0.098777</td>\n",
       "      <td>0.238489</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Manipur</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Meghalaya</td>\n",
       "      <td>1.011160</td>\n",
       "      <td>0.370759</td>\n",
       "      <td>0.606696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Mizoram</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Nagaland</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Odisha</td>\n",
       "      <td>0.214417</td>\n",
       "      <td>0.109591</td>\n",
       "      <td>0.185828</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Punjab</td>\n",
       "      <td>0.443350</td>\n",
       "      <td>0.407305</td>\n",
       "      <td>0.079298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Sikkim</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Tamil Nadu</td>\n",
       "      <td>1.307053</td>\n",
       "      <td>0.381166</td>\n",
       "      <td>1.137954</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Telangana</td>\n",
       "      <td>1.454044</td>\n",
       "      <td>0.155015</td>\n",
       "      <td>1.382737</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Tripura</td>\n",
       "      <td>0.680473</td>\n",
       "      <td>0.326627</td>\n",
       "      <td>0.680473</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Uttarakhand</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>0.486456</td>\n",
       "      <td>0.250735</td>\n",
       "      <td>0.369347</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>0.377974</td>\n",
       "      <td>0.224593</td>\n",
       "      <td>0.353871</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Andaman &amp; Nicobar Is.</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Chandigarh</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Dadra &amp; Nagar Haveli</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Daman &amp; Diu</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Puducherry</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               States/UTs  Total Accidents  Total Deaths  Total Injuries\n",
       "0          Andhra Pradesh         0.446474      0.198433        0.305281\n",
       "1       Arunachal Pradesh         0.000000      0.000000        0.000000\n",
       "2                   Assam         0.461456      0.169841        0.413388\n",
       "3                   Bihar         0.274737      0.138329        0.223824\n",
       "4            Chhattisgarh         0.571536      0.160500        0.544134\n",
       "5                     Goa        11.998259      1.988283        5.896287\n",
       "6                 Gujarat         2.501667      0.670089        2.169104\n",
       "7                 Haryana         1.372702      0.552236        0.761297\n",
       "8        Himachal Pradesh         0.000000      0.000000        0.000000\n",
       "9         Jammu & Kashmir         1.778125      0.279078        1.060496\n",
       "10              Jharkhand         0.924575      0.585059        0.733597\n",
       "11              Karnataka         0.548324      0.126033        1.419095\n",
       "12                 Kerala         0.000000      0.000000        0.000000\n",
       "13         Madhya Pradesh         0.209289      0.013769        0.136313\n",
       "14            Maharashtra         0.297221      0.098777        0.238489\n",
       "15                Manipur         0.000000      0.000000        0.000000\n",
       "16              Meghalaya         1.011160      0.370759        0.606696\n",
       "17                Mizoram         0.000000      0.000000        0.000000\n",
       "18               Nagaland         0.000000      0.000000        0.000000\n",
       "19                 Odisha         0.214417      0.109591        0.185828\n",
       "20                 Punjab         0.443350      0.407305        0.079298\n",
       "21              Rajasthan         0.000000      0.000000        0.000000\n",
       "22                 Sikkim         0.000000      0.000000        0.000000\n",
       "23             Tamil Nadu         1.307053      0.381166        1.137954\n",
       "24              Telangana         1.454044      0.155015        1.382737\n",
       "25                Tripura         0.680473      0.326627        0.680473\n",
       "26            Uttarakhand         0.000000      0.000000        0.000000\n",
       "27          Uttar Pradesh         0.486456      0.250735        0.369347\n",
       "28            West Bengal         0.377974      0.224593        0.353871\n",
       "29  Andaman & Nicobar Is.         0.000000      0.000000        0.000000\n",
       "30             Chandigarh         0.000000      0.000000        0.000000\n",
       "31   Dadra & Nagar Haveli         0.000000      0.000000        0.000000\n",
       "32            Daman & Diu         0.000000      0.000000        0.000000\n",
       "33                  Delhi         0.000000      0.000000        0.000000\n",
       "34            Lakshadweep         0.000000      0.000000        0.000000\n",
       "35             Puducherry         0.000000      0.000000        0.000000"
      ]
     },
     "execution_count": 252,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Data for states/UTs\n",
    "data = {\"Sl. No\": list(range(1, 37)),\n",
    "    \"States/UTs\": [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \n",
    "        \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu & Kashmir\", \n",
    "        \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \n",
    "        \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \n",
    "        \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \n",
    "        \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\", \n",
    "        \"Andaman & Nicobar Is.\", \"Chandigarh\", \"Dadra & Nagar Haveli\", \n",
    "        \"Daman & Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\"\n",
    "    ],\n",
    "    \"Fault of Pedestrian - Total Accidents (per 1L)\": [\n",
    "        0.446474117, 0, 0.461455991, 0.274737277, 0.571535989,\n",
    "        11.99825854, 2.501667282, 1.372701898, 0, 1.778124791,\n",
    "        0.924574879, 0.548323711, 0, 0.209289107, 0.297220897,\n",
    "        0, 1.011160175, 0, 0, 0.214417336,\n",
    "        0.443349679, 0, 0, 1.307053111, 1.454043543,\n",
    "        0.68047264, 0, 0.48645644, 0.377974019,\n",
    "        0, 0, 0, 0, None,\n",
    "        0, 0\n",
    "    ],\n",
    "    \"Fault of Pedestrian - Number of Persons Killed (per 1L)\": [\n",
    "        0.198432941, 0, 0.169841441, 0.138329258, 0.160499832,\n",
    "        1.988282844, 0.67008945, 0.552236396, 0, 0.279077882,\n",
    "        0.585058858, 0.126032614, 0, 0.01376902, 0.098777005,\n",
    "        0, 0.370758731, 0, 0, 0.109591083,\n",
    "        0.40730499, 0, 0, 0.381166072, 0.155015303,\n",
    "        0.326626867, 0, 0.250735264, 0.224593258,\n",
    "        0, 0, 0, 0, None,\n",
    "        0, 0\n",
    "    ],\n",
    "    \"Fault of Pedestrian - Number of Persons Injured (per 1L)\": [\n",
    "        0.305281447, 0, 0.413387659, 0.223824425, 0.544133578,\n",
    "        5.896287053, 2.169104369, 0.761297317, 0, 1.060495952,\n",
    "        0.733597117, 1.419094501, 0, 0.1363133, 0.238488624,\n",
    "        0, 0.606696105, 0, 0, 0.185828358,\n",
    "        0.079298317, 0, 0, 1.137953981, 1.382736504,\n",
    "        0.68047264, 0, 0.369346556, 0.353871328,\n",
    "        0, 0, 0, 0, None, 0, 0]}\n",
    "\n",
    "# Create a DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Handle potential 'NA' values by filling them with 0\n",
    "df.fillna(0, inplace=True)\n",
    "\n",
    "# Calculate total number of road accidents, injuries, and deaths due to the fault of pedestrians\n",
    "df[\"Total Accidents\"] = df[\"Fault of Pedestrian - Total Accidents (per 1L)\"]\n",
    "df[\"Total Deaths\"] = df[\"Fault of Pedestrian - Number of Persons Killed (per 1L)\"]\n",
    "df[\"Total Injuries\"] = df[\"Fault of Pedestrian - Number of Persons Injured (per 1L)\"]\n",
    "\n",
    "# Display the relevant columns\n",
    "result_df = df[[\"States/UTs\", \"Total Accidents\", \"Total Deaths\", \"Total Injuries\"]]\n",
    "\n",
    "# Display the result\n",
    "(result_df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 254,
   "id": "6fed725b-490f-4079-8178-8818a0d4020d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>States/UTs</th>\n",
       "      <th>Total Accidents</th>\n",
       "      <th>Total Deaths</th>\n",
       "      <th>Total Injuries</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>0.127837</td>\n",
       "      <td>0.049608</td>\n",
       "      <td>0.162181</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>1.228566</td>\n",
       "      <td>0.578149</td>\n",
       "      <td>1.589909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>0.519695</td>\n",
       "      <td>0.290107</td>\n",
       "      <td>0.341020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chhattisgarh</td>\n",
       "      <td>2.630631</td>\n",
       "      <td>0.896450</td>\n",
       "      <td>1.914254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Goa</td>\n",
       "      <td>1.165545</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.891299</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>0.266381</td>\n",
       "      <td>0.099273</td>\n",
       "      <td>0.271345</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>0.650850</td>\n",
       "      <td>0.422066</td>\n",
       "      <td>0.378676</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Himachal Pradesh</td>\n",
       "      <td>1.077994</td>\n",
       "      <td>0.538997</td>\n",
       "      <td>2.272528</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>2.719016</td>\n",
       "      <td>0.302999</td>\n",
       "      <td>1.538915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Jharkhand</td>\n",
       "      <td>0.863947</td>\n",
       "      <td>0.472897</td>\n",
       "      <td>0.666906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Karnataka</td>\n",
       "      <td>1.024629</td>\n",
       "      <td>0.184957</td>\n",
       "      <td>1.325798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Kerala</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>2.291165</td>\n",
       "      <td>0.509454</td>\n",
       "      <td>2.326964</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>0.442272</td>\n",
       "      <td>0.087209</td>\n",
       "      <td>0.404897</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Manipur</td>\n",
       "      <td>4.622182</td>\n",
       "      <td>0.945446</td>\n",
       "      <td>7.738653</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Meghalaya</td>\n",
       "      <td>2.527900</td>\n",
       "      <td>0.741517</td>\n",
       "      <td>1.381919</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Mizoram</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Nagaland</td>\n",
       "      <td>1.061409</td>\n",
       "      <td>0.303260</td>\n",
       "      <td>1.111952</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Odisha</td>\n",
       "      <td>0.066708</td>\n",
       "      <td>0.021442</td>\n",
       "      <td>0.083385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Punjab</td>\n",
       "      <td>0.609155</td>\n",
       "      <td>0.385678</td>\n",
       "      <td>0.306380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>0.107953</td>\n",
       "      <td>0.052518</td>\n",
       "      <td>0.110871</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Sikkim</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Tamil Nadu</td>\n",
       "      <td>0.719364</td>\n",
       "      <td>0.271667</td>\n",
       "      <td>0.712434</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Telangana</td>\n",
       "      <td>1.078907</td>\n",
       "      <td>0.430943</td>\n",
       "      <td>1.987296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Tripura</td>\n",
       "      <td>0.544378</td>\n",
       "      <td>0.108876</td>\n",
       "      <td>0.871005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Uttarakhand</td>\n",
       "      <td>0.347006</td>\n",
       "      <td>0.158631</td>\n",
       "      <td>0.178460</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>1.030467</td>\n",
       "      <td>0.543010</td>\n",
       "      <td>0.739194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>0.645295</td>\n",
       "      <td>0.383452</td>\n",
       "      <td>0.591612</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Andaman &amp; Nicobar Is.</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Chandigarh</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Dadra &amp; Nagar Haveli</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Daman &amp; Diu</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Puducherry</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               States/UTs  Total Accidents  Total Deaths  Total Injuries\n",
       "0          Andhra Pradesh         0.127837      0.049608        0.162181\n",
       "1       Arunachal Pradesh         1.228566      0.578149        1.589909\n",
       "2                   Assam         0.000000      0.000000        0.000000\n",
       "3                   Bihar         0.519695      0.290107        0.341020\n",
       "4            Chhattisgarh         2.630631      0.896450        1.914254\n",
       "5                     Goa         1.165545      0.000000        0.891299\n",
       "6                 Gujarat         0.266381      0.099273        0.271345\n",
       "7                 Haryana         0.650850      0.422066        0.378676\n",
       "8        Himachal Pradesh         1.077994      0.538997        2.272528\n",
       "9         Jammu & Kashmir         2.719016      0.302999        1.538915\n",
       "10              Jharkhand         0.863947      0.472897        0.666906\n",
       "11              Karnataka         1.024629      0.184957        1.325798\n",
       "12                 Kerala         0.000000      0.000000        0.000000\n",
       "13         Madhya Pradesh         2.291165      0.509454        2.326964\n",
       "14            Maharashtra         0.442272      0.087209        0.404897\n",
       "15                Manipur         4.622182      0.945446        7.738653\n",
       "16              Meghalaya         2.527900      0.741517        1.381919\n",
       "17                Mizoram         0.000000      0.000000        0.000000\n",
       "18               Nagaland         1.061409      0.303260        1.111952\n",
       "19                 Odisha         0.066708      0.021442        0.083385\n",
       "20                 Punjab         0.609155      0.385678        0.306380\n",
       "21              Rajasthan         0.107953      0.052518        0.110871\n",
       "22                 Sikkim         0.000000      0.000000        0.000000\n",
       "23             Tamil Nadu         0.719364      0.271667        0.712434\n",
       "24              Telangana         1.078907      0.430943        1.987296\n",
       "25                Tripura         0.544378      0.108876        0.871005\n",
       "26            Uttarakhand         0.347006      0.158631        0.178460\n",
       "27          Uttar Pradesh         1.030467      0.543010        0.739194\n",
       "28            West Bengal         0.645295      0.383452        0.591612\n",
       "29  Andaman & Nicobar Is.         0.000000      0.000000        0.000000\n",
       "30             Chandigarh         0.000000      0.000000        0.000000\n",
       "31   Dadra & Nagar Haveli         0.000000      0.000000        0.000000\n",
       "32            Daman & Diu         0.000000      0.000000        0.000000\n",
       "33                  Delhi         0.000000      0.000000        0.000000\n",
       "34            Lakshadweep         0.000000      0.000000        0.000000\n",
       "35             Puducherry         0.000000      0.000000        0.000000"
      ]
     },
     "execution_count": 254,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Data for states/UTs\n",
    "data = {\n",
    "    \"Sl. No\": list(range(1, 37)),\n",
    "    \"States/UTs\": [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \n",
    "        \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu & Kashmir\", \n",
    "        \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \n",
    "        \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \n",
    "        \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \n",
    "        \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\", \n",
    "        \"Andaman & Nicobar Is.\", \"Chandigarh\", \"Dadra & Nagar Haveli\", \n",
    "        \"Daman & Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\"],\n",
    "    \"Defect in Condition of Motor Vehicle - Total Accidents (per 1L)\": [\n",
    "        0.127836606, 1.228566039, 0, 0.519695339, 2.630631401,\n",
    "        1.165545115, 0.266381238, 0.650850038, 1.077994034, 2.719015936,\n",
    "        0.863947018, 1.024628786, 0, 2.291164961, 0.442271813,\n",
    "        4.622182132, 2.527900437, 0, 1.061409086, 0.066707616,\n",
    "        0.60915525, 0.107952863, 0, 0.719364331, 1.07890651,\n",
    "        0.544378112, 0.347005619, 1.030466882, 0.645294774,\n",
    "        0, 0, 0, 0, None,0, 0],\n",
    "    \"Defect in Condition of Motor Vehicle - Number of Persons Killed (per 1L)\": [\n",
    "        0.049608235, 0.578148724, 0, 0.290107195, 0.896450284,\n",
    "        0, 0.099272511, 0.422066388, 0.538997017, 0.302998843,\n",
    "        0.472897315, 0.184956953, 0, 0.509453747, 0.087208527,\n",
    "        0.945446345, 0.741517462, 0, 0.303259739, 0.021441734,\n",
    "        0.385678176, 0.052517609, 0, 0.271667455, 0.430942543,\n",
    "        0.108875622, 0.15863114, 0.543009503, 0.383451903,\n",
    "        0, 0, 0, 0, None,0, 0],\n",
    "    \"Defect in Condition of Motor Vehicle - Number of Persons Injured (per 1L)\": [\n",
    "        0.162180769, 1.589908992, 0, 0.341020047, 1.9142541,\n",
    "        0.891299206, 0.271344864, 0.378676386, 2.272527963, 1.538915178,\n",
    "        0.66690647, 1.325797631, 0, 2.326964413, 0.40489673,\n",
    "        7.738653418, 1.381918906, 0, 1.111952376, 0.08338452,\n",
    "        0.30637986, 0.110870508, 0, 0.712434039, 1.987296186,\n",
    "        0.871004979, 0.178460033, 0.739193582, 0.591611508,\n",
    "        0, 0, 0, 0, None,0, 0]}\n",
    "\n",
    "# Create a DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Handle potential 'NA' values by filling them with 0\n",
    "df.fillna(0, inplace=True)\n",
    "\n",
    "# Calculate total number of road accidents, injuries, and deaths due to defects in vehicles\n",
    "df[\"Total Accidents\"] = df[\"Defect in Condition of Motor Vehicle - Total Accidents (per 1L)\"]\n",
    "df[\"Total Deaths\"] = df[\"Defect in Condition of Motor Vehicle - Number of Persons Killed (per 1L)\"]\n",
    "df[\"Total Injuries\"] = df[\"Defect in Condition of Motor Vehicle - Number of Persons Injured (per 1L)\"]\n",
    "\n",
    "# Display the relevant columns\n",
    "result_df = df[[\"States/UTs\", \"Total Accidents\", \"Total Deaths\", \"Total Injuries\"]]\n",
    "\n",
    "# Display the result\n",
    "(result_df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 256,
   "id": "fb2ec73f-d1d5-49bb-a0ec-ca5222e238a0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>States/UTs</th>\n",
       "      <th>Total Accidents</th>\n",
       "      <th>Total Deaths</th>\n",
       "      <th>Total Injuries</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>0.543783</td>\n",
       "      <td>0.366338</td>\n",
       "      <td>0.843340</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>1.084029</td>\n",
       "      <td>0.650417</td>\n",
       "      <td>2.095789</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>0.428436</td>\n",
       "      <td>0.242076</td>\n",
       "      <td>0.270895</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chhattisgarh</td>\n",
       "      <td>1.722437</td>\n",
       "      <td>0.555877</td>\n",
       "      <td>1.491474</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Goa</td>\n",
       "      <td>0.068561</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>0.335872</td>\n",
       "      <td>0.052945</td>\n",
       "      <td>0.177036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>0.556181</td>\n",
       "      <td>0.291896</td>\n",
       "      <td>0.220895</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Himachal Pradesh</td>\n",
       "      <td>0.364187</td>\n",
       "      <td>0.160242</td>\n",
       "      <td>0.917752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>0.901023</td>\n",
       "      <td>0.087710</td>\n",
       "      <td>1.020628</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Jharkhand</td>\n",
       "      <td>0.676001</td>\n",
       "      <td>0.415301</td>\n",
       "      <td>0.700252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Karnataka</td>\n",
       "      <td>0.291348</td>\n",
       "      <td>0.070382</td>\n",
       "      <td>0.299532</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Kerala</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>1.991000</td>\n",
       "      <td>0.309803</td>\n",
       "      <td>1.840918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>0.339045</td>\n",
       "      <td>0.070301</td>\n",
       "      <td>0.288322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Manipur</td>\n",
       "      <td>2.836339</td>\n",
       "      <td>0.350165</td>\n",
       "      <td>4.482116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Meghalaya</td>\n",
       "      <td>1.011160</td>\n",
       "      <td>0.404464</td>\n",
       "      <td>0.438169</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Mizoram</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Nagaland</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Odisha</td>\n",
       "      <td>0.061943</td>\n",
       "      <td>0.021442</td>\n",
       "      <td>0.054796</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Punjab</td>\n",
       "      <td>0.684849</td>\n",
       "      <td>0.464976</td>\n",
       "      <td>0.623573</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>0.248000</td>\n",
       "      <td>0.103576</td>\n",
       "      <td>0.297600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Sikkim</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Tamil Nadu</td>\n",
       "      <td>0.163555</td>\n",
       "      <td>0.037424</td>\n",
       "      <td>0.228700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Telangana</td>\n",
       "      <td>1.531551</td>\n",
       "      <td>0.601459</td>\n",
       "      <td>3.797875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Tripura</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Uttarakhand</td>\n",
       "      <td>0.009914</td>\n",
       "      <td>0.009914</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>1.360777</td>\n",
       "      <td>0.734689</td>\n",
       "      <td>0.793244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>0.690213</td>\n",
       "      <td>0.367018</td>\n",
       "      <td>0.456856</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Andaman &amp; Nicobar Is.</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Chandigarh</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Dadra &amp; Nagar Haveli</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Daman &amp; Diu</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Puducherry</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               States/UTs  Total Accidents  Total Deaths  Total Injuries\n",
       "0          Andhra Pradesh         0.543783      0.366338        0.843340\n",
       "1       Arunachal Pradesh         1.084029      0.650417        2.095789\n",
       "2                   Assam         0.000000      0.000000        0.000000\n",
       "3                   Bihar         0.428436      0.242076        0.270895\n",
       "4            Chhattisgarh         1.722437      0.555877        1.491474\n",
       "5                     Goa         0.068561      0.000000        0.000000\n",
       "6                 Gujarat         0.335872      0.052945        0.177036\n",
       "7                 Haryana         0.556181      0.291896        0.220895\n",
       "8        Himachal Pradesh         0.364187      0.160242        0.917752\n",
       "9         Jammu & Kashmir         0.901023      0.087710        1.020628\n",
       "10              Jharkhand         0.676001      0.415301        0.700252\n",
       "11              Karnataka         0.291348      0.070382        0.299532\n",
       "12                 Kerala         0.000000      0.000000        0.000000\n",
       "13         Madhya Pradesh         1.991000      0.309803        1.840918\n",
       "14            Maharashtra         0.339045      0.070301        0.288322\n",
       "15                Manipur         2.836339      0.350165        4.482116\n",
       "16              Meghalaya         1.011160      0.404464        0.438169\n",
       "17                Mizoram         0.000000      0.000000        0.000000\n",
       "18               Nagaland         0.000000      0.000000        0.000000\n",
       "19                 Odisha         0.061943      0.021442        0.054796\n",
       "20                 Punjab         0.684849      0.464976        0.623573\n",
       "21              Rajasthan         0.248000      0.103576        0.297600\n",
       "22                 Sikkim         0.000000      0.000000        0.000000\n",
       "23             Tamil Nadu         0.163555      0.037424        0.228700\n",
       "24              Telangana         1.531551      0.601459        3.797875\n",
       "25                Tripura         0.000000      0.000000        0.000000\n",
       "26            Uttarakhand         0.009914      0.009914        0.000000\n",
       "27          Uttar Pradesh         1.360777      0.734689        0.793244\n",
       "28            West Bengal         0.690213      0.367018        0.456856\n",
       "29  Andaman & Nicobar Is.         0.000000      0.000000        0.000000\n",
       "30             Chandigarh         0.000000      0.000000        0.000000\n",
       "31   Dadra & Nagar Haveli         0.000000      0.000000        0.000000\n",
       "32            Daman & Diu         0.000000      0.000000        0.000000\n",
       "33                  Delhi         0.000000      0.000000        0.000000\n",
       "34            Lakshadweep         0.000000      0.000000        0.000000\n",
       "35             Puducherry         0.000000      0.000000        0.000000"
      ]
     },
     "execution_count": 256,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Data for states/UTs regarding defects in road condition\n",
    "data = {\n",
    "    \"Sl. No\": list(range(1, 37)),\n",
    "    \"States/UTs\": [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \n",
    "        \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu & Kashmir\", \n",
    "        \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \n",
    "        \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \n",
    "        \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \n",
    "        \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\", \n",
    "        \"Andaman & Nicobar Is.\", \"Chandigarh\", \"Dadra & Nagar Haveli\", \n",
    "        \"Daman & Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\"\n",
    "    ],\n",
    "    \"Defect in Road Condition - Total Accidents (per 1L)\": [\n",
    "        0.543782578, 1.084028858, 0, 0.428436453, 1.722437227,\n",
    "        0.068561477, 0.335871996, 0.556180941, 0.364187174, 0.901022876,\n",
    "        0.676000649, 0.291348121, 0, 1.991000321, 0.339045394,\n",
    "        2.836339036, 1.011160175, 0, 0, 0.061942786,\n",
    "        0.684849098, 0.247999819, 0, 0.163554896, 1.531551195,\n",
    "        0, 0.009914446, 1.36077681, 0.690213425,\n",
    "        0, 0, 0, 0, None,\n",
    "        0, 0\n",
    "    ],\n",
    "    \"Defect in Road Condition - Number of Persons Killed (per 1L)\": [\n",
    "        0.366337737, 0.650417315, 0, 0.242076202, 0.555877469,\n",
    "        0, 0.052945339, 0.291896381, 0.160242356, 0.087710191,\n",
    "        0.415300847, 0.07038185, 0, 0.309802954, 0.070300751,\n",
    "        0.350165313, 0.40446407, 0, 0, 0.021441734,\n",
    "        0.464976493, 0.103576395, 0, 0.037423578, 0.601459376,\n",
    "        0, 0.009914446, 0.734689355, 0.36701825,\n",
    "        0, 0, 0, 0, None,\n",
    "        0, 0\n",
    "    ],\n",
    "    \"Defect in Road Condition - Number of Persons Injured (per 1L)\": [\n",
    "        0.843339998, 2.095789126, 0, 0.270894798, 1.491474053,\n",
    "        0, 0.177035978, 0.220894558, 0.917751677, 1.020627683,\n",
    "        0.700251794, 0.299532057, 0, 1.840918, 0.288322067,\n",
    "        4.482116007, 0.438169409, 0, 0, 0.054795541,\n",
    "        0.623573126, 0.297599783, 0, 0.228699643, 3.797874926,\n",
    "        0, 0, 0.793244297, 0.456855553,\n",
    "        0, 0, 0, 0, None,0, 0]}\n",
    "\n",
    "# Create a DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Handle potential 'NA' values by filling them with 0\n",
    "df.fillna(0, inplace=True)\n",
    "\n",
    "# Calculate total number of road accidents, injuries, and deaths due to defects in road conditions\n",
    "df[\"Total Accidents\"] = df[\"Defect in Road Condition - Total Accidents (per 1L)\"]\n",
    "df[\"Total Deaths\"] = df[\"Defect in Road Condition - Number of Persons Killed (per 1L)\"]\n",
    "df[\"Total Injuries\"] = df[\"Defect in Road Condition - Number of Persons Injured (per 1L)\"]\n",
    "\n",
    "# Display the relevant columns\n",
    "result_df = df[[\"States/UTs\", \"Total Accidents\", \"Total Deaths\", \"Total Injuries\"]]\n",
    "\n",
    "# Display the result\n",
    "(result_df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 284,
   "id": "8ba6a19b-b0cd-4b5a-b829-b0246ba739ab",
   "metadata": {},
   "outputs": [
    {
     "ename": "IndentationError",
     "evalue": "unindent does not match any outer indentation level (<tokenize>, line 59)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m<tokenize>:59\u001b[0;36m\u001b[0m\n\u001b[0;31m    print(result_df)\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unindent does not match any outer indentation level\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Data for states/UTs\n",
    "data = {\n",
    "    \"Sl. No\": list(range(1, 37)),\n",
    "    \"States/UTs\": [\n",
    "        \"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\",\n",
    "        \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu & Kashmir\",\n",
    "        \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\",\n",
    "        \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\",\n",
    "        \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\",\n",
    "        \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\",\n",
    "        \"Andaman & Nicobar Is.\", \"Chandigarh\", \"Dadra & Nagar Haveli\",\n",
    "        \"Daman & Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\"\n",
    "    ],\n",
    "    \"Weather Condition - Total Accidents (per 1L)\": [\n",
    "        0.114480543, 1.662177583, 0, 0.392893519, 0.829901573,\n",
    "        0.068561477, 0.320981119, 0.500957302, 0, 0.159473075,\n",
    "        0.615372788, 1.111378508, 0, 0.742150189, 0.090768058,\n",
    "        3.851818443, 0.943749497, 0, 0, 0.026206563,\n",
    "        1.120989839, 0.033552917, 1.637795069, 0.049898104, 1.047903449,\n",
    "        0, 0, 0.791742888, 1.033128985, 0, 0, 0,\n",
    "        None, 0\n",
    "    ],\n",
    "    \"Weather Condition - Number of Persons Killed (per 1L)\": [\n",
    "        0.036252172, 0.939491677, 0, 0.201730169, 0.234877804,\n",
    "        0, 0.0711453, 0.295840926, 0, 0.015947308,\n",
    "        0.284950946, 0.330631014, 0, 0.114282868, 0.0364852,\n",
    "        0.52524797, 0.303348052, 0, 0, 0.026206563,\n",
    "        0.836236793, 0.016047047, 0.327559014, 0.01801876, 0.567356009,\n",
    "        0, 0, 0.419393515, 0.436039593, 0, 0, 0,\n",
    "        None, 0\n",
    "    ],\n",
    "    \"Weather Condition - Number of Persons Injured (per 1L)\": [\n",
    "        0.133560633, 1.806714764, 0, 0.293949674, 0.806413793,\n",
    "        0, 0.398744587, 0.268229106, 0, 0.287051536,\n",
    "        0.697220401, 0.50249367, 0, 0.616852105, 0.081869229,\n",
    "        4.447099476, 0.471874748, 0, 0, 0.021441734,\n",
    "        0.598341843, 0.037929384, 2.620472111, 0.077619273, 2.852281577,\n",
    "        0, 0, 0.593056462, 1.017790908, 0, 0, 0,\n",
    "        None, 0]}\n",
    "\n",
    "       # Drop rows with any 'NA' values\n",
    "      df.dropna(inplace=True)\n",
    "\n",
    "\n",
    "# Handle potential 'NA' values by filling them with 0\n",
    "      df.fillna(0, inplace=True)\n",
    "\n",
    "# Calculate total number of road accidents, injuries, and deaths due to weather conditions\n",
    "      df[\"Total Accidents\"] = df[\"Weather Condition - Total Accidents (per 1L)\"]\n",
    "      df[\"Total Deaths\"] = df[\"Weather Condition - Number of Persons Killed (per 1L)\"]\n",
    "      df[\"Total Injuries\"] = df[\"Weather Condition - Number of Persons Injured (per 1L)\"]\n",
    "\n",
    "# Display the relevant columns\n",
    "       result_df = df[[\"Sl. No\", \"States/UTs\", \"Total Accidents\", \"Total Deaths\", \"Total Injuries\"]]\n",
    "\n",
    "# Display the result\n",
    "     (result_df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 288,
   "id": "55a815d8-ac82-4c92-8e51-8b33cfb8f2bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Two-Wheelers</th>\n",
       "      <th>Auto-Rickshaws</th>\n",
       "      <th>Cars, Jeeps, Taxis</th>\n",
       "      <th>Buses</th>\n",
       "      <th>Trucks, Tempos, MAVs, Tractors</th>\n",
       "      <th>Other Motor Vehicles</th>\n",
       "      <th>Other Vehicles/Objects</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Total Accidents</th>\n",
       "      <td>496.78</td>\n",
       "      <td>95.28</td>\n",
       "      <td>409.43</td>\n",
       "      <td>139.62</td>\n",
       "      <td>260.57</td>\n",
       "      <td>128.03</td>\n",
       "      <td>85.88</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Two-Wheelers  Auto-Rickshaws  Cars, Jeeps, Taxis   Buses  \\\n",
       "Total Accidents        496.78           95.28              409.43  139.62   \n",
       "\n",
       "                 Trucks, Tempos, MAVs, Tractors  Other Motor Vehicles  \\\n",
       "Total Accidents                          260.57                128.03   \n",
       "\n",
       "                 Other Vehicles/Objects  \n",
       "Total Accidents                   85.88  "
      ]
     },
     "execution_count": 288,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Create a DataFrame with the provided data\n",
    "data = {\n",
    "    \"States/UTs\": [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \n",
    "        \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu & Kashmir\", \n",
    "        \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \n",
    "        \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \n",
    "        \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \n",
    "        \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\", \n",
    "        \"Andaman & Nicobar Is.\", \"Chandigarh\", \"Dadra & Nagar Haveli\", \n",
    "        \"Daman & Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\"],\n",
    "    \"Two-Wheelers\": [\n",
    "        13.81, 2.46, 4.83, 1.68, 18.74, \n",
    "        130.75, 9.20, 4.46, 11.86, 8.78, \n",
    "        3.61, 17.60, 36.26, 27.11, 12.54, \n",
    "        7.04, 1.52, 2.92, 2.83, 6.28, \n",
    "        5.76, 8.69, 5.08, 33.28, 14.25, \n",
    "        3.87, 2.29, 2.45, 3.85, 24.17, \n",
    "        5.78, 5.24, 5.76, 7.77, 1.55, 42.71],\n",
    "    \"Auto-Rickshaws\": [\n",
    "        8.48, 1.23, 0.94, 0.34, 1.22, \n",
    "        2.33, 3.62, 1.60, 11.61, 0.51, \n",
    "        0.76, 4.28, 15.08, 2.82, 2.96, \n",
    "        1.47, 0.91, 0.18, 2.93, 1.37, \n",
    "        0.67, 0.72, 0.00, 4.03, 7.96, \n",
    "        2.45, 0.14, 0.74, 0.28, 6.83, \n",
    "        0.85, 1.16, 0.41, 1.36, 0.00, 3.04],\n",
    "    \"Cars, Jeeps, Taxis\": [\n",
    "        7.35, 3.04, 5.17, 1.43, 11.66, \n",
    "        94.20, 7.30, 10.44, 9.67, 5.78, \n",
    "        2.35, 12.54, 26.10, 15.52, 16.37, \n",
    "        6.23, 3.71, 2.46, 3.79, 3.72, \n",
    "        6.22, 10.05, 20.14, 25.80, 11.18, \n",
    "        3.76, 4.35, 3.17, 1.61, 15.24, \n",
    "        18.48, 2.91, 2.47, 16.71, 0.00, 18.51],\n",
    "    \"Buses\": [\n",
    "        3.30, 1.08, 2.01, 0.92, 2.64, \n",
    "        24.27, 1.93, 2.54, 5.96, 12.68, \n",
    "        1.79, 6.30, 14.50, 4.63, 3.92, \n",
    "        1.33, 1.75, 0.46, 1.06, 1.82, \n",
    "        2.01, 2.66, 0.00, 9.66, 4.52, \n",
    "        0.73, 1.45, 1.17, 1.38, 5.52, \n",
    "        3.32, 1.45, 0.41, 3.16, 0.00, 7.29],\n",
    "    \"Trucks, Tempos, MAVs, Tractors\": [\n",
    "        8.25, 3.04, 5.66, 2.72, 11.38, \n",
    "        21.60, 9.03, 11.57, 5.43, 10.88, \n",
    "        4.77, 13.48, 11.78, 15.48, 9.64, \n",
    "        4.45, 2.60, 3.92, 0.86, 6.44, \n",
    "        4.99, 9.31, 0.00, 12.42, 13.90, \n",
    "        3.48, 4.55, 4.19, 3.77, 3.42, \n",
    "        3.32, 10.18, 3.29, 7.31, 0.00, 13.46],\n",
    "    \"Other Motor Vehicles\": [\n",
    "        2.99, 0.00, 3.49, 0.57, 6.45, \n",
    "        0.21, 2.92, 5.01, 0.00, 7.58, \n",
    "        1.13, 9.07, 4.90, 7.00, 6.37, \n",
    "        5.50, 5.63, 2.10, 3.94, 2.40, \n",
    "        2.08, 4.48, 7.86, 2.89, 5.75, \n",
    "        3.89, 0.89, 1.81, 2.13, 2.10, \n",
    "        3.22, 4.07, 3.70, 1.89, 0.00, 4.01 ],\n",
    "    \"Other Vehicles/Objects\": [\n",
    "        2.44, 3.97, 0.80, 1.51, 2.02, \n",
    "        16.59, 5.23, 6.48, 0.01, 0.53, \n",
    "        1.34, 8.28, 0.00, 1.08, 3.03, \n",
    "        0.00, 2.16, 0.00, 0.00, 0.95, \n",
    "        1.30, 0.02, 0.16, 5.13, 4.69, \n",
    "        1.31, 0.31, 2.00, 1.09, 0.00, \n",
    "        0.00, 0.29, 0.00, 13.16, 0.00, 0.00 ]}\n",
    "\n",
    "# Convert to DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Calculate total accidents per vehicle type\n",
    "total_accidents = {\n",
    "    \"Two-Wheelers\": df[\"Two-Wheelers\"].sum(),\n",
    "    \"Auto-Rickshaws\": df[\"Auto-Rickshaws\"].sum(),\n",
    "    \"Cars, Jeeps, Taxis\": df[\"Cars, Jeeps, Taxis\"].sum(),\n",
    "    \"Buses\": df[\"Buses\"].sum(),\n",
    "    \"Trucks, Tempos, MAVs, Tractors\": df[\"Trucks, Tempos, MAVs, Tractors\"].sum(),\n",
    "    \"Other Motor Vehicles\": df[\"Other Motor Vehicles\"].sum(),\n",
    "    \"Other Vehicles/Objects\": df[\"Other Vehicles/Objects\"].sum()}\n",
    "\n",
    "# Convert the dictionary to a DataFrame for better readability\n",
    "total_accidents_df = pd.DataFrame(total_accidents, index=[\"Total Accidents\"])\n",
    "\n",
    "# Display the result\n",
    "(total_accidents_df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 290,
   "id": "b3416fa4-581b-43de-bc0b-88f8cfdb5eaa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Two-Wheelers</th>\n",
       "      <th>Auto-Rickshaws</th>\n",
       "      <th>Cars, Jeeps, Taxis</th>\n",
       "      <th>Trucks, Tempos, MAVs, Tractors</th>\n",
       "      <th>Buses</th>\n",
       "      <th>Other Motor Vehicles</th>\n",
       "      <th>Other Vehicles/Objects</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Total Persons Killed</th>\n",
       "      <td>91.85</td>\n",
       "      <td>19.67</td>\n",
       "      <td>84.37</td>\n",
       "      <td>94.46</td>\n",
       "      <td>34.68</td>\n",
       "      <td>45.8</td>\n",
       "      <td>27.39</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Two-Wheelers  Auto-Rickshaws  Cars, Jeeps, Taxis  \\\n",
       "Total Persons Killed         91.85           19.67               84.37   \n",
       "\n",
       "                      Trucks, Tempos, MAVs, Tractors  Buses  \\\n",
       "Total Persons Killed                           94.46  34.68   \n",
       "\n",
       "                      Other Motor Vehicles  Other Vehicles/Objects  \n",
       "Total Persons Killed                  45.8                   27.39  "
      ]
     },
     "execution_count": 290,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Create a DataFrame with the provided data\n",
    "data = {\n",
    "    \"States/UTs\": [\n",
    "        \"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \n",
    "        \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu & Kashmir\", \n",
    "        \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \n",
    "        \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \n",
    "        \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \n",
    "        \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\", \n",
    "        \"Andaman & Nicobar Is.\", \"Chandigarh\", \"Dadra & Nagar Haveli\", \n",
    "        \"Daman & Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\"],\n",
    "    \"Two-Wheelers\": [\n",
    "        3.82, 1.52, 1.72, 0.79, 4.41, \n",
    "        9.19, 2.79, 1.25, 2.46, 2.04, \n",
    "        1.84, 4.98, 2.88, 3.10, 3.62, \n",
    "        1.16, 0.47, 1.46, 0.61, 2.50, \n",
    "        4.25, 2.77, 0.82, 6.52, 4.34, \n",
    "        1.06, 0.95, 1.25, 1.46, 1.31, \n",
    "        1.89, 4.07, 3.29, 0.85, 0.00, \n",
    "        4.41 ],\n",
    "    \"Auto-Rickshaws\": [\n",
    "        1.86, 0.51, 0.24, 0.14, 0.14, \n",
    "        0.14, 0.99, 0.71, 4.41, 0.12, \n",
    "        0.39, 0.72, 0.79, 0.26, 0.56, \n",
    "        0.18, 0.27, 0.00, 0.91, 0.36, \n",
    "        0.36, 0.15, 0.00, 0.43, 2.08, \n",
    "        0.52, 0.08, 0.39, 0.10, 0.79, \n",
    "        0.09, 0.58, 0.00, 0.16, 0.00, \n",
    "        0.24],\n",
    "    \"Cars, Jeeps, Taxis\": [\n",
    "        1.74, 1.81, 1.71, 0.76, 2.54, \n",
    "        4.32, 2.27, 3.90, 6.47, 1.36, \n",
    "        1.20, 2.52, 3.19, 2.17, 1.79, \n",
    "        1.05, 1.28, 1.91, 0.96, 1.40, \n",
    "        4.27, 3.87, 6.71, 4.86, 2.82, \n",
    "        1.17, 2.51, 1.59, 0.74, 1.58, \n",
    "        4.93, 1.75, 0.00, 1.78, 0.00, \n",
    "        1.44],\n",
    "    \"Trucks, Tempos, MAVs, Tractors\": [\n",
    "        3.35, 1.88, 2.04, 1.57, 4.24, \n",
    "        2.26, 3.44, 5.34, 2.29, 1.77, \n",
    "        2.50, 4.40, 1.88, 3.90, 2.26, \n",
    "        1.75, 1.15, 3.65, 0.40, 2.92, \n",
    "        3.67, 4.83, 0.00, 3.37, 6.22, \n",
    "        1.01, 3.05, 2.25, 1.97, 1.31, \n",
    "        1.42, 6.98, 1.23, 2.16, 0.00, \n",
    "        2.00],\n",
    "    \"Buses\": [\n",
    "        1.08, 0.51, 0.79, 0.52, 0.74, \n",
    "        1.58, 0.72, 1.30, 1.84, 0.84, \n",
    "        0.82, 1.70, 2.46, 0.96, 0.42, \n",
    "        0.35, 0.37, 0.46, 0.35, 0.79, \n",
    "        1.40, 1.20, 0.00, 2.75, 1.62, \n",
    "        0.24, 1.34, 0.63, 0.73, 0.79, \n",
    "        2.18, 1.16, 0.41, 0.67, 0.00, \n",
    "        0.96],\n",
    "    \"Other Motor Vehicles\": \n",
    "        [1.54, 0.00, 1.29, 0.28, 3.08, \n",
    "        0.00, 1.31, 2.39, 0.00, 1.71, \n",
    "        0.59, 1.48, 0.92, 1.32, 1.33, \n",
    "        1.40, 0.54, 1.91, 0.86, 1.02, \n",
    "        1.59, 2.16, 1.97, 1.84, 3.04, \n",
    "        0.71, 0.67, 0.95, 0.82, 0.26, \n",
    "        1.89, 2.33, 1.23, 0.33, 0.00, \n",
    "        3.04\n",
    "    ],\n",
    "    \"Other Vehicles/Objects\": [\n",
    "        1.69, 2.38, 0.30, 0.66, 0.60, \n",
    "        2.40, 1.64, 2.79, 0.00, 0.07, \n",
    "        0.62, 1.30, 0.00, 0.09, 1.41, \n",
    "        0.00, 0.67, 0.00, 0.00, 0.37, \n",
    "        1.12, 0.02, 0.16, 1.29, 1.29, \n",
    "        0.41, 0.10, 1.10, 0.62, 0.00, \n",
    "        0.00, 0.29, 0.00, 4.00, 0.00, \n",
    "        0.00]}\n",
    "\n",
    "# Convert to DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Calculate total persons killed per vehicle type\n",
    "total_killed = {\n",
    "    \"Two-Wheelers\": df[\"Two-Wheelers\"].sum(),\n",
    "    \"Auto-Rickshaws\": df[\"Auto-Rickshaws\"].sum(),\n",
    "    \"Cars, Jeeps, Taxis\": df[\"Cars, Jeeps, Taxis\"].sum(),\n",
    "    \"Trucks, Tempos, MAVs, Tractors\": df[\"Trucks, Tempos, MAVs, Tractors\"].sum(),\n",
    "    \"Buses\": df[\"Buses\"].sum(),\n",
    "    \"Other Motor Vehicles\": df[\"Other Motor Vehicles\"].sum(),\n",
    "    \"Other Vehicles/Objects\": df[\"Other Vehicles/Objects\"].sum()}\n",
    "\n",
    "# Convert the dictionary to a DataFrame for better readability\n",
    "total_killed_df = pd.DataFrame(total_killed, index=[\"Total Persons Killed\"])\n",
    "\n",
    " # Display the result\n",
    "(total_killed_df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 304,
   "id": "bc0303ca-2dff-4f8c-bf18-73e4eb0ca7c6",
   "metadata": {},
   "outputs": [
    {
     "ename": "IndentationError",
     "evalue": "unexpected indent (1742942248.py, line 78)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[304], line 78\u001b[0;36m\u001b[0m\n\u001b[0;31m    df[\"Total Fatal Accidents\"] = df[[\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Create a DataFrame with the provided data\n",
    "data = {\n",
    "    \"States/UTs\": [\n",
    "        \"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \n",
    "        \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu & Kashmir\", \n",
    "        \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \n",
    "        \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \n",
    "        \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \n",
    "        \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\", \n",
    "        \"Andaman & Nicobar Is.\", \"Chandigarh\", \"Dadra & Nagar Haveli\", \n",
    "        \"Daman & Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\"\n",
    "    ],\n",
    "    \"Two-Wheelers - Road Accidents - Fatal\": [\n",
    "        3.74, 1.08, 1.57, 0.74, 4.20, \n",
    "        8.91, 2.54, 1.18, 2.40, 1.80, \n",
    "        1.63, 4.05, 2.85, 2.79, 3.31, \n",
    "        1.16, 0.47, 1.37, 0.51, 2.36, \n",
    "        3.89, 2.70, 0.82, 6.33, 4.16, \n",
    "        1.01, 0.80, 1.10, 1.38, 1.05, \n",
    "        1.89, 3.49, 3.29, 0.82, 0.00, \n",
    "        3.61\n",
    "    ],\n",
    "    \"Auto-Rickshaws - Road Accidents - Fatal\": [\n",
    "        1.81, 0.51, 0.21, 0.12, 0.12, \n",
    "        0.14, 0.84, 0.51, 3.35, 0.08, \n",
    "        0.35, 0.59, 0.75, 0.21, 0.47, \n",
    "        0.18, 0.27, 0.00, 0.76, 0.35, \n",
    "        0.35, 0.18, 0.00, 0.42, 1.85, \n",
    "        0.52, 0.06, 0.32, 0.10, 0.79, \n",
    "        0.09, 0.58, 0.00, 0.16, 0.00, \n",
    "        0.24\n",
    "    ],\n",
    "    \"Cars, Jeeps, Taxis - Road Accidents - Fatal\": [\n",
    "        1.70, 1.23, 1.52, 0.70, 1.84, \n",
    "        4.11, 1.93, 3.54, 2.97, 1.12, \n",
    "        0.96, 2.34, 2.99, 1.76, 1.59, \n",
    "        0.91, 1.21, 1.55, 0.76, 1.18, \n",
    "        4.03, 3.51, 5.90, 4.32, 2.53, \n",
    "        0.95, 1.87, 1.35, 0.63, 1.58, \n",
    "        4.83, 1.16, 0.00, 1.68, 0.00, \n",
    "        2.08\n",
    "    ],\n",
    "    \"Trucks, Tempos, MAVs, Tractors - Road Accidents - Fatal\": [\n",
    "        3.25, 1.52, 1.66, 1.46, 3.68, \n",
    "        2.26, 3.10, 5.08, 1.79, 1.63, \n",
    "        2.14, 3.65, 1.75, 3.42, 2.17, \n",
    "        1.33, 1.11, 3.10, 0.40, 2.62, \n",
    "        3.42, 4.21, 0.00, 3.05, 5.80, \n",
    "        0.90, 2.81, 1.94, 1.83, 0.79, \n",
    "        1.42, 6.40, 1.23, 2.10, 0.00, \n",
    "        3.45\n",
    "    ],\n",
    "    \"Other Motor Vehicles - Road Accidents - Fatal\": [\n",
    "        1.45, 0.00, 1.20, 0.26, 2.99, \n",
    "        0.00, 1.16, 2.35, 0.00, 1.58, \n",
    "        0.52, 1.91, 0.88, 1.23, 1.32, \n",
    "        1.37, 0.47, 1.55, 0.71, 0.84, \n",
    "        1.56, 1.97, 1.80, 1.73, 2.55, \n",
    "        0.65, 0.55, 0.85, 0.82, 0.26, \n",
    "        1.89, 2.33, 1.23, 0.33, 0.00, \n",
    "        0.88\n",
    "    ],\n",
    "    \"Other Vehicles/Objects - Road Accidents - Fatal\": [\n",
    "        0.89, 1.95, 0.23, 0.59, 0.56, \n",
    "        2.40, 1.52, 2.71, 0.00, 0.08, \n",
    "        0.62, 1.57, 0.00, 0.20, 1.02, \n",
    "        0.00, 0.57, 0.00, 0.00, 0.37, \n",
    "        0.99, 0.01, 0.16, 1.25, 1.19, \n",
    "        0.38, 0.16, 0.83, 0.54, 0.00, \n",
    "        0.00]}\n",
    "\n",
    "# Convert to DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Calculate total fatal accidents per state\n",
    "      df[\"Total Fatal Accidents\"] = df[[\n",
    "      \"Two-Wheelers - Road Accidents - Fatal\",\n",
    "      \"Auto-Rickshaws - Road Accidents - Fatal\",\n",
    "      \"Cars, Jeeps, Taxis - Road Accidents - Fatal\",\n",
    "      \"Trucks, Tempos, MAVs, Tractors - Road Accidents - Fatal\",\n",
    "      \"Other Motor Vehicles - Road Accidents - Fatal\",\n",
    "      \"Other Vehicles/Objects - Road Accidents - Fatal\"]].sum(axis=1)\n",
    "\n",
    "# Prepare a DataFrame for better readability\n",
    "      result_df = df[[\"States/UTs\", \"Total Fatal Accidents\"]].copy()\n",
    "      result_df.set_index(\"States/UTs\", inplace=True)\n",
    "\n",
    "# Display the result\n",
    "      (result_df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 313,
   "id": "a66af711-1032-4fb1-b735-31a812ecfc5b",
   "metadata": {},
   "outputs": [
    {
     "ename": "IndentationError",
     "evalue": "unexpected indent (230843680.py, line 34)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[313], line 34\u001b[0;36m\u001b[0m\n\u001b[0;31m    df = pd.DataFrame(data)\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Create a DataFrame with the provided data\n",
    "data = {\n",
    "    \"States/UTs\": [\n",
    "        \"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \n",
    "        \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu & Kashmir\", \n",
    "        \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \n",
    "        \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Orissa\", \n",
    "        \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \n",
    "        \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\", \n",
    "        \"A & N Islands\", \"Chandigarh\", \"D & N Haveli\", \"Daman & Diu\", \n",
    "        \"Delhi\", \"Lakshadweep\", \"Puducherry\"],\n",
    "    \"06-900hrs - Day - 2014\": [2548, 43, 1034, 1433, 1677, 381, 2707, 1199, 285, 477, 789, 4492, 3484, 6127, 5199, 38, 23, 9, 33, 1135, 979, 2717, 11, 7973, 2078, 61, 189, 3724, 1529, 25, 45, 8, 4, 879, 0, 115],\n",
    "    \"09-1200hrs - Day - 2014\": [3448, 30, 1633, 1661, 2316, 681, 3732, 1414, 465, 1098, 988, 6522, 6979, 10708, 9247, 153, 24, 10, 82, 1530, 924, 3853, 50, 9593, 2468, 150, 218, 4417, 2431, 28, 46, 7, 4, 1072, 0, 155],\n",
    "    \"12-1500hrs - Day - 2014\": [3491, 28, 1092, 1484, 2064, 711, 3547, 1458, 526, 1328, 713, 6665, 5922, 9797, 9926, 149, 43, 17, 79, 1262, 852, 4125, 47, 9955, 2527, 122, 239, 4968, 1790, 55, 53, 13, 6, 1151, 1, 178],\n",
    "    \"15-1800hrs - Day - 2014\": [3606, 20, 1456, 1485, 2550, 818, 3911, 1687, 675, 1162, 892, 7181, 8253, 9108, 10551, 161, 97, 35, 88, 1618, 928, 4506, 37, 11902, 3107, 150, 268, 4780, 1883, 36, 48, 22, 8, 1204, 0, 203],\n",
    "    \"18-2100hrs - Night - 2014\": [4058, 16, 979, 1092, 2256, 803, 3987, 1690, 585, 878, 699, 7740, 7171, 7848, 10656, 164, 76, 29, 18, 1520, 1105, 4302, 41, 13927, 3304, 132, 225, 4378, 1741, 41, 79, 28, 12, 1423, 0, 251],\n",
    "    \"21-2400hrs - Night - 2014\": [2989, 23, 416, 823, 1394, 485, 2643, 1324, 269, 401, 370, 5050, 2919, 4770, 7446, 58, 115, 18, 5, 1022, 713, 2545, 17, 7158, 2424, 70, 119, 3704, 1373, 23, 3, 1673, 0, 139],\n",
    "    \"00-300hrs - Night - 2014\": [2031, 19, 308, 677, 755, 214, 1471, 948, 128, 281, 236, 3042, 617, 2484, 4762, 12, 81, 4, 0, 656, 381, 1364, 0, 2685, 1753, 16, 64, 2435, 966, 4, 2, 726, 0, 29],\n",
    "    \"03-600hrs - Night - 2014\": [2269, 26, 226, 514, 809, 136, 1714, 956, 125, 236, 514, 3021, 937, 2630, 3840, 8, 83, 10, 0, 905, 509, 1216, 0, 4057, 2417, 15, 88, 2628, 1162, 6, 0, 495, 0, 41],\n",
    "    \"Total Accidents - 2014\": [24440, 205, 7144, 9556, 13821, 4229, 23712, 10676, 3058, 5861, 5201, 43713, 36282, 53472, 61627, 743, 542, 132, 305, 9648, 6391, 24628, 203, 67250, 20078, 716, 1410, 31034, 12875, 218, 369, 87, 39, 8623, 1, 1111],\n",
    "    \"06-900hrs - (Day) - 2016\": [2707, 50, 940, 1169, 1592, 402, 2357, 1314, 301, 401, 676, 4953, 4110, 5340, 3802, 31, 72, 8, 8, 1171, 892, 2461, 24, 9009, 2199, 68, 239, 5073, 2091, 29, 37, 5, 4, 766, 0, 221],\n",
    "    \"09-1200hrs - (Day) - 2016\": [3516, 37, 1354, 1431, 2269, 686, 3412, 1469, 462, 904, 665, 7158, 7769, 9079, 5611, 78, 74, 11, 15, 1658, 1010, 3674, 54, 10241, 3123, 124, 245, 5351, 3029, 34, 58, 8, 6, 923, 0, 233],\n",
    "    \"12-1500hrs - (Day) - 2016\": [3617, 33, 1280, 1268, 2221, 732, 3347, 1614, 492, 1216, 655, 7031, 6509, 9653, 5768, 93, 62, 7, 19, 1631, 995, 4024, 34, 10111, 3226, 101, 268, 4596, 1454, 49, 70, 10, 13, 935, 0, 246],\n",
    "    \"15-1800hrs - (Day) - 2016\": [4348, 38, 1219, 1244, 2441, 797, 3743, 1737, 612, 1511, 809, 7458, 8850, 10079, 6520, 132, 82, 28, 11, 1818, 1086, 4473, 41, 12103, 4182, 91, 242, 4974, 3829, 52, 63, 15, 11, 942, 0, 253],\n",
    "    \"18-2100hrs - (Night) - 2016\": [4742, 25, 1114, 1073, 2657, 861, 4106, 2010, 687, 794, 671, 7342, 7188, 8952, 6813, 139, 113, 11, 10, 1840, 1301, 4001, 21, 14241, 4602, 103, 260, 5100, 2054, 40, 69, 16, 22, 1247, 0, 330],\n",
    "    \"21-2400hrs - (Night) - 2016\": [2774, 20, 683, 689, 1242, 451, 2455, 1305, 341, 358, 472, 4832, 3112, 6484, 4939, 43, 78, 8, 8, 1094, 804, 2355, 16, 7827, 2730, 57, 154, 3622, 510, 17, 86, 1, 3, 1138, 1, 239],\n",
    "    \"00-300hrs - (Night) - 2016\": [1461, 19, 378, 466, 619, 237, 1281, 896, 146, 147, 440, 2595, 764, 2433, 3394, 6, 72, 1, 0, 567, 427, 1005, 0, 3415, 1280, 4, 57, 2737, 510, 8, 30, 1, 12, 747, 0, 144],\n",
    "    \"03-600hrs - (Night) - 2016\": [1723, 27, 467, 882, 539, 138, 1158, 889, 127, 170, 544, 3034, 1118, 1952, 3981, 6, 67, 9, 3, 753, 6952, 1073, 12, 4484, 1469, 9, 126, 4159, 436, 9, 15, 1, 0, 677, 0, 100],\n",
    "    \"Total Accidents - 2016\": [24888, 249, 7435, 8222, 13580, 4304, 21859, 11234, 3168, 5501, 4932, 44403, 39420, 53972, 39878, 538, 620, 83, 75, 10532, 6952, 23066, 210, 71431, 22811, 557, 1591, 35612, 13580, 238, 428, 70, 71, 7375, 1, 1766]}\n",
    "\n",
    "# Convert to DataFrame\n",
    "    df = pd.DataFrame(data)\n",
    "\n",
    "# Calculate total day and night accidents for 2014 and 2016\n",
    "    df['Total Day Accidents - 2014'] = df[['06-900hrs - Day - 2014', '09-1200hrs - Day - 2014', \n",
    "                                         '12-1500hrs - Day - 2014', '15-1800hrs - Day - 2014']].sum(axis=1)\n",
    "\n",
    "    df['Total Night Accidents - 2014'] = df[['18-2100hrs - Night - 2014', '21-2400hrs - Night - 2014', \n",
    "                                           '00-300hrs - Night - 2014', '03-600hrs - Night - 2014']].sum(axis=1)\n",
    "\n",
    "    df['Total Day Accidents - 2016'] = df[['06-900hrs - (Day) - 2016', '09-1200hrs - (Day) - 2016', \n",
    "                                         '12-1500hrs - (Day) - 2016', '15-1800hrs - (Day) - 2016']].sum(axis=1)\n",
    "\n",
    "    df['Total Night Accidents - 2016'] = df[['18-2100hrs - (Night) - 2016', '21-2400hrs - (Night) - 2016', \n",
    "                                           '00-300hrs - (Night) - 2016', '03-600hrs - (Night) - 2016']].sum(axis=1)\n",
    "\n",
    "# Prepare a summary DataFrame\n",
    "    summary_df = df[['States/UTs', 'Total Day Accidents - 2014', 'Total Night Accidents - 2014', \n",
    "                  'Total Day Accidents - 2016', 'Total Night Accidents - 2016']]\n",
    "\n",
    "# Display the result\n",
    "    (summary_df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1e1dc434-ee07-406f-8d48-f17fcc081aeb",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "anaconda-panel-2023.05-py310",
   "language": "python",
   "name": "conda-env-anaconda-panel-2023.05-py310-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
